# -*- coding: utf-8 -*-
#
# code_aster documentation build configuration file, created by
# sphinx-quickstart on Wed Oct  4 08:11:50 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import os
import os.path as osp
import sys
import time

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
DOCDIR = osp.dirname(__file__)
SRCDIR = osp.abspath(osp.join(osp.dirname(__file__), os.pardir))
BUILDDIR = os.environ.get("BUILDDIR", "build/mpi/release/doc")

paths = [
    osp.join(DOCDIR, "_extensions"),
    osp.join(DOCDIR, "_automatic_"),
    SRCDIR,
    osp.join(SRCDIR, "code_aster"),
    BUILDDIR,
    osp.join(BUILDDIR, "code_aster"),
    osp.join(DOCDIR, "examples"),
]

sys.path = paths + sys.path

# -- General configuration ------------------------------------------------
extensions = [
    # 'sphinx.ext.intersphinx',
    "sphinx.ext.autodoc",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx.ext.imgmath",
    "sphinx.ext.viewcode",
    "sphinx.ext.inheritance_diagram",
    "sphinx.ext.napoleon",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "code_aster"
copyright = "1989-%s, EDF R&D - www.code-aster.org" % time.strftime("%Y")

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = ""
# The full version, including alpha/beta/rc tags.
release = ""

today_fmt = "%Y"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
# language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ["_build"]

autodoc_mock_imports = ["aster", "aster_core"]
autodoc_member_order = "bysource"

# -- Options for HTML output ----------------------------------------------
html_theme = "sphinx_rtd_theme"
html_theme_path = ["_extensions"]
html_favicon = "img/code_aster_favicon.png"
html_logo = "img/code_aster_200.png"
html_static_path = ["_static"]

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
# html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
html_last_updated_fmt = "%b %d, %Y"

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
# html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
# html_additional_pages = {}

# If false, no module index is generated.
# html_domain_indices = True

# If false, no index is generated.
# html_use_index = True

# If true, the index is split into individual pages for each letter.
# html_split_index = False

# If true, links to the reST sources are added to the pages.
html_show_sourcelink = False
html_copy_source = False

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
# html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Output file base name for HTML help builder.
htmlhelp_basename = "code_asterdoc"

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    "papersize": "a4paper",
    # The font size ('10pt', '11pt' or '12pt').
    #'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #'preamble': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    ("index", "code_aster.tex", "code\\_aster Documentation", "code\\_aster", "manual")
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
# latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
# latex_use_parts = False

# If true, show page references after internal links.
# latex_show_pagerefs = False

# If true, show URL addresses after external links.
# latex_show_urls = False

# Documents to append as an appendix to all manuals.
# latex_appendices = []

# If false, no module index is generated.
# latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [("index", "code_aster", "code_aster Documentation", ["code_aster"], 1)]

# If true, show URL addresses after external links.
# man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        "index",
        "code_aster",
        "code_aster Documentation",
        "code_aster",
        "code_aster",
        "One line description of project.",
        "Miscellaneous",
    )
]

# Documents to append as an appendix to all manuals.
# texinfo_appendices = []

# If false, no module index is generated.
# texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
# texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
# texinfo_no_detailmenu = False

# -- Options for napoleon extension  --------------------------------------

# If true, enables generation of the documentation for special class methods
# like __eq__, __get__, __repr__, etc.
napoleon_include_special_with_doc = True

# If true, enables generation of the documentation for private class methods,
# i.e. methods that start with single underscore: e.g. _func()
napoleon_include_private_with_doc = True

# Show todo blocks
todo_include_todos = True


# adapt css
def setup(app):
    try:
        app.add_css_file("mystyles.css")
    except AttributeError:
        # version < 1.8
        app.add_stylesheet("mystyles.css")


# List of modules which should be ignored when checking coverage.
# coverage_ignore_modules = []

# List of functions which should be ignored when checking coverage.
# coverage_ignore_functions = []

# List of classes which should be ignored when checking coverage.
# coverage_ignore_classes = ["UndoMenu", "UndoRedoItem"]

# Set to False to not write headlines.
# coverage_write_headline = False

# Skip objects that are not documented in the source with a docstring. False by default.
# coverage_skip_undoc_in_source = True

# intersphinx_mapping = {'python': ('https://docs.python.org/2.7', None)}
