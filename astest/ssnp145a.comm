# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))

from math import *

Young = 2.0e5
Poisson = 0.3
S0 = 300.0
a = 100.0
b = 200.0
ang = pi / 6


def P(c):
    """
    Pression fonction du rayon de la zone plastique
    Si c=b : pression critique
    """
    return 2 * S0 * log(c / a) + 2.0 / 3.0 * S0 * (b**3 - c**3) / b**3


MA = LIRE_MAILLAGE(FORMAT="MED")


ACIER = DEFI_MATERIAU(
    ELAS=_F(E=Young, NU=Poisson), ECRO_LINE=_F(D_SIGM_EPSI=0, SY=S0), ECRO_NL=_F(R0=S0)
)

CHMAT = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(GROUP_MA="MATIERE", MATER=ACIER))

MO = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="AXIS"))


MODI_MAILLAGE(reuse=MA, MAILLAGE=MA, ORIE_PEAU=_F(GROUP_MA_PEAU="PEAU_INT"))


SYMETRIE = AFFE_CHAR_MECA(
    MODELE=MO, FACE_IMPO=(_F(GROUP_MA="SYME_INF", DY=0.0), _F(GROUP_MA="SYME_SUP", DNOR=0.0))
)

PRESSION = AFFE_CHAR_MECA(MODELE=MO, PRES_REP=_F(GROUP_MA="PEAU_INT", PRES=1.0))


# AVEC VMIS_ISOT_LINE

temps = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=20, NOMBRE=20),))

DEFLIST = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=temps), ECHEC=_F(ACTION="DECOUPE", SUBD_METHODE="MANUEL", SUBD_NIVEAU=4)
)


EVOL = STAT_NON_LINE(
    MODELE=MO,
    CHAM_MATER=CHMAT,
    EXCIT=(_F(CHARGE=SYMETRIE), _F(CHARGE=PRESSION, TYPE_CHARGE="FIXE_PILO")),
    COMPORTEMENT=_F(RELATION="VMIS_ISOT_LINE"),
    INCREMENT=_F(LIST_INST=DEFLIST, NUME_INST_FIN=1),
    PILOTAGE=_F(TYPE="PRED_ELAS", GROUP_MA="MATIERE", COEF_MULT=1e10, ETA_PILO_R_MIN=0),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(SIGM_REFE=S0, RESI_REFE_RELA=1.0e-4, ITER_GLOB_MAXI=10),
)


STAT_NON_LINE(
    reuse=EVOL,
    ETAT_INIT=_F(EVOL_NOLI=EVOL),
    MODELE=MO,
    CHAM_MATER=CHMAT,
    EXCIT=(_F(CHARGE=SYMETRIE), _F(CHARGE=PRESSION, TYPE_CHARGE="FIXE_PILO")),
    COMPORTEMENT=_F(RELATION="VMIS_ISOT_LINE"),
    INCREMENT=_F(LIST_INST=DEFLIST),
    PILOTAGE=_F(
        TYPE="PRED_ELAS", GROUP_MA="MATIERE", COEF_MULT=1.0, ETA_PILO_R_MIN=0, EVOL_PARA="CROISSANT"
    ),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(SIGM_REFE=S0, RESI_REFE_RELA=1.0e-4, ITER_GLOB_MAXI=10),
)

ETA_PILO = RECU_FONCTION(RESULTAT=EVOL, NOM_PARA_RESU="ETA_PILOTAGE", TOUT_ORDRE="OUI")


TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=416.446420248,
        VALE_REFE=P(b),
        VALE_PARA=20,
        REFERENCE="ANALYTIQUE",
        PRECISION=1.5e-3,
        NOM_PARA="INST",
        FONCTION=ETA_PILO,
    )
)


# AVEC VMIS_ISOT_NL

temps = DEFI_LIST_REEL(
    DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=1.0e-6, NOMBRE=1), _F(JUSQU_A=20, NOMBRE=20))
)

DEFLIST = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=temps), ECHEC=_F(ACTION="DECOUPE", SUBD_METHODE="MANUEL", SUBD_NIVEAU=4)
)


evol_vinl = STAT_NON_LINE(
    MODELE=MO,
    CHAM_MATER=CHMAT,
    EXCIT=(_F(CHARGE=SYMETRIE), _F(CHARGE=PRESSION, TYPE_CHARGE="FIXE_PILO")),
    COMPORTEMENT=_F(RELATION="VMIS_ISOT_NL"),
    INCREMENT=_F(LIST_INST=DEFLIST),
    PILOTAGE=_F(
        TYPE="PRED_ELAS", GROUP_MA="MATIERE", COEF_MULT=38.5, ETA_PILO_R_MIN=0, SELECTION="MIXTE"
    ),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(SIGM_REFE=S0, RESI_REFE_RELA=1.0e-4, ITER_GLOB_MAXI=10),
)


eta_pilo_vinl = RECU_FONCTION(RESULTAT=evol_vinl, NOM_PARA_RESU="ETA_PILOTAGE", TOUT_ORDRE="OUI")


TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=416.4644452208,
        VALE_REFE=P(b),
        VALE_PARA=20,
        REFERENCE="ANALYTIQUE",
        PRECISION=1.5e-3,
        NOM_PARA="INST",
        FONCTION=eta_pilo_vinl,
    )
)


plas = POST_ELEM(
    MINMAX=_F(GROUP_MA="MATIERE", RESULTAT=evol_vinl, NOM_CHAM="VARI_ELGA", NOM_CMP="V1")
)


TEST_TABLE(
    TABLE=plas,
    NOM_PARA="MAX_V1",
    REFERENCE="ANALYTIQUE",
    VALE_CALC=0.0012987012337662429,
    VALE_REFE=0.05 / 38.5,
    FILTRE=_F(NOM_PARA="NUME_ORDRE", VALE_I=2),
)


# IMPR_TABLE(UNITE=6, TABLE=plas)

FIN()
