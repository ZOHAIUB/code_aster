# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2022 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

POURSUITE(CODE="OUI")

bamo = DEFI_BASE_MODALE(CLASSIQUE=_F(INTERF_DYNA=interdy, MODE_MECA=mode_rig, NMAX_MODE=999))

mael = MACR_ELEM_DYNA(BASE_MODALE=bamo)

# Table de sol en manuel pour reference :
# TABSOL=DEFI_SOL_MISS(MATERIAU=(_F(E=3.0e11,
#                                   NU=0.16,
#                                   RHO=2000.,
#                                   AMOR_HYST=0.10,),
#                                _F(E=3.0e11,
#                                   NU=0.16,
#                                   RHO=2000.,
#                                   AMOR_HYST=0.10,),),
#                      COUCHE=(_F(EPAIS=2.5,
#                                 RECEPTEUR='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=2.5,
#                                 RECEPTEUR='OUI',
#                                 SOURCE='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=4.0,
#                                 RECEPTEUR='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=4.0,
#                                 RECEPTEUR='OUI',
#                                 SOURCE='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=4.0,
#                                 RECEPTEUR='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=4.0,
#                                 RECEPTEUR='OUI',
#                                 SOURCE='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=5.0,
#                                 RECEPTEUR='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=5.0,
#                                 RECEPTEUR='OUI',
#                                 SOURCE='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=5.0,
#                                 RECEPTEUR='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=5.0,
#                                 RECEPTEUR='OUI',
#                                 SOURCE='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=5.5,
#                                 RECEPTEUR='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=5.5,
#                                 RECEPTEUR='OUI',
#                                 SOURCE='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=6.0,
#                                 RECEPTEUR='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=6.0,
#                                 RECEPTEUR='OUI',
#                                 SOURCE='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=6.5,
#                                 RECEPTEUR='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=6.5,
#                                 RECEPTEUR='OUI',
#                                 SOURCE='OUI',
#                                 NUME_MATE=1,),
#                              _F(EPAIS=10.,
#                                 RECEPTEUR='OUI',
#                                 SOURCE='OUI',
#                                 NUME_MATE=1,),
#                              _F(SUBSTRATUM='OUI',
#                                 NUME_MATE=2,),),
#                      TITRE='SOL HOMOGENE',)

TABSOL = DEFI_SOL_MISS(
    MATERIAU=_F(E=3.0e11, NU=0.16, RHO=2000.0, AMOR_HYST=0.10),
    COUCHE_AUTO=_F(
        Z0=5.0,
        SURF="NON",
        HOMOGENE="OUI",
        EPAIS_PHYS=87.0,
        GROUP_MA="SURFBAS2",
        NOMBRE_RECEPTEUR=2,
        GROUP_MA_INTERF="SURFBAS2",
        MAILLAGE=mail,
    ),
    TITRE="SOL HOMOGENE",
    INFO=2,
)

CALC_MISS(
    TYPE_RESU="FICHIER",
    PROJET="FDLV112B",
    VERSION="V6.6",
    TABLE_SOL=TABSOL,
    MATER_FLUIDE=_F(RHO=1000.0, CELE=1500.0, AMOR_BETA=0.0),
    MACR_ELEM_DYNA=mael,
    GROUP_MA_INTERF="SURFBAS2",
    GROUP_MA_FLU_STR="IFLUSTR2",
    GROUP_MA_FLU_SOL="IFLUSOL2",
    GROUP_MA_SOL_SOL="SLIBREM2",
    UNITE_IMPR_ASTER=26,
    UNITE_RESU_IMPE=25,
    UNITE_RESU_FORC=28,
    PARAMETRE=_F(
        FREQ_MIN=0.1,
        FREQ_MAX=3.0,
        FREQ_PAS=2.9,
        Z0=5.0,
        SURF="NON",
        ISSF="OUI",
        AUTO="OUI",
        OPTION_DREF="NON",
        OPTION_RFIC="NON",
        # Valeurs en manuel :
        # ALGO='REGU',
        # OFFSET_MAX=1000,
        # OFFSET_NB=5000,
    ),
)

nddlgen = NUME_DDL_GENE(BASE=bamo, STOCKAGE="PLEIN")

rigigen = PROJ_MATR_BASE(BASE=bamo, NUME_DDL_GENE=nddlgen, MATR_ASSE=MATRIGI)

massgen = PROJ_MATR_BASE(BASE=bamo, NUME_DDL_GENE=nddlgen, MATR_ASSE=MATMASS)

imp = LIRE_IMPE_MISS(
    BASE=bamo, NUME_DDL_GENE=nddlgen, FREQ_EXTR=3.0, UNITE_RESU_IMPE=25, ISSF="OUI"
)

imp0 = LIRE_IMPE_MISS(
    BASE=bamo, NUME_DDL_GENE=nddlgen, FREQ_EXTR=0.1, UNITE_RESU_IMPE=25, ISSF="OUI"
)

impe = LIRE_IMPE_MISS(
    BASE=bamo, NUME_DDL_GENE=nddlgen, FREQ_EXTR=3.0, UNITE_RESU_IMPE=25, ISSF="OUI", SYME="OUI"
)

impe0 = LIRE_IMPE_MISS(
    BASE=bamo, NUME_DDL_GENE=nddlgen, FREQ_EXTR=0.1, UNITE_RESU_IMPE=25, ISSF="OUI", SYME="OUI"
)

forc = LIRE_FORC_MISS(
    BASE=bamo,
    NUME_DDL_GENE=nddlgen,
    FREQ_EXTR=3.0,
    NOM_CMP="DX",
    NOM_CHAM="ACCE",
    ISSF="OUI",
    UNITE_RESU_FORC=28,
)

forc0 = LIRE_FORC_MISS(
    BASE=bamo,
    NUME_DDL_GENE=nddlgen,
    FREQ_EXTR=0.1,
    NOM_CMP="DX",
    NOM_CHAM="ACCE",
    ISSF="OUI",
    UNITE_RESU_FORC=28,
)

rito = COMB_MATR_ASSE(
    COMB_R=(_F(PARTIE="REEL", MATR_ASSE=impe0, COEF_R=1.0), _F(MATR_ASSE=rigigen, COEF_R=1.0)),
    SANS_CMP="LAGR",
)

mato = COMB_MATR_ASSE(
    COMB_R=(
        _F(PARTIE="REEL", MATR_ASSE=impe0, COEF_R=2.814e-3),
        _F(PARTIE="REEL", MATR_ASSE=impe, COEF_R=-2.814e-3),
        _F(MATR_ASSE=massgen, COEF_R=1.0),
    ),
    SANS_CMP="LAGR",
)

amto = COMB_MATR_ASSE(
    COMB_R=(
        _F(PARTIE="IMAG", MATR_ASSE=impe, COEF_R=5.30e-2),
        _F(PARTIE="IMAG", MATR_ASSE=impe0, COEF_R=-5.30e-2),
    ),
    SANS_CMP="LAGR",
)

modgen = CALC_MODES(
    MATR_RIGI=rito,
    VERI_MODE=_F(STOP_ERREUR="NON"),
    OPTION="BANDE",
    CALC_FREQ=_F(FREQ=(1.0, 20.0)),
    MATR_MASS=mato,
)
##


MODEF = REST_GENE_PHYS(RESU_GENE=modgen, TOUT_ORDRE="OUI", NOM_CHAM="DEPL")


MODEF = NORM_MODE(
    reuse=MODEF,
    MODE=MODEF,
    # MASSE=MATMASS,
    # RAIDE=MATRIGI,
    NORME="TRAN_ROTA",
)

EXTR = EXTR_MODE(
    FILTRE_MODE=_F(MODE=MODEF, CRIT_EXTR="MASS_GENE", SEUIL=1.0e-10),
    IMPRESSION=_F(CUMUL="OUI"),  # CRIT_EXTR='MASS_GENE',
)


TEST_RESU(
    RESU=(
        _F(RESULTAT=MODEF, NUME_ORDRE=1, PARA="FREQ", CRITERE="RELATIF", VALE_CALC=3.58165193504),
        _F(RESULTAT=MODEF, NUME_ORDRE=2, PARA="FREQ", CRITERE="RELATIF", VALE_CALC=3.64911997809),
        _F(RESULTAT=MODEF, NUME_ORDRE=3, PARA="FREQ", CRITERE="RELATIF", VALE_CALC=4.9566445617),
        _F(RESULTAT=MODEF, NUME_ORDRE=4, PARA="FREQ", CRITERE="RELATIF", VALE_CALC=6.24930188781),
        _F(RESULTAT=MODEF, NUME_ORDRE=5, PARA="FREQ", CRITERE="RELATIF", VALE_CALC=7.45692990834),
    )
)

imto = COMB_MATR_ASSE(
    COMB_C=(_F(MATR_ASSE=imp, COEF_C=(1 + 0j)), _F(MATR_ASSE=rigigen, COEF_C=(1 + 0.1j))),
    SANS_CMP="LAGR",
)

imto0 = COMB_MATR_ASSE(
    COMB_C=(_F(MATR_ASSE=imp0, COEF_C=(1 + 0j)), _F(MATR_ASSE=rigigen, COEF_C=(1 + 0.1j))),
    SANS_CMP="LAGR",
)

dyge = DYNA_VIBRA(
    BASE_CALCUL="GENE",
    TYPE_CALCUL="HARM",
    MATR_MASS=massgen,
    MATR_RIGI=imto,
    FREQ=3.0,
    EXCIT=_F(VECT_ASSE_GENE=forc, COEF_MULT=1.0),
    SOLVEUR=_F(METHODE="LDLT"),
)

dyge0 = DYNA_VIBRA(
    BASE_CALCUL="GENE",
    TYPE_CALCUL="HARM",
    MATR_MASS=massgen,
    MATR_RIGI=imto0,
    FREQ=0.1,
    EXCIT=_F(VECT_ASSE_GENE=forc0, COEF_MULT=1.0),
    SOLVEUR=_F(METHODE="LDLT"),
)

dyha = REST_GENE_PHYS(RESU_GENE=dyge, NOM_CHAM=("DEPL", "VITE", "ACCE"))

dyha0 = REST_GENE_PHYS(RESU_GENE=dyge0, NOM_CHAM=("DEPL", "VITE", "ACCE"))

dx253 = RECU_FONCTION(RESULTAT=dyha, NOM_CHAM="ACCE", NOM_CMP="DX", GROUP_NO="N253")

dx253_0 = RECU_FONCTION(RESULTAT=dyha0, NOM_CHAM="ACCE", NOM_CMP="DX", GROUP_NO="N253")

mdx253 = CALC_FONCTION(EXTRACTION=_F(FONCTION=dx253, PARTIE="MODULE"))

mdx253_0 = CALC_FONCTION(EXTRACTION=_F(FONCTION=dx253_0, PARTIE="MODULE"))

# VALEURS DE NON REGRESSION CORRIGEES SUITE A LA FICHE 16690

TEST_FONCTION(
    VALEUR=(
        _F(FONCTION=mdx253, VALE_PARA=3.0, VALE_CALC=5.688324),
        _F(
            FONCTION=mdx253_0,
            VALE_PARA=0.1,
            TOLE_MACHINE=0.0001,  # En attente issue24202
            VALE_CALC=1.001351,
        ),
    )
)

FIN()
# CHECKSUM:e58c588108ac5cafa08b970c60460011  -:FIN CHECKSUM
