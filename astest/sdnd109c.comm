# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------
#
DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="NON"))
# SDVERI='NON' car la verification est trop couteuse en CPU
import numpy as NU

mail = LIRE_MAILLAGE(UNITE=20, FORMAT="ASTER")

modele = AFFE_MODELE(
    MAILLAGE=mail, AFFE=_F(GROUP_MA=("GAC", "RESSORT"), PHENOMENE="MECANIQUE", MODELISATION="DIS_T")
)

Pesanteur = 10.0
Raidxyz = 2.0
Masse = 15.0
#
Kress = 500.0
Tfin = 10.0
#
carael = AFFE_CARA_ELEM(
    MODELE=modele,
    DISCRET=(
        _F(GROUP_MA="RESSORT", REPERE="LOCAL", CARA="K_T_D_L", VALE=(Kress, Kress, Kress)),
        _F(GROUP_MA="RESSORT", CARA="M_T_D_L", VALE=(0.0,)),
        _F(GROUP_MA="RESSORT", CARA="A_T_D_L", VALE=(0.0, 0.0, 0.0)),
        _F(GROUP_MA="GAC", REPERE="LOCAL", CARA="K_T_D_L", VALE=(Raidxyz, Raidxyz, Raidxyz)),
        _F(GROUP_MA="GAC", CARA="M_T_D_L", VALE=(Masse,)),
        _F(GROUP_MA="GAC", CARA="A_T_D_L", VALE=(0.0, 0.0, 0.0)),
    ),
)
charge = AFFE_CHAR_MECA(
    MODELE=modele,
    PESANTEUR=_F(GROUP_MA="GAC", GRAVITE=Pesanteur, DIRECTION=(1.0, 0.0, 0.0)),
    DDL_IMPO=(_F(GROUP_NO="PT2", DX=0.0, DY=0.0, DZ=0.0), _F(GROUP_NO="PT3", DY=0.0, DZ=0.0)),
)
FDeplT = FORMULE(
    VALE="0.25*sin(2.0*pi*INST)+0.10*sin(2.0*pi*1.5*INST)+0.10*sin(2.0*pi*3.0*INST)",
    NOM_PARA="INST",
)
pas = 1.0 / (4.0 * 10.0)
lsignal = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=Tfin, PAS=pas),))
DeplT = CALC_FONC_INTERP(
    FONCTION=FDeplT,
    LIST_PARA=lsignal,
    NOM_PARA="INST",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)
CLdepl = AFFE_CHAR_MECA_F(MODELE=modele, DDL_IMPO=(_F(GROUP_NO="PT3", DX=DeplT),))
#
ldepla = NU.array([0.00, 2.00, 5.00, 7.000, 9.500, 13.000, 16.000, 200.000]) / 10.0
lforce = NU.array([4.00, 4.00, 4.50, 4.000, 3.750, 3.500, 3.000, 3.000]) * 100.0
# Raideur variable
lraide = NU.array([2.00, 2.00, 1.80, 1.400, 1.400, 1.350, 1.330, 1.330]) * 1000.0
# Amortissement
lamort = NU.array([1.00, 1.00, 1.00, 0.800, 0.800, 0.700, 0.600, 0.600]) * 2.0

fctfx = DEFI_FONCTION(NOM_PARA="DX", ABSCISSE=ldepla, ORDONNEE=lforce)
fctrd = DEFI_FONCTION(NOM_PARA="DX", ABSCISSE=ldepla, ORDONNEE=lraide)
fctam = DEFI_FONCTION(NOM_PARA="DX", ABSCISSE=ldepla, ORDONNEE=lamort)

grilleac = DEFI_MATERIAU(
    INFO=2,
    DIS_CHOC_ENDO=_F(
        FX=fctfx, RIGI_NOR=fctrd, AMOR_NOR=fctam, DIST_1=0.0, DIST_2=0.0, CRIT_AMOR="INCLUS"
    ),
)

chmat = AFFE_MATERIAU(MAILLAGE=mail, AFFE=_F(GROUP_MA="GAC", MATER=grilleac))
#
# --------------------------------------------------------------------
pas1 = 0.005
l_inst1 = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=Tfin, PAS=pas1),))

resu1 = DYNA_NON_LINE(
    MODELE=modele,
    CHAM_MATER=chmat,
    CARA_ELEM=carael,
    EXCIT=(_F(CHARGE=charge), _F(CHARGE=CLdepl)),
    COMPORTEMENT=(_F(GROUP_MA="GAC", RELATION="CHOC_ENDO"),),
    INCREMENT=_F(LIST_INST=l_inst1),
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK", FORMULATION="DEPLACEMENT"),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0e-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE="TANGENTE", REAC_ITER=1),
    ARCHIVAGE=_F(LIST_INST=l_inst1),
)

# --------------------------------------------------------------------
pas2 = 0.010
l_inst2 = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=Tfin, PAS=pas2),))

resu2 = DYNA_NON_LINE(
    MODELE=modele,
    CHAM_MATER=chmat,
    CARA_ELEM=carael,
    EXCIT=(_F(CHARGE=charge), _F(CHARGE=CLdepl)),
    COMPORTEMENT=(_F(GROUP_MA="GAC", RELATION="CHOC_ENDO"),),
    INCREMENT=_F(LIST_INST=l_inst2),
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK", FORMULATION="DEPLACEMENT"),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0e-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE="TANGENTE", REAC_ITER=1),
    ARCHIVAGE=_F(LIST_INST=l_inst2),
)
#
DEPL11 = RECU_FONCTION(RESULTAT=resu1, NOM_CHAM="DEPL", NOM_CMP="DX", GROUP_NO="PT1")
FORC_1 = RECU_FONCTION(RESULTAT=resu1, NOM_CHAM="SIEF_ELGA", NOM_CMP="N", GROUP_MA="GAC", POINT=1)
PCUM_1 = RECU_FONCTION(RESULTAT=resu1, NOM_CHAM="VARI_ELGA", NOM_CMP="V1", GROUP_MA="GAC", POINT=1)
#
DEPL12 = RECU_FONCTION(RESULTAT=resu2, NOM_CHAM="DEPL", NOM_CMP="DX", GROUP_NO="PT1")
FORC_2 = RECU_FONCTION(RESULTAT=resu2, NOM_CHAM="SIEF_ELGA", NOM_CMP="N", GROUP_MA="GAC", POINT=1)
PCUM_2 = RECU_FONCTION(RESULTAT=resu2, NOM_CHAM="VARI_ELGA", NOM_CMP="V1", GROUP_MA="GAC", POINT=1)
#
# INST             DEPL              FORC              PCUM
Resultat1 = [
    1.1000000000e-01,
    8.6804086791e-02,
    0.0000000000e00,
    0.0000000000e00,
    1.4000000000e-01,
    1.4622888577e-01,
    -9.3095792503e01,
    0.0000000000e00,
    2.0000000000e-01,
    2.8097327013e-01,
    -3.6233269257e02,
    0.0000000000e00,
    2.1000000000e-01,
    3.0078128687e-01,
    -3.9672354452e02,
    2.2706240450e-03,
    3.0000000000e-01,
    3.8798512734e-01,
    -4.1111664718e02,
    7.4254318221e-02,
    3.7000000000e-01,
    3.3199220592e-01,
    -3.0526914583e02,
    7.4254318221e-02,
    4.5000000000e-01,
    1.8974360792e-01,
    -3.0040183334e01,
    7.4254318221e-02,
    4.6000000000e-01,
    1.7138645224e-01,
    -6.6968652845e-13,
    7.4254318221e-02,
    1.0300000000e00,
    1.6785146909e-01,
    0.0000000000e00,
    7.4254318221e-02,
    1.1000000000e00,
    3.3747572032e-01,
    -3.1606019552e02,
    7.4254318221e-02,
    1.1800000000e00,
    4.3182123828e-01,
    -4.1728206499e02,
    1.1101582913e-01,
    1.2200000000e00,
    4.1285952187e-01,
    -3.8277710960e02,
    1.1108444532e-01,
    1.3000000000e00,
    2.6562711167e-01,
    -1.0390830557e02,
    1.1108444532e-01,
    1.3300000000e00,
    1.9843452788e-01,
    0.0000000000e00,
    1.1108444532e-01,
    1.6800000000e00,
    2.0567904547e-01,
    0.0000000000e00,
    1.1108444532e-01,
    1.7000000000e00,
    2.1979948711e-01,
    -1.6529796527e01,
    1.1108444532e-01,
    1.7700000000e00,
    2.4743259945e-01,
    -6.8161611951e01,
    1.1108444532e-01,
    1.8600000000e00,
    2.0878196083e-01,
    -2.9044298874e-01,
    1.1108444532e-01,
    2.2300000000e00,
    2.1623771601e-01,
    -1.0177680808e01,
    1.1108444532e-01,
    2.2400000000e00,
    2.4403139616e-01,
    -6.3448813941e01,
    1.1108444532e-01,
    2.3900000000e00,
    5.0754826319e-01,
    -4.2944569071e02,
    1.7411868069e-01,
    2.5100000000e00,
    3.0660149147e-01,
    -6.0941273783e01,
    1.7411868069e-01,
    2.5200000000e00,
    2.7805299264e-01,
    -7.9612655038e00,
    1.7411868069e-01,
    3.1200000000e00,
    2.8372537345e-01,
    -1.8569515982e01,
    1.7411868069e-01,
    3.1400000000e00,
    3.7378822217e-01,
    -1.8603887898e02,
    1.7411868069e-01,
    3.1500000000e00,
    4.1767244970e-01,
    -2.6742042792e02,
    1.7411868069e-01,
    3.1600000000e00,
    4.5983153762e-01,
    -3.4545054892e02,
    1.7411868069e-01,
    3.1700000000e00,
    4.9957172057e-01,
    -4.1884422759e02,
    1.7411868069e-01,
    3.1800000000e00,
    5.3630027175e-01,
    -4.3184213810e02,
    2.0081334508e-01,
    3.1900000000e00,
    5.6970948623e-01,
    -4.3728563547e02,
    2.2803083196e-01,
    3.2000000000e00,
    5.9961786122e-01,
    -4.4096641915e02,
    2.5234363421e-01,
    3.3800000000e00,
    5.3060791594e-01,
    -1.4387495360e02,
    3.3775559075e-01,
    3.4000000000e00,
    4.7475529088e-01,
    -5.5402251567e01,
    3.3775559075e-01,
    4.2100000000e00,
    4.9816042349e-01,
    -9.5821718497e01,
    3.3775559075e-01,
    4.2300000000e00,
    5.8406533926e-01,
    -2.3171381200e02,
    3.3775559075e-01,
    4.2700000000e00,
    7.3113379624e-01,
    -4.0801677106e02,
    3.6222347996e-01,
    4.4600000000e00,
    6.7125598572e-01,
    -1.2436798424e02,
    4.8059003252e-01,
    4.4800000000e00,
    6.0202627677e-01,
    -2.7966337737e01,
    4.8059003252e-01,
    5.2100000000e00,
    7.2866234310e-01,
    -2.0665472132e02,
    4.8059003252e-01,
    5.2300000000e00,
    8.3504792376e-01,
    -3.5455804168e02,
    4.8059003252e-01,
    5.2600000000e00,
    9.6538764379e-01,
    -3.7339784123e02,
    5.9601233551e-01,
    5.4500000000e00,
    9.0282880561e-01,
    -6.7119381560e01,
    7.5155263498e-01,
    5.4700000000e00,
    8.2986107276e-01,
    0.0000000000e00,
    7.5155263498e-01,
    6.2800000000e00,
    1.0175987529e00,
    -2.3010382255e02,
    7.5155263498e-01,
    6.3000000000e00,
    1.1525393235e00,
    -3.5529854662e02,
    7.9432835795e-01,
    6.3100000000e00,
    1.2134947597e00,
    -3.5098943117e02,
    8.5613794527e-01,
    6.5000000000e00,
    1.3696924094e00,
    -8.0009337927e01,
    1.2053237645e00,
    6.5100000000e00,
    1.3244423913e00,
    -1.9916616452e01,
    1.2053237645e00,
    7.3400000000e00,
    1.5254777332e00,
    -2.9360565317e02,
    1.2053237645e00,
    7.3500000000e00,
    1.5980096539e00,
    -3.0470003551e02,
    1.2682060199e00,
    7.3600000000e00,
    1.6650208332e00,
    -2.9364078707e02,
    1.3420144153e00,
    7.3700000000e00,
    1.7264017314e00,
    -2.8878335315e02,
    1.4061151110e00,
    7.4900000000e00,
    1.9763528951e00,
    -2.5498017830e02,
    1.6779471610e00,
    7.5400000000e00,
    1.7985656769e00,
    -2.2251334817e01,
    1.6779471610e00,
    7.5500000000e00,
    1.7455528195e00,
    0.0000000000e00,
    1.6779471610e00,
    8.3900000000e00,
    2.0076947492e00,
    -2.8551108706e02,
    1.6920152492e00,
    8.4000000000e00,
    2.1137451299e00,
    -2.8551108706e02,
    1.7974208994e00,
    8.4100000000e00,
    2.2124549783e00,
    -2.8551108706e02,
    1.8954508292e00,
    8.5300000000e00,
    2.7033450952e00,
    -2.6520928036e02,
    2.3947366129e00,
    8.5700000000e00,
    2.5473679396e00,
    -6.2468163389e01,
    2.3947366129e00,
    8.5800000000e00,
    2.4849776229e00,
    0.0000000000e00,
    2.3947366129e00,
    9.4700000000e00,
    2.7589032273e00,
    -2.8548701778e02,
    2.4425224639e00,
    9.4800000000e00,
    2.8559729105e00,
    -2.8548701778e02,
    2.5387205444e00,
    9.4900000000e00,
    2.9431741953e00,
    -2.8548701778e02,
    2.6250129178e00,
    9.5800000000e00,
    3.2295251885e00,
    -2.6316367578e02,
    2.9226601551e00,
    9.5900000000e00,
    3.2022713905e00,
    -2.2834219463e02,
    2.9226601551e00,
    9.6000000000e00,
    3.1632908028e00,
    -1.7788422235e02,
    2.9226601551e00,
    9.6100000000e00,
    3.1129916877e00,
    -1.1231413721e02,
    2.9226601551e00,
    9.6200000000e00,
    3.0519381277e00,
    -3.2364255544e01,
    2.9226601551e00,
]
Instant = Resultat1[0::4]
Deplace = Resultat1[1::4]
Force = Resultat1[2::4]
Pcumul = Resultat1[3::4]
motclef = {}
motclef["VALEUR"] = []
for ii in range(len(Instant)):
    # Pour Force
    if abs(Force[ii]) > 1.0:
        motclef["VALEUR"].append(
            _F(FONCTION=FORC_1, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Force[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=FORC_1,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Force[ii],
                CRITERE="ABSOLU",
            )
        )
    # Pour Pcumul
    if abs(Pcumul[ii]) > 0.001:
        motclef["VALEUR"].append(
            _F(FONCTION=PCUM_1, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Pcumul[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=PCUM_1,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Pcumul[ii],
                CRITERE="ABSOLU",
            )
        )
    # Pour Deplace
    if abs(Deplace[ii]) > 0.001:
        motclef["VALEUR"].append(
            _F(FONCTION=DEPL11, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Deplace[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=DEPL11,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Deplace[ii],
                CRITERE="ABSOLU",
            )
        )
TEST_FONCTION(**motclef)
#
# INST             DEPL              FORC              PCUM
Resultat2 = [
    1.1000000000e-01,
    8.6799114482e-02,
    -1.4032228873e-14,
    0.0000000000e00,
    1.4000000000e-01,
    1.4609122827e-01,
    -9.2824469740e01,
    0.0000000000e00,
    2.0000000000e-01,
    2.8055552676e-01,
    -3.6150702460e02,
    0.0000000000e00,
    2.1000000000e-01,
    3.0034645000e-01,
    -3.9666164161e02,
    1.9023637244e-03,
    3.0000000000e-01,
    3.8772260997e-01,
    -4.1108713580e02,
    7.4029834675e-02,
    3.7000000000e-01,
    3.3206126965e-01,
    -3.0587232462e02,
    7.4029834675e-02,
    4.5000000000e-01,
    1.9003316921e-01,
    -3.1056784761e01,
    7.4029834675e-02,
    4.6000000000e-01,
    1.7166102332e-01,
    -6.8922645369e-13,
    7.4029834675e-02,
    1.0300000000e00,
    1.6758046415e-01,
    0.0000000000e00,
    7.4029834675e-02,
    1.1000000000e00,
    3.3713923130e-01,
    -3.1588729545e02,
    7.4029834675e-02,
    1.1800000000e00,
    4.3173658476e-01,
    -4.1728101306e02,
    1.1094941362e-01,
    1.2200000000e00,
    4.1300686160e-01,
    -3.8334192188e02,
    1.1094941362e-01,
    1.3000000000e00,
    2.6624214487e-01,
    -1.0536070396e02,
    1.1094941362e-01,
    1.3300000000e00,
    1.9907191286e-01,
    -1.6413537196e-12,
    1.1094941362e-01,
    1.6800000000e00,
    2.0422731670e-01,
    0.0000000000e00,
    1.1094941362e-01,
    1.7000000000e00,
    2.1835789755e-01,
    -1.4057306018e01,
    1.1094941362e-01,
    1.7700000000e00,
    2.4662833211e-01,
    -6.6935183434e01,
    1.1094941362e-01,
    1.8600000000e00,
    2.0952809374e-01,
    -2.9857841744e-01,
    1.1094941362e-01,
    2.2300000000e00,
    2.1792563902e-01,
    -1.3680178957e01,
    1.1094941362e-01,
    2.2400000000e00,
    2.4550488951e-01,
    -6.6538892232e01,
    1.1094941362e-01,
    2.3900000000e00,
    5.0519501041e-01,
    -4.2934661392e02,
    1.7207051723e-01,
    2.5100000000e00,
    3.0340879496e-01,
    -5.8895077992e01,
    1.7207051723e-01,
    2.5200000000e00,
    2.7496417034e-01,
    -6.0568700799e00,
    1.7207051723e-01,
    3.1200000000e00,
    2.8569395730e-01,
    -2.6086818574e01,
    1.7207051723e-01,
    3.1400000000e00,
    3.7513696512e-01,
    -1.9252806924e02,
    1.7207051723e-01,
    3.1500000000e00,
    4.1863900122e-01,
    -2.7326104174e02,
    1.7207051723e-01,
    3.1600000000e00,
    4.6037688289e-01,
    -3.5056842161e02,
    1.7207051723e-01,
    3.1700000000e00,
    4.9966491823e-01,
    -4.2317920007e02,
    1.7207051723e-01,
    3.1800000000e00,
    5.3595189563e-01,
    -4.3185128177e02,
    2.0048169185e-01,
    3.1900000000e00,
    5.6892458668e-01,
    -4.3722323919e02,
    2.2734147895e-01,
    3.2000000000e00,
    5.9840193459e-01,
    -4.4137957737e02,
    2.5125746619e-01,
    3.3800000000e00,
    5.2395486220e-01,
    -1.3980373790e02,
    3.3421643134e-01,
    3.4000000000e00,
    4.6817288065e-01,
    -5.0944732973e01,
    3.3421643134e-01,
    4.2100000000e00,
    4.9665327168e-01,
    -9.9592241706e01,
    3.3421643134e-01,
    4.2300000000e00,
    5.8148501283e-01,
    -2.3450626795e02,
    3.3421643134e-01,
    4.2700000000e00,
    7.2640691360e-01,
    -4.0927335569e02,
    3.5833603370e-01,
    4.4600000000e00,
    6.6110182137e-01,
    -1.2298092166e02,
    4.7147275963e-01,
    4.4800000000e00,
    5.9210016102e-01,
    -2.6884884966e01,
    4.7147275963e-01,
    5.2100000000e00,
    7.3041660557e-01,
    -2.2180775283e02,
    4.7147275963e-01,
    5.2300000000e00,
    8.3475681681e-01,
    -3.6681876525e02,
    4.7147275963e-01,
    5.2600000000e00,
    9.6191454743e-01,
    -3.7384095358e02,
    5.9215735265e-01,
    5.4500000000e00,
    8.8618600915e-01,
    -6.0293296186e01,
    7.3994625762e-01,
    5.4700000000e00,
    8.1338201336e-01,
    0.0000000000e00,
    7.3994625762e-01,
    6.2800000000e00,
    1.0145968486e00,
    -2.4229624422e02,
    7.3994625762e-01,
    6.3000000000e00,
    1.1469383869e00,
    -3.5580459678e02,
    7.8845769997e-01,
    6.3100000000e00,
    1.2066455836e00,
    -3.5158435394e02,
    8.4899250606e-01,
    6.5000000000e00,
    1.3461236837e00,
    -7.6583297127e01,
    1.1844900916e00,
    6.5100000000e00,
    1.3007031398e00,
    -1.6196679787e01,
    1.1844900916e00,
    7.3400000000e00,
    1.5242069056e00,
    -3.1686698206e02,
    1.1867462569e00,
    7.3500000000e00,
    1.5948663654e00,
    -3.0521328412e02,
    1.2645219531e00,
    7.3600000000e00,
    1.6600030656e00,
    -2.9446542567e02,
    1.3362521607e00,
    7.3700000000e00,
    1.7195182080e00,
    -2.8874354156e02,
    1.3990652445e00,
    7.4900000000e00,
    1.9506013678e00,
    -2.5018761850e02,
    1.6558717183e00,
    7.5400000000e00,
    1.7691637943e00,
    -1.2514378293e01,
    1.6558717183e00,
    7.5500000000e00,
    1.7158525161e00,
    0.0000000000e00,
    1.6558717183e00,
    8.3900000000e00,
    2.0055159154e00,
    -2.8562870159e02,
    1.6896474736e00,
    8.4000000000e00,
    2.1095167686e00,
    -2.8562870159e02,
    1.7930046242e00,
    8.4100000000e00,
    2.2061916904e00,
    -2.8562870159e02,
    1.8890012760e00,
    8.5300000000e00,
    2.6763054211e00,
    -2.6201259243e02,
    2.3702992652e00,
    8.5700000000e00,
    2.5164870413e00,
    -5.4093081208e01,
    2.3702992652e00,
    8.5800000000e00,
    2.4535080410e00,
    0.0000000000e00,
    2.3702992652e00,
    9.4700000000e00,
    2.7521981006e00,
    -2.8555643220e02,
    2.4356352074e00,
    9.4800000000e00,
    2.8471470176e00,
    -2.8555643220e02,
    2.5297147518e00,
    9.4900000000e00,
    2.9322585464e00,
    -2.8555643220e02,
    2.6139204855e00,
    9.5800000000e00,
    3.2024535078e00,
    -2.5957183810e02,
    2.8984835626e00,
    9.5900000000e00,
    3.1738760224e00,
    -2.2297408718e02,
    2.8984835626e00,
    9.6000000000e00,
    3.1337196390e00,
    -1.7093472810e02,
    2.8984835626e00,
    9.6100000000e00,
    3.0824081842e00,
    -1.0399907953e02,
    2.8984835626e00,
    9.6200000000e00,
    3.0205155865e00,
    -2.2912812509e01,
    2.8984835626e00,
]
Instant = Resultat2[0::4]
Deplace = Resultat2[1::4]
Force = Resultat2[2::4]
Pcumul = Resultat2[3::4]
motclef = {}
motclef["VALEUR"] = []
for ii in range(len(Instant)):
    # Pour Force
    if abs(Force[ii]) > 1.0:
        motclef["VALEUR"].append(
            _F(FONCTION=FORC_2, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Force[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=FORC_2,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Force[ii],
                CRITERE="ABSOLU",
            )
        )
    # Pour Pcumul
    if abs(Pcumul[ii]) > 0.001:
        motclef["VALEUR"].append(
            _F(FONCTION=PCUM_2, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Pcumul[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=PCUM_2,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Pcumul[ii],
                CRITERE="ABSOLU",
            )
        )
    # Pour Deplace
    if abs(Deplace[ii]) > 0.001:
        motclef["VALEUR"].append(
            _F(FONCTION=DEPL12, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Deplace[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=DEPL12,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Deplace[ii],
                CRITERE="ABSOLU",
            )
        )
TEST_FONCTION(**motclef)
"""
# Pour l'impression des courbes
XInstant=DEFI_LIST_REEL(VALE=Instant)
# LIST_PARA=XInstant,
#
UXAN_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',GROUP_MA='M1',POINT=1)
DEPL31=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_1=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',GROUP_MA='M1',POINT=1)
#
UXAN_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',GROUP_MA='M1',POINT=1)
DEPL32=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',GROUP_MA='M1',POINT=1)
#
fic_courbe = './REPE_OUT/sdnd109c_filtre_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_1, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_1, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
#
fic_courbe = './REPE_OUT/sdnd109c_filtre_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_2, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_2, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)

fic_courbe = './REPE_OUT/sdnd109c_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11,),
        _F(FONCTION=FORC_1,),
        _F(FONCTION=PCUM_1,),
        _F(FONCTION=VITE_1,),
        _F(FONCTION=UXAN_1,),
        _F(FONCTION=DEPL31,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
#
fic_courbe = './REPE_OUT/sdnd109c_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12,),
        _F(FONCTION=FORC_2,),
        _F(FONCTION=PCUM_2,),
        _F(FONCTION=VITE_2,),
        _F(FONCTION=UXAN_2,),
        _F(FONCTION=DEPL32,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
"""
FIN()
