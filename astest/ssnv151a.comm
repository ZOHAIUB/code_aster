# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#   TEST MODELE BETON_DOUBLE_DP 3D (DOUBLE CRITERE DE DRUCKER PRAGER)
#   EN DEPLACEMENT IMPOSE, SANS RESULTATS DE REFERENCE.
#   ESSAI EN COMPRESSION PUIS TRACTION/COMPRESSION
#   TEST DE PROJECTION AUX SOMMETS DES CONES DE TRACTION ET COMPRESSION
# ----------------------------------------------------------------------
#                ELEMENT 3D CUBE A 8 NOEUDS
#              ETAT HOMOGENE CONTRAINTE DEFORMATION
#       UNITES : NEWTON , MILLIMETRE , SECONDE (N,MM,S,->MPA)
#
#
#               Z       A                     A = 1 MM
#               L<------------->                      2
#                                             S = 1 MM
#                / N5            N8
#              >O--------------O
#              /L             /L
#         N6  / L         N7 / L
#           >O--+-----------O  L
#            L  L           L  L
#            L  L     S     L  L
#            L  L           L  L
#            L  L/ N1       L  L N4
#            L >O-----------L--O-> Y
#            L /V           L /
#         N2 L/          N3 L/
#           >O--------------O
#
#          /
#         X
#
#
# ----------------------------------------------------------------------
#
DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

CUBE = LIRE_MAILLAGE(FORMAT="ASTER")

TROISD = AFFE_MODELE(
    MAILLAGE=CUBE,
    AFFE=_F(
        PHENOMENE="MECANIQUE",
        MODELISATION="3D",
        GROUP_MA=("CUBE", "FACEXY", "FACE1XY", "FACEXZ", "FACE1XZ", "FACEYZ", "FACE1YZ"),
    ),
)

E = DEFI_FONCTION(
    NOM_PARA="TEMP",
    PROL_DROITE="LINEAIRE",
    PROL_GAUCHE="LINEAIRE",
    VALE=(0.0e0, 37000.0, 20.0e0, 37000.0),
)

NU = DEFI_FONCTION(
    NOM_PARA="SECH",
    PROL_DROITE="LINEAIRE",
    PROL_GAUCHE="LINEAIRE",
    VALE=(0.0e0, 0.18, 20.0e0, 0.18),
)

ALPHA = DEFI_FONCTION(
    NOM_PARA="TEMP",
    PROL_DROITE="LINEAIRE",
    PROL_GAUCHE="LINEAIRE",
    VALE=(0.0e0, 1.0e-5, 20.0e0, 1.0e-5),
)

FC = DEFI_FONCTION(
    NOM_PARA="TEMP",
    PROL_DROITE="LINEAIRE",
    PROL_GAUCHE="LINEAIRE",
    VALE=(0.0e0, 40.0, 20.0e0, 40.0),
)

FT = DEFI_FONCTION(
    NOM_PARA="TEMP", PROL_DROITE="LINEAIRE", PROL_GAUCHE="LINEAIRE", VALE=(0.0e0, 4.0, 20.0e0, 4.0)
)

BETA = DEFI_FONCTION(
    NOM_PARA="TEMP",
    PROL_DROITE="LINEAIRE",
    PROL_GAUCHE="LINEAIRE",
    VALE=(0.0e0, 1.16, 20.0e0, 1.16),
)

GC = DEFI_FONCTION(
    NOM_PARA="TEMP",
    PROL_DROITE="LINEAIRE",
    PROL_GAUCHE="LINEAIRE",
    VALE=(0.0e0, 10.0, 20.0e0, 10.0),
)

GT = DEFI_FONCTION(
    NOM_PARA="TEMP",
    PROL_DROITE="LINEAIRE",
    PROL_GAUCHE="LINEAIRE",
    VALE=(0.0e0, 0.100, 20.0e0, 0.100),
)

BETON = DEFI_MATERIAU(
    ELAS_FO=_F(E=E, NU=NU, K_DESSIC=1.0e-5, ALPHA=ALPHA, TEMP_DEF_ALPHA=0.0),
    BETON_DOUBLE_DP=_F(
        F_C=FC,
        F_T=FT,
        COEF_BIAX=BETA,
        ENER_COMP_RUPT=GC,
        ENER_TRAC_RUPT=GT,
        COEF_ELAS_COMP=33.33333333,
        ECRO_COMP_P_PIC="LINEAIRE",
        ECRO_TRAC_P_PIC="LINEAIRE",
        LONG_CARA=1.4142136,
    ),
)

CHSECH1 = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_TEMP_R",
    MAILLAGE=CUBE,
    AFFE=_F(NOM_CMP="SECH", TOUT="OUI", VALE=20.0),
)

CHSECH2 = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_TEMP_R",
    MAILLAGE=CUBE,
    AFFE=_F(NOM_CMP="SECH", TOUT="OUI", VALE=0.0),
)


SECH = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_SECH",
    AFFE=(
        _F(NOM_CHAM="SECH", INST=0.0, CHAM_GD=CHSECH1),
        _F(NOM_CHAM="SECH", INST=2.5, CHAM_GD=CHSECH2),
    ),
)

CHTEMP1 = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_TEMP_R",
    MAILLAGE=CUBE,
    AFFE=_F(NOM_CMP="TEMP", TOUT="OUI", VALE=20.0),
)

CHTEMP2 = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_TEMP_R",
    MAILLAGE=CUBE,
    AFFE=_F(NOM_CMP="TEMP", TOUT="OUI", VALE=0.0),
)

TEMP = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_THER",
    AFFE=(
        _F(NOM_CHAM="TEMP", INST=0.0, CHAM_GD=CHTEMP2),
        _F(NOM_CHAM="TEMP", INST=2.5, CHAM_GD=CHTEMP1),
    ),
)

MATBET = AFFE_MATERIAU(
    MAILLAGE=CUBE,
    AFFE=_F(GROUP_MA="MA1", MATER=BETON),
    AFFE_VARC=(
        _F(TOUT="OUI", EVOL=SECH, NOM_VARC="SECH", NOM_CHAM="SECH", VALE_REF=20),
        _F(TOUT="OUI", EVOL=TEMP, NOM_VARC="TEMP", NOM_CHAM="TEMP", VALE_REF=0),
    ),
)

COND_LIM = AFFE_CHAR_CINE(
    MODELE=TROISD,
    MECA_IMPO=(
        _F(GROUP_NO="FACEXY", DZ=0.0),
        _F(GROUP_NO="FACEYZ", DX=0.0),
        _F(GROUP_NO="FACEXZ", DY=0.0),
    ),
)

TRAC = AFFE_CHAR_CINE(MODELE=TROISD, MECA_IMPO=_F(GROUP_NO="FACE1XZ", DY=-0.2))

TRAC2 = AFFE_CHAR_MECA(
    MODELE=TROISD, DDL_IMPO=(_F(GROUP_NO="FACE1XY", DZ=0.2), _F(GROUP_NO="FACE1YZ", DX=0.2))
)

LINST = DEFI_LIST_REEL(
    DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A=0.01, NOMBRE=1),
        _F(JUSQU_A=0.1, NOMBRE=1),
        _F(JUSQU_A=1.0, NOMBRE=2),
        _F(JUSQU_A=1.715, NOMBRE=1),
        _F(JUSQU_A=1.765, NOMBRE=5),
        _F(JUSQU_A=1.8, NOMBRE=1),
        _F(JUSQU_A=2.0, NOMBRE=2),
    ),
)

COEF_TR = DEFI_FONCTION(
    NOM_PARA="INST", VALE=(0.000, 0.000, 1.715, 1.715, 1.725, 1.725, 2.000, 2.000)
)

COEF_TR2 = DEFI_FONCTION(
    NOM_PARA="INST", VALE=(0.000, 0.000, 1.715, 0.000, 1.725, 0.010, 2.000, 0.500)
)

SOLNL = STAT_NON_LINE(
    TITRE="TEST LOI BETON_DOUBLE_DP",
    MODELE=TROISD,
    EXCIT=(_F(CHARGE=COND_LIM), _F(CHARGE=TRAC, FONC_MULT=COEF_TR)),
    INCREMENT=_F(LIST_INST=LINST, INST_FIN=1.715),
    CHAM_MATER=MATBET,
    COMPORTEMENT=_F(
        RELATION="BETON_DOUBLE_DP",
        DEFORMATION="PETIT",
        ITER_INTE_MAXI=10,
        ITER_INTE_PAS=0,
        RESI_INTE=1.0e-8,
        TOUT="OUI",
    ),
    NEWTON=_F(MATRICE="TANGENTE", REAC_INCR=1, REAC_ITER=5),
    CONVERGENCE=_F(
        ITER_GLOB_MAXI=20,
        # RESI_GLOB_MAXI = 1.E-12,
    ),
)

SOLNL = STAT_NON_LINE(
    reuse=SOLNL,
    TITRE="TEST LOI BETON_DOUBLE_DP",
    MODELE=TROISD,
    EXCIT=(
        _F(CHARGE=COND_LIM),
        _F(CHARGE=TRAC, FONC_MULT=COEF_TR),
        _F(CHARGE=TRAC2, FONC_MULT=COEF_TR2, TYPE_CHARGE="DIDI"),
    ),
    ETAT_INIT=_F(EVOL_NOLI=SOLNL, INST=1.715),
    INCREMENT=_F(LIST_INST=LINST, INST_INIT=1.715),
    CHAM_MATER=MATBET,
    COMPORTEMENT=_F(
        RELATION="BETON_DOUBLE_DP",
        DEFORMATION="PETIT",
        ITER_INTE_MAXI=10,
        ITER_INTE_PAS=0,
        RESI_INTE=1.0e-8,
        TOUT="OUI",
    ),
    NEWTON=_F(MATRICE="TANGENTE", REAC_INCR=1, REAC_ITER=1),
    CONVERGENCE=_F(ITER_GLOB_MAXI=20, RESI_GLOB_RELA=1.0e-6),
)

SOLNL = CALC_CHAMP(
    reuse=SOLNL, CONTRAINTE=("SIGM_ELNO"), VARI_INTERNE=("VARI_ELNO"), RESULTAT=SOLNL
)


TEST_RESU(
    RESU=(
        _F(
            INST=1.0,
            RESULTAT=SOLNL,
            NOM_CHAM="SIGM_ELNO",
            GROUP_NO="N1",
            NOM_CMP="SIYY",
            VALE_CALC=-17.445970379323999,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=1.0,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V1",
            VALE_CALC=0.19952848728705,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=1.0,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V4",
            VALE_CALC=1.0,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
    )
)

TEST_RESU(
    RESU=(
        _F(
            INST=1.7250000000000001,
            RESULTAT=SOLNL,
            NOM_CHAM="SIGM_ELNO",
            GROUP_NO="N1",
            NOM_CMP="SIYY",
            VALE_CALC=2.5737848954806002,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=1.7250000000000001,
            RESULTAT=SOLNL,
            NOM_CHAM="SIGM_ELNO",
            GROUP_NO="N1",
            NOM_CMP="SIXX",
            VALE_CALC=2.5737848954806002,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=1.7250000000000001,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V1",
            VALE_CALC=0.34296989598719002,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=1.7250000000000001,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V2",
            VALE_CALC=1.2314499095035e-3,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=1.7250000000000001,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V4",
            VALE_CALC=22.0,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
    )
)

TEST_RESU(
    RESU=(
        _F(
            INST=1.8,
            RESULTAT=SOLNL,
            NOM_CHAM="SIGM_ELNO",
            GROUP_NO="N1",
            NOM_CMP="SIYY",
            VALE_CALC=0.67674458325588005,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=1.8,
            RESULTAT=SOLNL,
            NOM_CHAM="SIGM_ELNO",
            GROUP_NO="N1",
            NOM_CMP="SIXX",
            VALE_CALC=0.67674458325588005,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=1.8,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V1",
            VALE_CALC=0.34496565007972002,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=1.8,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V2",
            VALE_CALC=0.026382888033288001,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=1.8,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V4",
            VALE_CALC=22.0,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
    )
)

TEST_RESU(
    RESU=(
        _F(
            INST=2.0,
            RESULTAT=SOLNL,
            NOM_CHAM="SIGM_ELNO",
            GROUP_NO="N1",
            NOM_CMP="SIYY",
            VALE_CALC=-3.6229884000836997e-05,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=2.0,
            RESULTAT=SOLNL,
            NOM_CHAM="SIGM_ELNO",
            GROUP_NO="N1",
            NOM_CMP="SIXX",
            VALE_CALC=2.6666667196946999e-06,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=2.0,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V1",
            VALE_CALC=0.38495394322234,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=2.0,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V2",
            VALE_CALC=0.083738683176989001,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
        _F(
            INST=2.0,
            RESULTAT=SOLNL,
            NOM_CHAM="VARI_ELNO",
            GROUP_NO="N1",
            NOM_CMP="V4",
            VALE_CALC=3.0,
            CRITERE="ABSOLU",
            GROUP_MA="MA1",
        ),
    )
)

FIN()
