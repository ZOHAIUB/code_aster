# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# VALIDATION DE LA PRISE EN COMPTE DES DEFORMATIONS DUES AUX VARIABLES
# DE COMMANDE AVEC LA LOI KIT_DDI
# ----------------------------------------------------------------

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))


MAIL = LIRE_MAILLAGE(FORMAT="ASTER")

MODELE = AFFE_MODELE(
    MAILLAGE=MAIL, AFFE=(_F(GROUP_MA=("CUBE",), PHENOMENE="MECANIQUE", MODELISATION="3D"),)
)

# DEFINITION DU MATERIAU
FONC1 = DEFI_FONCTION(
    NOM_PARA="SECH", PROL_DROITE="LINEAIRE", PROL_GAUCHE="LINEAIRE", VALE=(0.0, 0.0, 1.0, 0.0)
)

E = DEFI_CONSTANTE(VALE=310000)

NU = DEFI_CONSTANTE(VALE=0.3)

ALPHA = DEFI_CONSTANTE(VALE=7e-3)

BETON = DEFI_MATERIAU(
    ELAS_FO=_F(E=E, NU=NU, ALPHA=ALPHA, TEMP_DEF_ALPHA=0.0, K_DESSIC=3e-4, B_ENDOGE=1e-4),
    BETON_DESORP=_F(FONC_DESORP=FONC1),
    MAZARS=_F(EPSD0=5.6e-5, AT=0.831, BT=21330.0, AC=1.15, BC=1390.0, K=0.7, CHI=0.6),
    BETON_UMLV=_F(
        K_RS=6.0e10,
        ETA_RS=1.0e10,
        K_IS=3.0e10,
        ETA_IS=2.4e10,
        K_RD=3.4e10,
        ETA_RD=4.08e11,
        ETA_ID=5.44e12,
    ),
    BETON_ECRO_LINE=_F(SYT=3.0, D_SIGM_EPSI=-6000.0, SYC=30.0),
)

TEMP0 = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_TEMP_R",
    MAILLAGE=MAIL,
    AFFE=_F(TOUT="OUI", NOM_CMP="TEMP", VALE=0.0),
)

TEMP1 = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_TEMP_R",
    MAILLAGE=MAIL,
    AFFE=_F(TOUT="OUI", NOM_CMP="TEMP", VALE=20.0),
)

SECH0 = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_TEMP_R",
    MAILLAGE=MAIL,
    AFFE=_F(TOUT="OUI", NOM_CMP="SECH", VALE=0.0),
)

SECH1 = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_TEMP_R",
    MAILLAGE=MAIL,
    AFFE=_F(TOUT="OUI", NOM_CMP="SECH", VALE=1.0),
)

HYDR0 = CREA_CHAMP(
    TYPE_CHAM="NOEU_HYDR_R",
    OPERATION="AFFE",
    MODELE=MODELE,
    AFFE=_F(TOUT="OUI", NOM_CMP="HYDR", VALE=0.0),
)

HYDR1 = CREA_CHAMP(
    TYPE_CHAM="NOEU_HYDR_R",
    OPERATION="AFFE",
    MODELE=MODELE,
    AFFE=_F(TOUT="OUI", NOM_CMP="HYDR", VALE=10.0),
)

EVOLTEMP = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_VARC",
    AFFE=(
        _F(NOM_CHAM="TEMP", CHAM_GD=TEMP0, INST=0.0),
        _F(NOM_CHAM="TEMP", CHAM_GD=TEMP1, INST=1.0),
    ),
)

EVOLSECH = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_SECH",
    AFFE=(
        _F(NOM_CHAM="SECH", CHAM_GD=SECH0, INST=0.0),
        _F(NOM_CHAM="SECH", CHAM_GD=SECH1, INST=1.0),
    ),
)

EVOLHYDR = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_VARC",
    AFFE=(
        _F(NOM_CHAM="TEMP", CHAM_GD=HYDR0, INST=0.0),
        _F(NOM_CHAM="TEMP", CHAM_GD=HYDR1, INST=1.0),
    ),
)

CAR_MAT = AFFE_MATERIAU(
    MAILLAGE=MAIL,
    AFFE=_F(MATER=BETON, TOUT="OUI"),
    AFFE_VARC=(
        _F(TOUT="OUI", EVOL=EVOLSECH, NOM_VARC="SECH", VALE_REF=0.0),
        _F(TOUT="OUI", EVOL=EVOLTEMP, NOM_VARC="TEMP", VALE_REF=0.0),
        _F(TOUT="OUI", EVOL=EVOLHYDR, NOM_VARC="HYDR", NOM_CHAM="TEMP"),
    ),
)

# CONDITIONS AUX LIMITES


CLIM1 = AFFE_CHAR_MECA(
    MODELE=MODELE,
    DDL_IMPO=(
        _F(GROUP_NO=("N1",), DX=0.0, DY=0.0),
        _F(GROUP_NO=("N2",), DY=0.0),
        _F(GROUP_NO=("ENCAST",), DZ=0.0),
    ),
)

L_INS = DEFI_LIST_REEL(DEBUT=0, INTERVALLE=(_F(JUSQU_A=1.0, NOMBRE=1),))

DEFLIST = DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST=L_INS))

# SOLUTION DE REFERENCE EN ELAS
# =============================


RESU = STAT_NON_LINE(
    CHAM_MATER=CAR_MAT,
    MODELE=MODELE,
    EXCIT=(_F(CHARGE=CLIM1),),
    COMPORTEMENT=_F(RELATION="ELAS", GROUP_MA="CUBE"),
    INCREMENT=_F(LIST_INST=DEFLIST),
)


IMPR_RESU(
    UNITE=6, FORMAT="RESULTAT", RESU=_F(RESULTAT=RESU, INST=1, NOM_CHAM=("DEPL", "SIEF_ELGA"))
)

TEST_RESU(
    RESU=(
        _F(
            INST=1,
            GROUP_NO="N2",
            RESULTAT=RESU,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            VALE_CALC=1.39300000000000e-01,
        ),
        _F(
            INST=1,
            GROUP_NO="N7",
            RESULTAT=RESU,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            VALE_CALC=1.39300000000000e-01,
        ),
        _F(
            INST=1,
            GROUP_NO="N5",
            RESULTAT=RESU,
            NOM_CHAM="DEPL",
            NOM_CMP="DZ",
            VALE_CALC=1.39300000000000e-01,
        ),
    )
)

# CALCUL BETON_UMLV + MAZARS
# ==========================


RESUKIT = STAT_NON_LINE(
    CHAM_MATER=CAR_MAT,
    MODELE=MODELE,
    EXCIT=(_F(CHARGE=CLIM1),),
    COMPORTEMENT=_F(
        RELATION="KIT_DDI",
        RELATION_KIT=("BETON_UMLV", "MAZARS"),
        DEFORMATION="PETIT",
        GROUP_MA="CUBE",
    ),
    INCREMENT=_F(LIST_INST=DEFLIST),
)

IMPR_RESU(
    UNITE=6, FORMAT="RESULTAT", RESU=_F(RESULTAT=RESUKIT, INST=1, NOM_CHAM=("DEPL", "SIEF_ELGA"))
)


TEST_RESU(
    RESU=(
        _F(
            INST=1,
            GROUP_NO="N2",
            RESULTAT=RESUKIT,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            VALE_CALC=1.39300000000000e-01,
            VALE_REFE=1.39300000000000e-01,
            REFERENCE="AUTRE_ASTER",
            PRECISION=1e-6,
        ),
        _F(
            INST=1,
            GROUP_NO="N7",
            RESULTAT=RESUKIT,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            VALE_CALC=1.39300000000000e-01,
            VALE_REFE=1.39300000000000e-01,
            REFERENCE="AUTRE_ASTER",
            PRECISION=1e-6,
        ),
        _F(
            INST=1,
            GROUP_NO="N5",
            RESULTAT=RESUKIT,
            NOM_CHAM="DEPL",
            NOM_CMP="DZ",
            VALE_CALC=1.39300000000000e-01,
            VALE_REFE=1.39300000000000e-01,
            REFERENCE="AUTRE_ASTER",
            PRECISION=1e-6,
        ),
    )
)


# CALCUL BETON_UMLV + ENDO_ISOT_BETON
# ===================================

RESUKIT2 = STAT_NON_LINE(
    CHAM_MATER=CAR_MAT,
    MODELE=MODELE,
    EXCIT=(_F(CHARGE=CLIM1),),
    COMPORTEMENT=_F(
        RELATION="KIT_DDI",
        RELATION_KIT=("BETON_UMLV", "ENDO_ISOT_BETON"),
        DEFORMATION="PETIT",
        GROUP_MA="CUBE",
    ),
    INCREMENT=_F(LIST_INST=DEFLIST),
)

IMPR_RESU(
    UNITE=6, FORMAT="RESULTAT", RESU=_F(RESULTAT=RESUKIT2, INST=1, NOM_CHAM=("DEPL", "SIEF_ELGA"))
)


TEST_RESU(
    RESU=(
        _F(
            INST=1,
            GROUP_NO="N2",
            RESULTAT=RESUKIT2,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            VALE_CALC=1.39300000000000e-01,
            VALE_REFE=1.39300000000000e-01,
            REFERENCE="AUTRE_ASTER",
            PRECISION=1e-6,
        ),
        _F(
            INST=1,
            GROUP_NO="N7",
            RESULTAT=RESUKIT2,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            VALE_CALC=1.39300000000000e-01,
            VALE_REFE=1.39300000000000e-01,
            REFERENCE="AUTRE_ASTER",
            PRECISION=1e-6,
        ),
        _F(
            INST=1,
            GROUP_NO="N5",
            RESULTAT=RESUKIT2,
            NOM_CHAM="DEPL",
            NOM_CMP="DZ",
            VALE_CALC=1.39300000000000e-01,
            VALE_REFE=1.39300000000000e-01,
            REFERENCE="AUTRE_ASTER",
            PRECISION=1e-6,
        ),
    )
)

FIN()
