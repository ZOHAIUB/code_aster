# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(
    CODE="OUI", DEBUG=_F(SDVERI="OUI"), IGNORE_ALARM=("CALCULEL7_12", "CALCULEL7_28", "CALCULEL_88")
)

MA = LIRE_MAILLAGE(FORMAT="MED", UNITE=20)

MODEL = AFFE_MODELE(
    MAILLAGE=MA, AFFE=_F(GROUP_MA="PoutreAB", PHENOMENE="MECANIQUE", MODELISATION="POU_D_T")
)

CARA = AFFE_CARA_ELEM(
    MODELE=MODEL,
    POUTRE=_F(CARA=("HY", "HZ"), GROUP_MA=("PoutreAB",), SECTION="RECTANGLE", VALE=(0.5, 0.3)),
)

# on cree une sd evol_elas avec des champs d'efforts imposes :
# -------------------------------------------------------------
# compression uniforme + effort transversal
CHEFF1 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(-1.0e6, 0.0, 1.0e5, 0.0, 0.0, 0.0),
    ),
)

# section totalement tendue (pivot A "vertical") + effort transversal
CHEFF2 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(1.0e6, 0.0, -1.0e5, 0.0, 0.0, 0.0),
    ),
)

# section totalement tendue (pivot A "vertical") + torsion
CHEFF3 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(1.0e6, 0.0, -1.0e5, 1.0e4, 0.0, 0.0),
    ),
)

# fibre inférieure tendue en Z
CHEFF4 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, 0.0, 1.0e5),
    ),
)

# fibre supérieure tendue en Y
CHEFF5 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, -1.0e5, 0.0),
    ),
)

# section partiellement tendue
CHEFF6 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(1.0e5, 0.0, 0.0, 0.0, 0.0, -1.0e5),
    ),
)

# section partiellement tendue
CHEFF7 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(1.0e5, 0.0, 0.0, 0.0, -1.0e5, 0.0),
    ),
)

# section totalement tendue
CHEFF8 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(2.0e6, 0.0, 0.0, 0.0, 0.0, -1.0e5),
    ),
)

# flexion déviée
CHEFF9 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, -15.0e4, 1.0e5),
    ),
)

# flexion déviée composée
CHEFF10 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(-3.0e6, 0.0, 0.0, 0.0, -15.0e4, 1.0e5),
    ),
)

CHEFF11 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, 0.0, -150e3),
    ),
)

# pivot B
CHEFF12 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, 0.0, -26e4),
    ),
)

# vrai pivot C avec compression totale dune facette sur la section entière
CHEFF13 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, 0.0, -38e4),
    ),
)

CHEFF14 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(-45.0e5, 1.0e5, 0.0, 0.0, 0.0, 38.0e4),
    ),
)


RESUELU = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_ELAS",
    AFFE=(
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF1, INST=1.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF2, INST=2.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF3, INST=3.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF4, INST=4.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF5, INST=5.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF6, INST=6.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF7, INST=7.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF8, INST=8.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF9, INST=9.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF10, INST=10.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF11, INST=11.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF12, INST=12.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF13, INST=13.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF14, INST=14.0, MODELE=MODEL, CARA_ELEM=CARA),
    ),
)


# CAS 1 - calcul du ferraillage :
# --------------------------------

RESUELU1 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="1D",
            C_SUP_Y=0.04,
            C_INF_Y=0.04,
            C_SUP_Z=0.04,
            C_INF_Z=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        ),
    ),
)

COMP = ["AYS", "AYI", "AZS", "AZI", "AST", "ATOT", "DNSVOL", "CONSTRUC"]

# -----------------------------------------------------
# Tests pour CAS 1
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00039313435143929656,
        0.00000000000000e00,
        10.221493137421712,
        0.04657331616717533,
    ],  # 1
    [
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        0.00039313435143929656,
        2.30000000000000e-03,
        129.82149313742173,
        0.31235109394495314,
    ],  # 2
    [
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        0.0004899058841012773,
        2.30000000000000e-03,
        132.33755298663323,
        0.3238152948476425,
    ],  # 3
    [
        5.18123984855709e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.18123984855709e-04,
        2.69424472124969e01,
        5.98721049166597e-02,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.49184236626372e-04,
        0.00000000000000e00,
        9.49184236626372e-04,
        4.93575803045713e01,
        1.09683511787936e-01,
    ],  # 5
    [
        0.00000000000000e00,
        6.36136001321168e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.36136001321168e-04,
        3.30790720687007e01,
        7.35090490415572e-02,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.06758602612194e-03,
        0.00000000000000e00,
        1.06758602612194e-03,
        5.55144733583406e01,
        1.23365496351868e-01,
    ],  # 7
    [
        1.75238095238095e-03,
        2.84761904761905e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        4.60000000000000e-03,
        2.39200000000000e02,
        5.31555555555556e-01,
    ],  # 8
    [
        1.22170925374224e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        3.50145034656051e-03,
        0.00000000000000e00,
        4.72315960030275e-03,
        2.45604299215743e02,
        5.45787331590540e-01,
    ],  # 9
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 10
    [
        0.00000000000000e00,
        7.92390093148825e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        7.92390093148825e-04,
        4.12042848437389e01,
        9.15650774305309e-02,
    ],  # 11
    [
        0.00000000000000e00,
        1.43999329534403e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.43999329534403e-03,
        7.48796513578895e01,
        1.66399225239754e-01,
    ],  # 12
    [
        0.00000000000000e00,
        2.23821169164216e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.23821169164216e-03,
        1.16387007965392e02,
        2.58637795478649e-01,
    ],  # 13
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.00022220637255264587,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00039313435143929656,
        0.00000000000000e00,
        10.221493137421712,
        0.04657331616717533,
    ],  # 1
    [
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        0.00039313435143929656,
        2.30000000000000e-03,
        129.82149313742173,
        0.31235109394495314,
    ],  # 2
    [
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        0.0004899058841012773,
        2.30000000000000e-03,
        132.33755298663323,
        0.3238152948476425,
    ],  # 3
    [
        5.18123984855709e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.18123984855709e-04,
        2.69424472124969e01,
        5.98721049166597e-02,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.49184236626372e-04,
        0.00000000000000e00,
        9.49184236626372e-04,
        4.93575803045713e01,
        1.09683511787936e-01,
    ],  # 5
    [
        0.00000000000000e00,
        6.36136001321168e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.36136001321168e-04,
        3.30790720687007e01,
        7.35090490415572e-02,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.06758602612194e-03,
        0.00000000000000e00,
        1.06758602612194e-03,
        5.55144733583406e01,
        1.23365496351868e-01,
    ],  # 7
    [
        1.75238095238095e-03,
        2.84761904761905e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        4.60000000000000e-03,
        2.39200000000000e02,
        5.31555555555556e-01,
    ],  # 8
    [
        1.22170925374224e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        3.50145034656051e-03,
        0.00000000000000e00,
        4.72315960030275e-03,
        2.45604299215743e02,
        5.45787331590540e-01,
    ],  # 9
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 10
    [
        0.00000000000000e00,
        7.92390093148825e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        7.92390093148825e-04,
        4.12042848437389e01,
        9.15650774305309e-02,
    ],  # 11
    [
        0.00000000000000e00,
        1.43999329534403e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.43999329534403e-03,
        7.48796513578895e01,
        1.66399225239754e-01,
    ],  # 12
    [
        0.00000000000000e00,
        2.23821169164216e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.23821169164216e-03,
        1.16387007965392e02,
        2.58637795478649e-01,
    ],  # 13
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.00022220637255264587,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU1,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU1,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 2 - calcul du ferraillage avec FERR_COMP = 'OUI' :
# -------------------------------------------------------

RESUELU2 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="1D",
            FERR_COMP="OUI",
            C_SUP_Y=0.04,
            C_INF_Y=0.04,
            C_SUP_Z=0.04,
            C_INF_Z=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        ),
    ),
)


# -----------------------------------------------------
# Tests pour CAS 2
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00039313435143929656,
        0.00000000000000e00,
        10.221493137421712,
        0.04657331616717533,
    ],  # 1
    [
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        0.00039313435143929656,
        2.30000000000000e-03,
        129.82149313742173,
        0.31235109394495314,
    ],  # 2
    [
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        0.0004899058841012773,
        2.30000000000000e-03,
        132.33755298663323,
        0.3238152948476425,
    ],  # 3
    [
        5.18123984855709e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.18123984855709e-04,
        2.69424472124969e01,
        5.98721049166597e-02,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.49184236626372e-04,
        0.00000000000000e00,
        9.49184236626372e-04,
        4.93575803045713e01,
        1.09683511787936e-01,
    ],  # 5
    [
        0.00000000000000e00,
        6.36136001321168e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.36136001321168e-04,
        3.30790720687007e01,
        7.35090490415572e-02,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.06758602612194e-03,
        0.00000000000000e00,
        1.06758602612194e-03,
        5.55144733583406e01,
        1.23365496351868e-01,
    ],  # 7
    [
        1.75238095238095e-03,
        2.84761904761905e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        4.60000000000000e-03,
        2.39200000000000e02,
        5.31555555555556e-01,
    ],  # 8
    [
        1.22170925374224e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        3.50145034656051e-03,
        0.00000000000000e00,
        4.72315960030275e-03,
        2.45604299215743e02,
        5.45787331590540e-01,
    ],  # 9
    [
        9.497281231948004e-05,
        0.0002931408532587533,
        0.00500867433365297,
        0.00000000000000e00,
        0.00000000000000e00,
        0.005396787999231203,
        280.6329759600226,
        0.6236288354667169,
    ],  # 10
    [
        0.00000000000000e00,
        7.92390093148825e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        7.92390093148825e-04,
        4.12042848437389e01,
        9.15650774305309e-02,
    ],  # 11
    [
        0.00000000000000e00,
        1.43999329534403e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.43999329534403e-03,
        7.48796513578895e01,
        1.66399225239754e-01,
    ],  # 12
    [
        0.00000000000000e00,
        2.23821169164216e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.23821169164216e-03,
        1.16387007965392e02,
        2.58637795478649e-01,
    ],  # 13
    [
        1.0528137416457453e-05,
        0.0033064985626359397,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00022220637255264587,
        0.0033170267000523974,
        178.26275408909348,
        0.40962491138556945,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00039313435143929656,
        0.00000000000000e00,
        10.221493137421712,
        0.04657331616717533,
    ],  # 1
    [
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        0.00039313435143929656,
        2.30000000000000e-03,
        129.82149313742173,
        0.31235109394495314,
    ],  # 2
    [
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        5.75000000000000e-04,
        0.0004899058841012773,
        2.30000000000000e-03,
        132.33755298663323,
        0.3238152948476425,
    ],  # 3
    [
        5.18123984855709e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.18123984855709e-04,
        2.69424472124969e01,
        5.98721049166597e-02,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.49184236626372e-04,
        0.00000000000000e00,
        9.49184236626372e-04,
        4.93575803045713e01,
        1.09683511787936e-01,
    ],  # 5
    [
        0.00000000000000e00,
        6.36136001321168e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.36136001321168e-04,
        3.30790720687007e01,
        7.35090490415572e-02,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.06758602612194e-03,
        0.00000000000000e00,
        1.06758602612194e-03,
        5.55144733583406e01,
        1.23365496351868e-01,
    ],  # 7
    [
        1.75238095238095e-03,
        2.84761904761905e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        4.60000000000000e-03,
        2.39200000000000e02,
        5.31555555555556e-01,
    ],  # 8
    [
        1.22170925374224e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        3.50145034656051e-03,
        0.00000000000000e00,
        4.72315960030275e-03,
        2.45604299215743e02,
        5.45787331590540e-01,
    ],  # 9
    [
        9.497281231948004e-05,
        0.0002931408532587533,
        0.00500867433365297,
        0.00000000000000e00,
        0.00000000000000e00,
        0.005396787999231203,
        280.6329759600226,
        0.6236288354667169,
    ],  # 10
    [
        0.00000000000000e00,
        7.92390093148825e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        7.92390093148825e-04,
        4.12042848437389e01,
        9.15650774305309e-02,
    ],  # 11
    [
        0.00000000000000e00,
        1.43999329534403e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.43999329534403e-03,
        7.48796513578895e01,
        1.66399225239754e-01,
    ],  # 12
    [
        0.00000000000000e00,
        2.23821169164216e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.23821169164216e-03,
        1.16387007965392e02,
        2.58637795478649e-01,
    ],  # 13
    [
        1.0528137416457453e-05,
        0.0033064985626359397,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00022220637255264587,
        0.0033170267000523974,
        178.26275408909348,
        0.40962491138556945,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU2,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU2,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

FIN()
