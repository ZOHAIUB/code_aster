# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# Fichier de commande onde plane SH se propageant verticalement (sur un cube de 200 par 200)

DEBUT(CODE="OUI")


mail = LIRE_MAILLAGE()

mail = MODI_MAILLAGE(
    reuse=mail, MAILLAGE=mail, ORIE_PEAU=_F(GROUP_MA_PEAU="LITOT", GROUP_MA_INTERNE="SUF")
)


# parametre du sol et determination des parametre du modele d'interaction sol-structure
Esol = 30000000000
Nusol = 0.25
Msol = 2450.0


G = Esol / (2.0 * (1.0 + Nusol))
Vs = (G / Msol) ** 0.5

E_ed = Esol * (1.0 - Nusol) / ((1.0 + Nusol) * (1.0 - 2.0 * Nusol))
Vp = (E_ed / Msol) ** 0.5


# parametres materiaux du modele


sol = DEFI_MATERIAU(ELAS=_F(E=Esol, NU=Nusol, RHO=Msol))


# ------------------------------------------------------------
# Définition des chargements sur les bords
# ------------------------------------------------------------

from math import *

# Coordonnées du point de départ de l'onde.
y0 = -200.0
x0 = 100


# Angle d'incidence par rapport à la verticale de propagation de l'onde (0=vertical)
a = 21

a2 = radians(a)
cosa = cos(a2)
sina = sin(a2)


# Longueur du modèle en direction X
Lt = 400.0

# Sollicitation en acceleration

LINST = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=0.3, PAS=0.002))  # 1,

acce_0 = (
    DEFI_FONCTION(
        NOM_RESU="ACCE",
        NOM_PARA="INST",
        PROL_GAUCHE="CONSTANT",
        PROL_DROITE="CONSTANT",
        VALE=(
            0,
            0,
            0.014,
            0,
            0.016,
            0.0117113321616078,
            0.018,
            0.0234226643232156,
            0.02,
            0.0468453286464312,
            0.022,
            0.0936906572928623,
            0.024,
            0.187381314585725,
            0.026,
            0.368124552684678,
            0.028,
            0.535826794978997,
            0.03,
            0.684547105928689,
            0.032,
            0.809016994374947,
            0.034,
            0.90482705246602,
            0.036,
            0.968583161128631,
            0.038,
            1.0,
            0.04,
            0.992114701314478,
            0.042,
            0.951056516295154,
            0.044,
            0.876306680043864,
            0.046,
            0.770513242775789,
            0.048,
            0.63742398974869,
            0.05,
            0.481753674101716,
            0.052,
            0.309016994374948,
            0.054,
            0.125333233564304,
            0.056,
            -0.0627905195293133,
            0.058,
            -0.248689887164854,
            0.06,
            -0.425779291565073,
            0.062,
            -0.587785252292473,
            0.064,
            -0.728968627421412,
            0.066,
            -0.844327925502015,
            0.068,
            -0.929776485888251,
            0.07,
            -0.982287250728689,
            0.072,
            -1,
            0.074,
            -0.982287250728689,
            0.076,
            -0.929776485888252,
            0.078,
            -0.844327925502016,
            0.08,
            -0.728968627421412,
            0.082,
            -0.587785252292473,
            0.084,
            -0.425779291565073,
            0.086,
            -0.248689887164854,
            0.088,
            -0.124344943582427,
            0.09,
            -0.0621724717912136,
            0.092,
            -0.0310862358956068,
            0.094,
            -0.0155431179478034,
            0.096,
            0,
        ),
    ),
)

acce_1 = CALC_FONCTION(COMB=_F(FONCTION=acce_0, COEF=1.0), LIST_PARA=LINST)

vite_1 = CALC_FONCTION(INTEGRE=_F(FONCTION=acce_1))
depl_1 = CALC_FONCTION(INTEGRE=_F(FONCTION=vite_1))

CHMAT = AFFE_MATERIAU(
    MAILLAGE=mail, AFFE=(_F(GROUP_MA=("SUG", "SUD"), MATER=sol), _F(GROUP_MA=("LITOT",), MATER=sol))
)

MATN = DEFI_MATERIAU(ELAS=_F(E=0.001e0, NU=Nusol, RHO=0.0001, AMOR_HYST=0.0))

CHMATB = AFFE_MATERIAU(
    MAILLAGE=mail,
    AFFE=(
        _F(TOUT="OUI", MATER=MATN),
        _F(GROUP_MA=("LIG", "LID"), MATER=sol),
        _F(GROUP_MA=("LIB"), MATER=sol),
    ),
)

# ------------------------------------------------------------
# Définition des modèles
# ------------------------------------------------------------

# Modèle avec surface libre
MODELE = AFFE_MODELE(
    MAILLAGE=mail,
    AFFE=(
        _F(GROUP_MA=("SUG", "SUD"), PHENOMENE="MECANIQUE", MODELISATION="D_PLAN"),
        _F(GROUP_MA=("LIG", "LID", "LIB"), PHENOMENE="MECANIQUE", MODELISATION="D_PLAN_ABSO"),
        _F(GROUP_MA="PLATE", PHENOMENE="MECANIQUE", MODELISATION="2D_DIS_T"),
    ),
)

ELEM = AFFE_CARA_ELEM(
    MODELE=MODELE,
    DISCRET_2D=(_F(GROUP_MA="PLATE", REPERE="GLOBAL", CARA="M_T_D_N", VALE=(0.0e10,)),),
)

ASSEMBLAGE(
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    CARA_ELEM=ELEM,
    NUME_DDL=CO("NUMEDDL"),
    MATR_ASSE=(
        _F(MATRICE=CO("RIGI"), OPTION="RIGI_MECA"),
        _F(MATRICE=CO("MASSE"), OPTION="MASS_MECA"),
        _F(MATRICE=CO("AMOR"), OPTION="AMOR_MECA"),
    ),
)

ELEM2 = AFFE_CARA_ELEM(
    MODELE=MODELE,
    DISCRET_2D=(_F(GROUP_MA="PLATE", REPERE="GLOBAL", CARA="M_T_D_N", VALE=(1.0e13,)),),
)


ASSEMBLAGE(
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    CARA_ELEM=ELEM2,
    NUME_DDL=CO("NUMEDDL2"),
    MATR_ASSE=(
        _F(MATRICE=CO("RIGI2"), OPTION="RIGI_MECA"),
        _F(MATRICE=CO("MASSE2"), OPTION="MASS_MECA"),
        _F(MATRICE=CO("AMOR2"), OPTION="AMOR_MECA"),
    ),
)


# Chargement P incident
ONDEP = AFFE_CHAR_MECA_F(
    MODELE=MODELE,
    ONDE_PLANE=_F(
        DIRECTION=(sina, cosa, 0.0),
        TYPE_ONDE="P",
        FONC_SIGNAL=vite_1,
        COOR_SOURCE=(x0, y0),
        DEPL_IMPO=depl_1,
        GROUP_MA=("LITOT"),
    ),
)

ONDEP0 = AFFE_CHAR_MECA_F(
    MODELE=MODELE,
    ONDE_PLANE=_F(
        DIRECTION=(sina, cosa, 0.0),
        TYPE_ONDE="P",
        FONC_SIGNAL=vite_1,
        COOR_SOURCE=(x0, y0),
        DEPL_IMPO=depl_1,
        GROUP_MA=("LIB"),
    ),
)


ONDES = AFFE_CHAR_MECA_F(
    MODELE=MODELE,
    ONDE_PLANE=_F(
        DIRECTION=(sina, cosa, 0.0),
        TYPE_ONDE="S",
        FONC_SIGNAL=vite_1,
        COOR_SOURCE=(x0, y0),
        DEPL_IMPO=depl_1,
        GROUP_MA=("LITOT"),
    ),
)
ONDES0 = AFFE_CHAR_MECA_F(
    MODELE=MODELE,
    ONDE_PLANE=_F(
        DIRECTION=(sina, cosa, 0.0),
        TYPE_ONDE="S",
        FONC_SIGNAL=vite_1,
        COOR_SOURCE=(x0, y0),
        DEPL_IMPO=depl_1,
        GROUP_MA=("LIB"),
    ),
)


# Résultat sans ondes réfléchies
ResuP = DYNA_VIBRA(
    BASE_CALCUL="PHYS",
    TYPE_CALCUL="TRAN",
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    MATR_MASS=MASSE,
    MATR_RIGI=RIGI,
    MATR_AMOR=AMOR,
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK"),
    INCREMENT=_F(LIST_INST=LINST),
    ARCHIVAGE=_F(LIST_INST=LINST),
    EXCIT=(_F(CHARGE=ONDEP),),
)


FX1 = FORMULE(NOM_PARA=("X", "Y"), VALE="X-Lt/2.", Lt=Lt)
FX2 = FORMULE(NOM_PARA=("X", "Y"), VALE="X+Lt/2.", Lt=Lt)

FX = FORMULE(NOM_PARA=("X", "Y"), VALE="X")
FY = FORMULE(NOM_PARA=("X", "Y"), VALE="Y")
FZ0 = DEFI_CONSTANTE(VALE=0.0)

XX1 = PROJ_CHAMP(
    RESULTAT=ResuP,
    METHODE="COLLOCATION",
    NOM_CHAM=("DEPL", "VITE", "ACCE"),  #'FORC_NODA'),
    MODELE_1=MODELE,
    MODELE_2=MODELE,
    VIS_A_VIS=(
        _F(GROUP_MA_2="LID", GROUP_MA_1="SUD", CAS_FIGURE="2D", TRANSF_GEOM_2=(FX1, FY, FZ0)),
    ),
    PROL_ZERO="OUI",
    LIST_INST=LINST,
)

XX2 = PROJ_CHAMP(
    RESULTAT=ResuP,
    METHODE="COLLOCATION",
    NOM_CHAM=("DEPL", "VITE", "ACCE"),  #'FORC_NODA'),
    MODELE_1=MODELE,
    MODELE_2=MODELE,
    VIS_A_VIS=(
        _F(GROUP_MA_2="LIG", GROUP_MA_1="SUG", CAS_FIGURE="2D", TRANSF_GEOM_2=(FX2, FY, FZ0)),
    ),
    PROL_ZERO="OUI",
    LIST_INST=LINST,
)

# ------------------------------------------------------------
# Définition des chargements sur les bords
# ------------------------------------------------------------

EVOCH1A = CREA_RESU(
    OPERATION="CONV_RESU",
    TYPE_RESU="DYNA_TRANS",
    CONV_RESU=_F(
        COEF=1.0e13,  # ,
        NOM_CHAM_INIT="ACCE",
        RESU_INIT=XX1,
        NUME_DDL=NUMEDDL2,
        PRECISION=1.0e-6,
        CRITERE="RELATIF",
        LIST_INST=LINST,
    ),
)
EVOCH1 = CREA_RESU(
    OPERATION="CONV_RESU",
    TYPE_RESU="EVOL_CHAR",  #
    CONV_RESU=_F(
        COEF=1.0,  # 1.E13, #,
        NOM_CHAM_INIT="DEPL",
        RESU_INIT=EVOCH1A,
        NUME_DDL=NUMEDDL2,
        PRECISION=1.0e-6,
        CRITERE="RELATIF",
        LIST_INST=LINST,
        GROUP_NO_INTERF="LID",
        COOR_REFE=(x0 + Lt / 2.0, y0, 0.0),
        VITE_ONDE=(Vp / sina),
        DIRECTION=(1.0, 0.0, 0.0),
    ),
)

EVOLB1 = AFFE_CHAR_MECA(MODELE=MODELE, EVOL_CHAR=EVOCH1)

EVOCH2A = CREA_RESU(
    OPERATION="CONV_RESU",
    TYPE_RESU="DYNA_TRANS",
    CONV_RESU=_F(
        COEF=1.0e13,  # ,
        NOM_CHAM_INIT="ACCE",
        RESU_INIT=XX2,
        NUME_DDL=NUMEDDL2,
        PRECISION=1.0e-6,
        CRITERE="RELATIF",
        LIST_INST=LINST,
    ),
)

EVOCH2 = CREA_RESU(
    OPERATION="CONV_RESU",
    TYPE_RESU="EVOL_CHAR",  #
    CONV_RESU=_F(
        COEF=1.0,  # 1.E13, #,
        NOM_CHAM_INIT="DEPL",
        RESU_INIT=EVOCH2A,
        NUME_DDL=NUMEDDL2,
        PRECISION=1.0e-6,
        CRITERE="RELATIF",
        LIST_INST=LINST,
        GROUP_NO_INTERF="LIG",
        COOR_REFE=(x0 + Lt / 2.0, y0, 0.0),
        VITE_ONDE=(Vp / sina),
        DIRECTION=(1.0, 0.0, 0.0),
    ),
)

EVOLB2 = AFFE_CHAR_MECA(MODELE=MODELE, EVOL_CHAR=EVOCH2)


# Résultat avec ondes réfléchies de cisaillement et de compression (selon théorie)
ResuP0 = DYNA_VIBRA(
    BASE_CALCUL="PHYS",
    TYPE_CALCUL="TRAN",
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    CARA_ELEM=ELEM2,
    MATR_MASS=MASSE2,
    MATR_RIGI=RIGI2,
    MATR_AMOR=AMOR2,
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK"),
    INCREMENT=_F(LIST_INST=LINST),
    ARCHIVAGE=_F(LIST_INST=LINST),
    EXCIT=(_F(CHARGE=ONDEP0), _F(CHARGE=EVOLB1), _F(CHARGE=EVOLB2)),
)

ResuP0 = CALC_CHAMP(
    reuse=ResuP0,
    RESULTAT=ResuP0,
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    GROUP_MA=("SUG", "SUD"),
    FORCE=("FORC_NODA",),
)

XXG1 = PROJ_CHAMP(
    RESULTAT=ResuP0,
    METHODE="COLLOCATION",
    NOM_CHAM=("DEPL", "VITE", "ACCE", "FORC_NODA"),
    MODELE_1=MODELE,
    MODELE_2=MODELE,
    VIS_A_VIS=(
        _F(GROUP_MA_2="LIG", GROUP_MA_1="SUTOT", CAS_FIGURE="2D", TRANSF_GEOM_2=(FX, FY, FZ0)),
        _F(GROUP_MA_2="LID", GROUP_MA_1="SUTOT", CAS_FIGURE="2D", TRANSF_GEOM_2=(FX, FY, FZ0)),
        _F(GROUP_MA_2="LIB", GROUP_MA_1="SUTOT", CAS_FIGURE="2D", TRANSF_GEOM_2=(FX, FY, FZ0)),
    ),
    PROL_ZERO="OUI",
    LIST_INST=LINST,
)

ASSEMBLAGE(
    MODELE=MODELE,
    CHAM_MATER=CHMATB,
    CARA_ELEM=ELEM,
    NUME_DDL=CO("NUMEDDLB"),
    MATR_ASSE=(
        _F(MATRICE=CO("RIGIB"), OPTION="RIGI_MECA"),
        _F(MATRICE=CO("MASSEB"), OPTION="MASS_MECA"),
        _F(MATRICE=CO("AMORB"), OPTION="AMOR_MECA"),
    ),
)

EVOLC1 = DEFI_CHAR_SOL(
    CHARGEMENT="FORCE",
    MODELE=MODELE,
    COEF=1,
    RESU_INIT=XXG1,
    NUME_DDL=NUMEDDL,
    PRECISION=1.0e-6,
    CRITERE="RELATIF",
    LIST_INST=LINST,
)

EVOLC2 = DEFI_CHAR_SOL(
    CHARGEMENT="ONDE_PLANE",
    MODELE=MODELE,
    RESU_INIT=XXG1,
    MATR_RIGI=RIGIB,
    MATR_AMOR=AMORB,
    PRECISION=1.0e-6,
    CRITERE="RELATIF",
    LIST_INST=LINST,
)

ResuP1 = DYNA_VIBRA(
    BASE_CALCUL="PHYS",
    TYPE_CALCUL="TRAN",
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    CARA_ELEM=ELEM,
    MATR_MASS=MASSE,
    MATR_RIGI=RIGI,
    MATR_AMOR=AMOR,
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK"),
    INCREMENT=_F(LIST_INST=LINST),
    ARCHIVAGE=_F(LIST_INST=LINST),
    EXCIT=(_F(CHARGE=EVOLC1), _F(CHARGE=EVOLC2)),
)


# On recupère les fonctions de deplacement X et Z aux points de post-traitement

accxc = CALC_FONCTION(COMB=_F(FONCTION=acce_1, COEF=1.0), LIST_PARA=LINST)


ayNGHP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NGH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNMHP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NMH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNDHP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NDH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNGBP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NGB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNMBP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NMB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNDBP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NDB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)


axNGHP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NGH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNMHP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NMH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNDHP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NDH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNGBP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NGB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNMBP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NMB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNDBP = RECU_FONCTION(
    RESULTAT=ResuP1,
    GROUP_NO="NDB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

# On recompose la composante de l'onde P --> A_p = Ax*sina + Ay*cosa

APF_NGH = FORMULE(
    NOM_PARA="INST",
    VALE="axNGHP(INST)*sina+ayNGHP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNGHP=axNGHP,
    ayNGHP=ayNGHP,
)

AP_NGH = CALC_FONC_INTERP(
    FONCTION=APF_NGH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


APF_NMH = FORMULE(
    NOM_PARA="INST",
    VALE="axNMHP(INST)*sina+ayNMHP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNMHP=axNMHP,
    ayNMHP=ayNMHP,
)

AP_NMH = CALC_FONC_INTERP(
    FONCTION=APF_NMH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


APF_NDH = FORMULE(
    NOM_PARA="INST",
    VALE="axNDHP(INST)*sina+ayNDHP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNDHP=axNDHP,
    ayNDHP=ayNDHP,
)

AP_NDH = CALC_FONC_INTERP(
    FONCTION=APF_NDH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


APF_NGB = FORMULE(
    NOM_PARA="INST",
    VALE="axNGBP(INST)*sina+ayNGBP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNGBP=axNGBP,
    ayNGBP=ayNGBP,
)

AP_NGB = CALC_FONC_INTERP(
    FONCTION=APF_NGB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


APF_NMB = FORMULE(
    NOM_PARA="INST",
    VALE="axNMBP(INST)*sina+ayNMBP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNMBP=axNMBP,
    ayNMBP=ayNMBP,
)

AP_NMB = CALC_FONC_INTERP(
    FONCTION=APF_NMB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


APF_NDB = FORMULE(
    NOM_PARA="INST",
    VALE="axNDBP(INST)*sina+ayNDBP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNDBP=axNDBP,
    ayNDBP=ayNDBP,
)

AP_NDB = CALC_FONC_INTERP(
    FONCTION=APF_NDB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)

TEST_FONCTION(
    VALEUR=(
        _F(
            VALE_CALC=0.95536998414330,
            VALE_REFE=1.0,
            PRECISION=4.5e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.038,
            FONCTION=AP_NGB,
        ),
        _F(
            VALE_CALC=0.99787031077591,
            VALE_REFE=1.0,
            PRECISION=3.0e-3,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.058,
            FONCTION=AP_NMB,
        ),
        _F(
            VALE_CALC=0.96350101659604,
            VALE_REFE=1.0,
            PRECISION=4.0e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.076,
            FONCTION=AP_NDB,
        ),
        _F(
            VALE_CALC=1.971019543613,
            VALE_REFE=2.0,
            PRECISION=2.0e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.088,
            FONCTION=AP_NGH,
        ),
        _F(
            VALE_CALC=1.948978953310,
            VALE_REFE=2.0,
            PRECISION=3.0e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.106,
            FONCTION=AP_NMH,
        ),
        _F(
            VALE_CALC=2.035540239648,
            VALE_REFE=2.0,
            PRECISION=2.0e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.126,
            FONCTION=AP_NDH,
        ),
    )
)


ResuS = DYNA_VIBRA(
    BASE_CALCUL="PHYS",
    TYPE_CALCUL="TRAN",
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    MATR_MASS=MASSE,
    MATR_RIGI=RIGI,
    MATR_AMOR=AMOR,
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK"),
    INCREMENT=_F(LIST_INST=LINST),
    ARCHIVAGE=_F(LIST_INST=LINST),
    EXCIT=(_F(CHARGE=ONDES),),
)

XX1S = PROJ_CHAMP(
    RESULTAT=ResuS,
    METHODE="COLLOCATION",
    NOM_CHAM=("DEPL", "VITE", "ACCE"),  #'FORC_NODA'),
    MODELE_1=MODELE,
    MODELE_2=MODELE,
    VIS_A_VIS=(
        _F(GROUP_MA_2="LID", GROUP_MA_1="SUD", CAS_FIGURE="2D", TRANSF_GEOM_2=(FX1, FY, FZ0)),
    ),
    PROL_ZERO="OUI",
    LIST_INST=LINST,
)

XX2S = PROJ_CHAMP(
    RESULTAT=ResuS,
    METHODE="COLLOCATION",
    NOM_CHAM=("DEPL", "VITE", "ACCE"),  #'FORC_NODA'),
    MODELE_1=MODELE,
    MODELE_2=MODELE,
    VIS_A_VIS=(
        _F(GROUP_MA_2="LIG", GROUP_MA_1="SUG", CAS_FIGURE="2D", TRANSF_GEOM_2=(FX2, FY, FZ0)),
    ),
    PROL_ZERO="OUI",
    LIST_INST=LINST,
)
# ------------------------------------------------------------
# Définition des chargements sur les bords
# ------------------------------------------------------------

EVOCH1AS = CREA_RESU(
    OPERATION="CONV_RESU",
    TYPE_RESU="DYNA_TRANS",  #'EVOL_CHAR', #
    CONV_RESU=_F(
        COEF=1.0e13,
        NOM_CHAM_INIT="ACCE",
        RESU_INIT=XX1S,
        NUME_DDL=NUMEDDL2,
        PRECISION=1.0e-6,
        CRITERE="RELATIF",
        LIST_INST=LINST,
    ),
)
EVOCH1S = CREA_RESU(
    OPERATION="CONV_RESU",
    TYPE_RESU="EVOL_CHAR",  #
    CONV_RESU=_F(
        COEF=1.0,
        NOM_CHAM_INIT="DEPL",
        RESU_INIT=EVOCH1AS,
        NUME_DDL=NUMEDDL2,
        PRECISION=1.0e-6,
        CRITERE="RELATIF",
        LIST_INST=LINST,
        GROUP_NO_INTERF="LID",
        COOR_REFE=(x0 + Lt / 2.0, y0, 0.0),
        VITE_ONDE=(Vs / sina),
        DIRECTION=(1.0, 0.0, 0.0),
    ),
)

EVOLB1S = AFFE_CHAR_MECA(MODELE=MODELE, EVOL_CHAR=EVOCH1S)

EVOCH2AS = CREA_RESU(
    OPERATION="CONV_RESU",
    TYPE_RESU="DYNA_TRANS",  #'EVOL_CHAR', #
    CONV_RESU=_F(
        COEF=1.0e13,  # ,
        NOM_CHAM_INIT="ACCE",
        RESU_INIT=XX2S,
        NUME_DDL=NUMEDDL2,
        PRECISION=1.0e-6,
        CRITERE="RELATIF",
        LIST_INST=LINST,
    ),
)

EVOCH2S = CREA_RESU(
    OPERATION="CONV_RESU",
    TYPE_RESU="EVOL_CHAR",  #
    CONV_RESU=_F(
        COEF=1.0,  # 1.E13, #,
        NOM_CHAM_INIT="DEPL",
        RESU_INIT=EVOCH2AS,
        NUME_DDL=NUMEDDL2,
        PRECISION=1.0e-6,
        CRITERE="RELATIF",
        LIST_INST=LINST,
        GROUP_NO_INTERF="LIG",
        COOR_REFE=(x0 + Lt / 2.0, y0, 0.0),
        VITE_ONDE=(Vs / sina),
        DIRECTION=(1.0, 0.0, 0.0),
    ),
)

EVOLB2S = AFFE_CHAR_MECA(MODELE=MODELE, EVOL_CHAR=EVOCH2S)


# Résultat avec ondes réfléchies de cisaillement et de compression (selon théorie)
ResuS0 = DYNA_VIBRA(
    BASE_CALCUL="PHYS",
    TYPE_CALCUL="TRAN",
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    CARA_ELEM=ELEM2,
    MATR_MASS=MASSE2,
    MATR_RIGI=RIGI2,
    MATR_AMOR=AMOR2,
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK"),
    INCREMENT=_F(LIST_INST=LINST),
    ARCHIVAGE=_F(LIST_INST=LINST),
    EXCIT=(_F(CHARGE=ONDES0), _F(CHARGE=EVOLB1S), _F(CHARGE=EVOLB2S)),
)

ResuS0 = CALC_CHAMP(
    reuse=ResuS0,
    RESULTAT=ResuS0,
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    GROUP_MA=("SUG", "SUD"),
    FORCE=("FORC_NODA",),
)

XXG1S = PROJ_CHAMP(
    RESULTAT=ResuS0,
    METHODE="COLLOCATION",
    NOM_CHAM=("DEPL", "VITE", "ACCE", "FORC_NODA"),
    MODELE_1=MODELE,
    MODELE_2=MODELE,
    VIS_A_VIS=(
        _F(GROUP_MA_2="LIG", GROUP_MA_1="SUTOT", CAS_FIGURE="2D", TRANSF_GEOM_2=(FX, FY, FZ0)),
        _F(GROUP_MA_2="LID", GROUP_MA_1="SUTOT", CAS_FIGURE="2D", TRANSF_GEOM_2=(FX, FY, FZ0)),
        _F(GROUP_MA_2="LIB", GROUP_MA_1="SUTOT", CAS_FIGURE="2D", TRANSF_GEOM_2=(FX, FY, FZ0)),
    ),
    PROL_ZERO="OUI",
    LIST_INST=LINST,
)


EVOLC1S = DEFI_CHAR_SOL(
    CHARGEMENT="FORCE",
    MODELE=MODELE,
    COEF=1,
    RESU_INIT=XXG1S,
    NUME_DDL=NUMEDDL,
    PRECISION=1.0e-6,
    CRITERE="RELATIF",
    LIST_INST=LINST,
)

EVOLC2S = DEFI_CHAR_SOL(
    CHARGEMENT="ONDE_PLANE",
    MODELE=MODELE,
    RESU_INIT=XXG1S,
    MATR_RIGI=RIGIB,
    MATR_AMOR=AMORB,
    PRECISION=1.0e-6,
    CRITERE="RELATIF",
    LIST_INST=LINST,
)

ResuS1 = DYNA_VIBRA(
    BASE_CALCUL="PHYS",
    TYPE_CALCUL="TRAN",
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    CARA_ELEM=ELEM,
    MATR_MASS=MASSE,
    MATR_RIGI=RIGI,
    MATR_AMOR=AMOR,
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK"),
    INCREMENT=_F(LIST_INST=LINST),
    ARCHIVAGE=_F(LIST_INST=LINST),
    EXCIT=(_F(CHARGE=EVOLC1S), _F(CHARGE=EVOLC2S)),
)


# On recupère les fonctions de deplacement X et Z aux points de post-traitement


ayNGHS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NGH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNMHS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NMH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNDHS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NDH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNGBS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NGB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNMBS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NMB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNDBS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NDB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)


axNGHS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NGH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNMHS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NMH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNDHS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NDH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNGBS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NGB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNMBS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NMB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNDBS = RECU_FONCTION(
    RESULTAT=ResuS1,
    GROUP_NO="NDB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)


# On recompose la composante de l'onde S --> A_s = Ax*cosa - Az*sina

ASF_NGH = FORMULE(
    NOM_PARA="INST",
    VALE="axNGHS(INST)*cosa-ayNGHS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNGHS=axNGHS,
    ayNGHS=ayNGHS,
)

AS_NGH = CALC_FONC_INTERP(
    FONCTION=ASF_NGH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


ASF_NMH = FORMULE(
    NOM_PARA="INST",
    VALE="axNMHS(INST)*cosa-ayNMHS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNMHS=axNMHS,
    ayNMHS=ayNMHS,
)

AS_NMH = CALC_FONC_INTERP(
    FONCTION=ASF_NMH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


ASF_NDH = FORMULE(
    NOM_PARA="INST",
    VALE="axNDHS(INST)*cosa-ayNDHS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNDHS=axNDHS,
    ayNDHS=ayNDHS,
)

AS_NDH = CALC_FONC_INTERP(
    FONCTION=ASF_NDH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


ASF_NGB = FORMULE(
    NOM_PARA="INST",
    VALE="axNGBS(INST)*cosa-ayNGBS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNGBS=axNGBS,
    ayNGBS=ayNGBS,
)

AS_NGB = CALC_FONC_INTERP(
    FONCTION=ASF_NGB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


ASF_NMB = FORMULE(
    NOM_PARA="INST",
    VALE="axNMBS(INST)*cosa-ayNMBS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNMBS=axNMBS,
    ayNMBS=ayNMBS,
)

AS_NMB = CALC_FONC_INTERP(
    FONCTION=ASF_NMB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


ASF_NDB = FORMULE(
    NOM_PARA="INST",
    VALE="axNDBS(INST)*cosa-ayNDBS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNDBS=axNDBS,
    ayNDBS=ayNDBS,
)

AS_NDB = CALC_FONC_INTERP(
    FONCTION=ASF_NDB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)

TEST_FONCTION(
    VALEUR=(
        _F(
            VALE_CALC=-0.94941783382541,
            VALE_REFE=-1.0,
            PRECISION=5.2e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.038,
            FONCTION=AS_NGB,
        ),
        _F(
            VALE_CALC=-0.97487205711675,
            VALE_REFE=-1.0,
            PRECISION=3.0e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.070,
            FONCTION=AS_NMB,
        ),
        _F(
            VALE_CALC=-0.97276868582764,
            VALE_REFE=-1.0,
            PRECISION=3.0e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.104,
            FONCTION=AS_NDB,
        ),
        _F(
            VALE_CALC=-1.980137996789,
            VALE_REFE=-2.0,
            PRECISION=1.3e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.124,
            FONCTION=AS_NGH,
        ),
        _F(
            VALE_CALC=-1.924834549708,
            VALE_REFE=-2.0,
            PRECISION=4.0e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.156,
            FONCTION=AS_NMH,
        ),
        _F(
            VALE_CALC=-1.932409947178,
            VALE_REFE=-2.0,
            PRECISION=3.5e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.188,
            FONCTION=AS_NDH,
        ),
    )
)


FIN()
