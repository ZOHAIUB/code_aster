# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# person_in_charge: david.haboussa at edf.fr

DEBUT(CODE="OUI")

viscochab = CREA_LIB_MFRONT(NOM_COMPOR="ViscoChaboche", UNITE_MFRONT=38)
memo_nrad = CREA_LIB_MFRONT(NOM_COMPOR="ViscoMemoNrad", UNITE_MFRONT=39)

pilote = ""
# pilote='INTERACTIF'

ncal = 3

ACIER = [None] * ncal

YOUNG = 205000.0
POISSON = 0.3
UN_SUR_K = 1 / 156.9
N = 6.84
K = 1
W = 0
C1_I = 182392
C2_I = 16678
G1_0 = 3079
G2_0 = 178.7
R_0 = 97.83
A_I = 0.5818
B = 51.3
MU = 10.0
Q_M = 270.5
Q_0 = -86.2
ETA = 0.135
delta1 = 0.00306184445749
delta2 = 0.0154637840366
R_I = R_0 + 7.1
delta = [None] * ncal
delta[0] = [delta1, delta2]
delta[1] = [1, 1]
delta[2] = [delta1, delta2]


ACIER[0] = DEFI_MATERIAU(
    ELAS=_F(E=YOUNG, NU=POISSON),
    CIN2_CHAB=_F(R_0=R_0, R_I=R_I, B=B, C1_I=C1_I, C2_I=C2_I, G1_0=G1_0, G2_0=G2_0, A_I=A_I),
    CIN2_NRAD=_F(DELTA1=delta[0][0], DELTA2=delta[0][1]),
    MEMO_ECRO=_F(MU=MU, Q_M=Q_M, Q_0=Q_0, ETA=ETA),
    LEMAITRE=_F(N=N, UN_SUR_K=UN_SUR_K, UN_SUR_M=0.0),
)
# Viscochab
ACIER[1] = DEFI_MATERIAU(
    ELAS=_F(E=YOUNG, NU=POISSON),
    MFRONT=_F(LISTE_COEF=(YOUNG, POISSON, 0.0, R_I, R_0, B, C1_I, C2_I, G1_0, G2_0, N, UN_SUR_K)),
)

# ViscMemoNrad
ACIER[2] = DEFI_MATERIAU(
    ELAS=_F(E=YOUNG, NU=POISSON),
    MFRONT=_F(
        LISTE_COEF=(
            YOUNG,
            POISSON,
            delta[2][0],
            delta[2][1],
            R_I,
            R_0,
            B,
            K,
            W,
            C1_I,
            G1_0,
            C2_I,
            G2_0,
            N,
            UN_SUR_K,
            A_I,
            ETA,
            Q_M,
            Q_0,
            MU,
        )
    ),
)


typcal = [None] * ncal
typcal[0] = ["VISC_MEMO_NRAD", "BRENT", 0, " ", " "]
typcal[1] = ["MFRONT", " ", 1, viscochab, 40]
typcal[2] = ["MFRONT", " ", 2, memo_nrad, 41]


compor = [None] * ncal
compor[0] = [
    {
        "RELATION": typcal[0][0],
        "ALGO_INTE": typcal[0][1],
        "RESI_INTE": 1.0e-8,
        "ITER_INTE_MAXI": 50,
        "ITER_INTE_PAS": 10,
    }
]
compor[1] = [
    {
        "RELATION": typcal[1][0],
        "COMPOR_MFRONT": typcal[1][3],
        "ITER_INTE_PAS": 10,
        "RESI_INTE": 1e-12,
    }
]
compor[2] = [{"RELATION": typcal[2][0], "COMPOR_MFRONT": typcal[2][3], "ITER_INTE_PAS": 10}]


legende = [None] * ncal
for index, ical in enumerate(typcal):
    legende[index] = (
        ical[0]
        + "_"
        + ical[1]
        + "_delta1="
        + str(int(delta[ical[2]][0] * 10000.0) / 10000.0)
        + "_delta2="
        + str(int(delta[ical[2]][0] * 10000.0) / 10000.0)
    )
print("legende=", legende)


FIN()
