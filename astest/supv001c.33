# coding=utf-8

from code_aster.Cata.DataStructure import CO as typCO
from code_aster.Cata.DataStructure import (cham_mater, cham_no_sdaster,
                                           char_cine_ther, char_ther, evol_ther,
                                           listr8_sdaster, modele_sdaster)
from code_aster.Cata.Syntax import _F, MACRO, SIMP
from code_aster.Commands import THER_LINEAIRE
from code_aster.Supervis.ExecuteCommand import UserMacro


def ma_macro_ops(self, TEMPER=None, **kwargs):
    """Corps de la macro de test."""
    # soit Ã  gauche, soit sous TEMPER
    from code_aster.Commands import THER_LINEAIRE
    rther=THER_LINEAIRE(MODELE=kwargs['MOTH'],
                        ETAT_INIT=_F(CHAM_NO=kwargs['TEMP0'],),
                        INCREMENT=_F(LIST_INST=kwargs['LR8']),
                        CHAM_MATER=kwargs['CHMAT'],
                        EXCIT=_F(CHARGE=kwargs['CHTH']))
    if TEMPER is None:
        return rther
    self.register_result(rther, TEMPER)
    return None

def ma_macro_sdprod(self, TEMPER=None, **kwargs):
    if kwargs.get('__all__'):
        return ([None, evol_ther], [None, evol_ther])

    if TEMPER:
        self.type_sdprod(TEMPER, evol_ther)
        return None
    return evol_ther

MA_MACRO_cata = MACRO(
    nom="MA_MACRO",
    op=ma_macro_ops,
    sd_prod=ma_macro_sdprod,
    MOTH=SIMP(statut='o',typ=modele_sdaster),
    TEMP0=SIMP(statut='o',typ=cham_no_sdaster),
    LR8=SIMP(statut='o',typ=listr8_sdaster),
    CHMAT=SIMP(statut='o',typ=cham_mater),
    CHTH=SIMP(statut='o',typ=(char_ther,char_cine_ther)),
    TEMPER=SIMP(statut='f', typ=typCO)
)

MA_MACRO = UserMacro("MA_MACRO", MA_MACRO_cata, ma_macro_ops)
