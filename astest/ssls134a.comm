# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(
    CODE="OUI",
    ERREUR=_F(ALARME="ALARME"),
    DEBUG=_F(SDVERI="OUI"),
    IGNORE_ALARM=("CALCULEL_83", "CALCULEL_88", "CALCULEL7_28"),
)

MA = LIRE_MAILLAGE(FORMAT="MED", UNITE=20)

MODEL = AFFE_MODELE(
    MAILLAGE=MA, AFFE=_F(GROUP_MA="PLAQUE", PHENOMENE="MECANIQUE", MODELISATION="DKT")
)

CARA = AFFE_CARA_ELEM(MODELE=MODEL, COQUE=_F(GROUP_MA="PLAQUE", EPAIS=0.20))

# on cree une sd evol_elas avec des champs d'efforts imposes :
# -------------------------------------------------------------
# compression uniforme + effort transversal
CHEFF1 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, -1.0e6, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0e5),
    ),
)
# section totalement tendue en X (pivot A "vertical") + effort transversal
CHEFF2 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(1.0e6, 0.0, 0.0, 0.0, 0.0, 0.0, -6.0e5, 0.0),
    ),
)
# section totalement tendue en Y (pivot A "vertical") + effort transversal
CHEFF3 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 1.0e6, 0.0, 0.0, 0.0, 0.0, -2.0e4, 8.0e4),
    ),
)
# fibre supérieure tendue en Y
CHEFF4 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 0.0, 0.0, 0.0, 1.0e5, 0.0, 0.0, 0.0),
    ),
)
# fibre supérieure tendue en X
CHEFF5 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 0.0, 0.0, 1.0e5, 0.0, 0.0, 0.0, 0.0),
    ),
)
# section partiellement tendue
CHEFF6 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(-1.0e5, 0.0, 0.0, 1.0e5, 0.0, 0.0, 0.0, 0.0),
    ),
)
# section partiellement tendue
CHEFF7 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(1.0e5, 0.0, 0.0, 1.0e5, 0.0, 0.0, 0.0, 0.0),
    ),
)
# section totalement tendue
CHEFF8 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(2.0e6, 0.0, 0.0, 1.0e5, 0.0, 0.0, 0.0, 0.0),
    ),
)

CHEFF9 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 0.0, 0.0, 1.0e5, -75.0e3, 0.0, 0.0, 0.0),
    ),
)

CHEFF10 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 0.0, 0.0, 0.0, -150e3, 0.0, 0.0, 0.0),
    ),
)
#
# pivot B
CHEFF15 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 0.0, 0.0, 0.0, -26.0e4, 0.0, 0.0, 0.0),
    ),
)

# vrai pivot C avec compression totale d'une facette sur la section entière
CHEFF16 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 0.0, 0.0, 0.0, -38.0e4, 0.0, 0.0, 0.0),
    ),
)

CHEFF17 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, -15.0e5, 0.0, 0.0, 0.0, 0.0, 0.0, 8.0e5),
    ),
)

# Pivot C avec compression totale d'une facette sur la section entière
CHEFF18 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(-45.0e5, 0.0, 0.0, 38.0e4, 0.0, 0.0, 0.0, 1.0e5),
    ),
)

RESUELU = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_ELAS",
    AFFE=(
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF1, INST=1.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF2, INST=2.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF3, INST=3.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF4, INST=4.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF5, INST=5.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF6, INST=6.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF7, INST=7.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF8, INST=8.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF9, INST=9.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF10, INST=10.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF15, INST=11.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF16, INST=12.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF17, INST=13.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF18, INST=14.0, MODELE=MODEL, CARA_ELEM=CARA),
    ),
)

# CAS 1 - calcul du ferraillage :
# --------------------------------

RESUELU1 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    reuse=RESUELU,
    CARA_ELEM=CARA,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 1
# -----------------------------------------------------
D_ref = [
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # 1
    [
        0.00115,
        0.00115,
        0.0,
        0.0,
        4.0113556e-03,
        1.4094096e-03,
        1.3198190e02,
        0.5444913831519799,
    ],  # 2
    [0.0, 0.0, 0.00115, 0.00115, 0.0, 0.0, 8.9700000e01, 1.9933333e-01],  # 3
    [0.0, 0.0, 0.0, 0.00158351182, 0.0, 0.0, 6.1756961e01, 1.3723769e-01],  # 4
    [0.0, 0.00158351182, 0.0, 0.0, 0.0, 0.0, 6.1756961e01, 1.3723769e-01],  # 5
    [0.0, 0.00146007491, 0.0, 0.0, 0.0, 0.0, 5.6942921e01, 1.2653982e-01],  # 6
    [0.0, 0.00170854611, 0.0, 0.0, 0.0, 0.0, 6.6633298e01, 1.4807399e-01],  # 7
    [0.00038333333, 0.00421666666, 0.0, 0.0, 0.0, 0.0, 1.7940000e02, 3.9866666e-01],  # 8
    [0.0, 0.00158351182, 0.00115593019, 0.0, 0.0, 0.0, 1.0683823e02, 2.3741830e-01],  # 9
    [0.0, 0.0, 0.00252854447, 0.0, 0.0, 0.0, 9.8613234e01, 2.1914052e-01],  # 10
    [0.0, 0.0, 0.01302618694, 0.0, 0.0, 0.0, 5.0802129e02, 1.1289362e00],  # 11
    [-1.0, -1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0],  # 12
    [0.0, 0.0, 0.0, 0.0, 1.3021073e-03, 6.3151712e-03, 5.9414772e01, 0.24735887552409078],  # 13
    [-1.0, -1.0, -1.0, -1.0, 0.0, -0.0, -1.0, -1.0],  # 14
]

D_calc = [
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # 1
    [
        0.00115,
        0.00115,
        0.0,
        0.0,
        4.0113556e-03,
        1.4094096e-03,
        1.3198190e02,
        0.5444913831519799,
    ],  # 2
    [0.0, 0.0, 0.00115, 0.00115, 0.0, 0.0, 8.9700000e01, 1.9933333e-01],  # 3
    [0.0, 0.0, 0.0, 0.00158351182, 0.0, 0.0, 6.1756961e01, 1.3723769e-01],  # 4
    [0.0, 0.00158351182, 0.0, 0.0, 0.0, 0.0, 6.1756961e01, 1.3723769e-01],  # 5
    [0.0, 0.00146007491, 0.0, 0.0, 0.0, 0.0, 5.6942921e01, 1.2653982e-01],  # 6
    [0.0, 0.00170854611, 0.0, 0.0, 0.0, 0.0, 6.6633298e01, 1.4807399e-01],  # 7
    [0.00038333333, 0.00421666666, 0.0, 0.0, 0.0, 0.0, 1.7940000e02, 3.9866666e-01],  # 8
    [0.0, 0.00158351182, 0.00115593019, 0.0, 0.0, 0.0, 1.0683823e02, 2.3741830e-01],  # 9
    [0.0, 0.0, 0.00252854447, 0.0, 0.0, 0.0, 9.8613234e01, 2.1914052e-01],  # 10
    [0.0, 0.0, 0.01302618694, 0.0, 0.0, 0.0, 5.0802129e02, 1.1289362e00],  # 11
    [-1.0, -1.0, -1.0, -1.0, 0.0, 0.0, -1.0, -1.0],  # 12
    [0.0, 0.0, 0.0, 0.0, 1.3021073e-03, 6.3151712e-03, 5.9414772e01, 0.24735887552409078],  # 13
    [-1.0, -1.0, -1.0, -1.0, 0.0, -0.0, -1.0, -1.0],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU1,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU1,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )


# CAS 2 - calcul du ferraillage avec acier de compression :
# ----------------------------------------------------------

RESUELU2 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 2
# -----------------------------------------------------
D_ref = [
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # 1
    [
        0.00115,
        0.00115,
        0.0,
        0.0,
        4.0113556e-03,
        1.4094096e-03,
        1.3198190e02,
        0.5444913831519799,
    ],  # 2
    [0.0, 0.0, 0.00115, 0.00115, 0.0, 0.0, 8.9700000e01, 1.9933333e-01],  # 3
    [0.0, 0.0, 0.0, 0.00158351182, 0.0, 0.0, 6.1756961e01, 1.3723769e-01],  # 4
    [0.0, 0.00158351182, 0.0, 0.0, 0.0, 0.0, 6.1756961e01, 1.3723769e-01],  # 5
    [0.0, 0.00146007491, 0.0, 0.0, 0.0, 0.0, 5.6942921e01, 1.2653982e-01],  # 6
    [0.0, 0.00170854611, 0.0, 0.0, 0.0, 0.0, 6.6633298e01, 1.4807399e-01],  # 7
    [0.00038333333, 0.00421666666, 0.0, 0.0, 0.0, 0.0, 1.7940000e02, 3.9866666e-01],  # 8
    [0.0, 0.00158351182, 0.00115593019, 0.0, 0.0, 0.0, 1.0683823e02, 2.3741830e-01],  # 9
    [0.0, 0.0, 0.00252854447, 0.0, 0.0, 0.0, 9.8613234e01, 2.1914052e-01],  # 10
    [0.0, 0.0, 0.00505733482, 0.00068338051, 0.0, 0.0, 223.887898353, 0.49752866300],  # 11
    [0.0, 0.0, 7.3807163e-03, 2.9833805e-03, 0.0, 0.0, 4.0419977e02, 8.9822172e-01],  # 12
    [0.0, 0.0, 0.0, 0.0, 1.3021073e-03, 6.3151712e-03, 5.9414772e01, 0.24735887552409078],  # 13
    [8.1583805e-03, 2.1736782e-03, 0.0, 6.5344961e-05, 0.0, 0.0, 4.0549874e02, 9.0110832e-01],  # 14
]

D_calc = [
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # 1
    [
        0.00115,
        0.00115,
        0.0,
        0.0,
        4.0113556e-03,
        1.4094096e-03,
        1.3198190e02,
        0.5444913831519799,
    ],  # 2
    [0.0, 0.0, 0.00115, 0.00115, 0.0, 0.0, 8.9700000e01, 1.9933333e-01],  # 3
    [0.0, 0.0, 0.0, 0.00158351182, 0.0, 0.0, 6.1756961e01, 1.3723769e-01],  # 4
    [0.0, 0.00158351182, 0.0, 0.0, 0.0, 0.0, 6.1756961e01, 1.3723769e-01],  # 5
    [0.0, 0.00146007491, 0.0, 0.0, 0.0, 0.0, 5.6942921e01, 1.2653982e-01],  # 6
    [0.0, 0.00170854611, 0.0, 0.0, 0.0, 0.0, 6.6633298e01, 1.4807399e-01],  # 7
    [0.00038333333, 0.00421666666, 0.0, 0.0, 0.0, 0.0, 1.7940000e02, 3.9866666e-01],  # 8
    [0.0, 0.00158351182, 0.00115593019, 0.0, 0.0, 0.0, 1.0683823e02, 2.3741830e-01],  # 9
    [0.0, 0.0, 0.00252854447, 0.0, 0.0, 0.0, 9.8613234e01, 2.1914052e-01],  # 10
    [0.0, 0.0, 0.00505733482, 0.00068338051, 0.0, 0.0, 223.887898353, 0.49752866300],  # 11
    [0.0, 0.0, 7.3807163e-03, 2.9833805e-03, 0.0, 0.0, 4.0419977e02, 8.9822172e-01],  # 12
    [0.0, 0.0, 0.0, 0.0, 1.3021073e-03, 6.3151712e-03, 5.9414772e01, 0.24735887552409078],  # 13
    [8.1583805e-03, 2.1736782e-03, 0.0, 6.5344961e-05, 0.0, 0.0, 4.0549874e02, 9.0110832e-01],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU2,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU2,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 3 - calcul du ferraillage avec ferraillage minimum:
# --------------------------------------------------------

RESUELU3 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            FERR_MIN="CODE",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 3
# -----------------------------------------------------
D_ref = [
    [0.000208, 0.000208, 0.000208, 0.000208, 0.0, 0.0, 3.2448000e01, 7.2106666e-02],  # 1
    [
        0.00115,
        0.00115,
        0.000208,
        0.000208,
        4.0113556e-03,
        1.4094096e-03,
        1.4820596e02,
        0.5805447164853131,
    ],  # 2
    [0.000208, 0.000208, 0.00115, 0.00115, 0.0, 0.0, 1.0592400e02, 2.3538666e-01],  # 3
    [0.000208, 0.000208, 0.000208, 0.00158351182, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 4
    [0.000208, 0.00158351182, 0.000208, 0.000208, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 5
    [0.000208, 0.00146007491, 0.000208, 0.000208, 0.0, 0.0, 8.1278921e01, 1.8061982e-01],  # 6
    [0.000208, 0.00170854611, 0.000208, 0.000208, 0.0, 0.0, 9.0969298e01, 2.0215399e-01],  # 7
    [0.00038333333, 0.00421666666, 0.000208, 0.000208, 0.0, 0.0, 1.9562400e02, 4.3472000e-01],  # 8
    [0.000208, 0.00158351182, 0.00115593019, 0.000208, 0.0, 0.0, 1.2306223e02, 2.7347169e-01],  # 9
    [0.000208, 0.000208, 0.00252854447, 0.000208, 0.0, 0.0, 1.2294923e02, 2.7322052e-01],  # 10
    [
        0.000208,
        0.000208,
        0.005048678295026455,
        0.00068338051,
        0.0,
        0.0,
        2.3977429e02,
        5.3283176e-01,
    ],  # 11
    [
        0.000208,
        0.000208,
        0.007348678295026455,
        2.9833805e-03,
        0.0,
        0.0,
        4.1917429e02,
        9.3149843e-01,
    ],  # 12
    [
        0.000208,
        0.000208,
        0.000208,
        0.000208,
        1.3021073e-03,
        6.3151712e-03,
        9.1862772e01,
        0.3194655421907574,
    ],  # 13
    [8.1583805e-03, 2.1736782e-03, 0.000208, 0.000208, 0.0, 0.0, 4.1917429e02, 9.3149843e-01],  # 14
]

D_calc = [
    [0.000208, 0.000208, 0.000208, 0.000208, 0.0, 0.0, 3.2448000e01, 7.2106666e-02],  # 1
    [
        0.00115,
        0.00115,
        0.000208,
        0.000208,
        4.0113556e-03,
        1.4094096e-03,
        1.4820596e02,
        0.5805447164853131,
    ],  # 2
    [0.000208, 0.000208, 0.00115, 0.00115, 0.0, 0.0, 1.0592400e02, 2.3538666e-01],  # 3
    [0.000208, 0.000208, 0.000208, 0.00158351182, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 4
    [0.000208, 0.00158351182, 0.000208, 0.000208, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 5
    [0.000208, 0.00146007491, 0.000208, 0.000208, 0.0, 0.0, 8.1278921e01, 1.8061982e-01],  # 6
    [0.000208, 0.00170854611, 0.000208, 0.000208, 0.0, 0.0, 9.0969298e01, 2.0215399e-01],  # 7
    [0.00038333333, 0.00421666666, 0.000208, 0.000208, 0.0, 0.0, 1.9562400e02, 4.3472000e-01],  # 8
    [0.000208, 0.00158351182, 0.00115593019, 0.000208, 0.0, 0.0, 1.2306223e02, 2.7347169e-01],  # 9
    [0.000208, 0.000208, 0.00252854447, 0.000208, 0.0, 0.0, 1.2294923e02, 2.7322052e-01],  # 10
    [
        0.000208,
        0.000208,
        0.005048678295026455,
        0.00068338051,
        0.0,
        0.0,
        2.3977429e02,
        5.3283176e-01,
    ],  # 11
    [
        0.000208,
        0.000208,
        0.007348678295026455,
        2.9833805e-03,
        0.0,
        0.0,
        4.1917429e02,
        9.3149843e-01,
    ],  # 12
    [
        0.000208,
        0.000208,
        0.000208,
        0.000208,
        1.3021073e-03,
        6.3151712e-03,
        9.1862772e01,
        0.3194655421907574,
    ],  # 13
    [8.1583805e-03, 2.1736782e-03, 0.000208, 0.000208, 0.0, 0.0, 4.1917429e02, 9.3149843e-01],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU3,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU3,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 4 - calcul du ferraillage avec ferraillage minimum manuellement renseigné:
# -------------------------------------------------------------------------------

RESUELU4 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            FERR_MIN="OUI",
            RHO_LONGI_MIN=0.0013,
            RHO_TRNSV_MIN=0.0,
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 4
# -----------------------------------------------------
D_ref = [
    [0.000208, 0.000208, 0.000208, 0.000208, 0.0, 0.0, 3.2448000e01, 7.2106666e-02],  # 1
    [
        0.00115,
        0.00115,
        0.000208,
        0.000208,
        4.0113556e-03,
        1.4094096e-03,
        1.4820596e02,
        0.5805447164853131,
    ],  # 2
    [0.000208, 0.000208, 0.00115, 0.00115, 0.0, 0.0, 1.0592400e02, 2.3538666e-01],  # 3
    [0.000208, 0.000208, 0.000208, 0.00158351182, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 4
    [0.000208, 0.00158351182, 0.000208, 0.000208, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 5
    [0.000208, 0.00146007491, 0.000208, 0.000208, 0.0, 0.0, 8.1278921e01, 1.8061982e-01],  # 6
    [0.000208, 0.00170854611, 0.000208, 0.000208, 0.0, 0.0, 9.0969298e01, 2.0215399e-01],  # 7
    [0.00038333333, 0.00421666666, 0.000208, 0.000208, 0.0, 0.0, 1.9562400e02, 4.3472000e-01],  # 8
    [0.000208, 0.00158351182, 0.00115593019, 0.000208, 0.0, 0.0, 1.2306223e02, 2.7347169e-01],  # 9
    [0.000208, 0.000208, 0.00252854447, 0.000208, 0.0, 0.0, 1.2294923e02, 2.7322052e-01],  # 10
    [
        0.000208,
        0.000208,
        0.005048678295026455,
        0.00068338051,
        0.0,
        0.0,
        2.3977429e02,
        5.3283176e-01,
    ],  # 11
    [
        0.000208,
        0.000208,
        0.007348678295026455,
        2.9833805e-03,
        0.0,
        0.0,
        4.1917429e02,
        9.3149843e-01,
    ],  # 12
    [
        0.000208,
        0.000208,
        0.000208,
        0.000208,
        1.3021073e-03,
        6.3151712e-03,
        9.1862772e01,
        0.3194655421907574,
    ],  # 13
    [8.1583805e-03, 2.1736782e-03, 0.000208, 0.000208, 0.0, 0.0, 4.1917429e02, 9.3149843e-01],  # 14
]

D_calc = [
    [0.000208, 0.000208, 0.000208, 0.000208, 0.0, 0.0, 3.2448000e01, 7.2106666e-02],  # 1
    [
        0.00115,
        0.00115,
        0.000208,
        0.000208,
        4.0113556e-03,
        1.4094096e-03,
        1.4820596e02,
        0.5805447164853131,
    ],  # 2
    [0.000208, 0.000208, 0.00115, 0.00115, 0.0, 0.0, 1.0592400e02, 2.3538666e-01],  # 3
    [0.000208, 0.000208, 0.000208, 0.00158351182, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 4
    [0.000208, 0.00158351182, 0.000208, 0.000208, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 5
    [0.000208, 0.00146007491, 0.000208, 0.000208, 0.0, 0.0, 8.1278921e01, 1.8061982e-01],  # 6
    [0.000208, 0.00170854611, 0.000208, 0.000208, 0.0, 0.0, 9.0969298e01, 2.0215399e-01],  # 7
    [0.00038333333, 0.00421666666, 0.000208, 0.000208, 0.0, 0.0, 1.9562400e02, 4.3472000e-01],  # 8
    [0.000208, 0.00158351182, 0.00115593019, 0.000208, 0.0, 0.0, 1.2306223e02, 2.7347169e-01],  # 9
    [0.000208, 0.000208, 0.00252854447, 0.000208, 0.0, 0.0, 1.2294923e02, 2.7322052e-01],  # 10
    [
        0.000208,
        0.000208,
        0.005048678295026455,
        0.00068338051,
        0.0,
        0.0,
        2.3977429e02,
        5.3283176e-01,
    ],  # 11
    [
        0.000208,
        0.000208,
        0.007348678295026455,
        2.9833805e-03,
        0.0,
        0.0,
        4.1917429e02,
        9.3149843e-01,
    ],  # 12
    [
        0.000208,
        0.000208,
        0.000208,
        0.000208,
        1.3021073e-03,
        6.3151712e-03,
        9.1862772e01,
        0.3194655421907574,
    ],  # 13
    [8.1583805e-03, 2.1736782e-03, 0.000208, 0.000208, 0.0, 0.0, 4.1917429e02, 9.3149843e-01],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU4,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU4,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 5 - calcul du ferraillage avec changement TYPE_DIAG :
# ----------------------------------------------------------

RESUELU5 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            FERR_MIN="CODE",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B1",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 5
# -----------------------------------------------------
D_ref = [
    [0.000208, 0.000208, 0.000208, 0.000208, 0.0, 0.0, 3.2448000e01, 7.2106666e-02],  # 1
    [
        0.0010731071232788366,
        0.0010731071232788366,
        0.000208,
        0.000208,
        4.0113556e-03,
        1.4094096e-03,
        142.20832521698676,
        0.5672166178536449,
    ],  # 2
    [
        0.000208,
        0.000208,
        0.0010731071232788366,
        0.0010731071232788366,
        0.0,
        0.0,
        99.92635561574924,
        0.22205856803499832,
    ],  # 3
    [
        0.000208,
        0.000208,
        0.000208,
        0.0015585059698770087,
        0.0,
        0.0,
        85.11773282520333,
        0.18915051738934074,
    ],  # 4
    [
        0.000208,
        0.0015585059698770087,
        0.000208,
        0.000208,
        0.0,
        0.0,
        85.11773282520333,
        0.18915051738934074,
    ],  # 5
    [
        0.000208,
        0.0014392818081603884,
        0.000208,
        0.000208,
        0.0,
        0.0,
        80.46799051825514,
        0.17881775670723363,
    ],  # 6
    [
        0.000208,
        0.00167859349,
        0.000208,
        0.000208,
        0.0,
        0.0,
        89.80114638719077,
        0.19955810308264613,
    ],  # 7
    [
        0.00035770237,
        0.00393472611,
        0.000208,
        0.000208,
        0.0,
        0.0,
        183.6287112314984,
        0.40806380273666326,
    ],  # 8
    [
        0.000208,
        0.00155850596,
        0.001127276,
        0.000208,
        0.0,
        0.0,
        120.9694968842802,
        0.2688211041872895,
    ],  # 9
    [
        0.000208,
        0.000208,
        0.002512032507840575,
        0.000208,
        0.0,
        0.0,
        122.3052678057824,
        0.2717894840128498,
    ],  # 10
    [
        0.000208,
        0.000208,
        0.00504865423628703,
        0.0006833391207600863,
        0.0,
        0.0,
        239.77174092483753,
        0.5328260909440834,
    ],  # 11
    [
        0.000208,
        0.000208,
        0.007348643275972779,
        0.002983199795857845,
        0.0,
        0.0,
        419.1658798013943,
        0.9314797328919874,
    ],  # 12
    [
        0.000208,
        0.000208,
        0.000208,
        0.000208,
        1.3021073e-03,
        6.3151712e-03,
        9.1862772e01,
        0.3194655421907574,
    ],  # 13
    [
        0.0081578863148278,
        0.0021736679366798468,
        0.000208,
        0.000208,
        0.0,
        0.0,
        419.15461580879827,
        0.9314547017973295,
    ],  # 14
]

D_calc = [
    [0.000208, 0.000208, 0.000208, 0.000208, 0.0, 0.0, 3.2448000e01, 7.2106666e-02],  # 1
    [
        0.0010731071232788366,
        0.0010731071232788366,
        0.000208,
        0.000208,
        4.0113556e-03,
        1.4094096e-03,
        142.20832521698676,
        0.5672166178536449,
    ],  # 2
    [
        0.000208,
        0.000208,
        0.0010731071232788366,
        0.0010731071232788366,
        0.0,
        0.0,
        99.92635561574924,
        0.22205856803499832,
    ],  # 3
    [
        0.000208,
        0.000208,
        0.000208,
        0.0015585059698770087,
        0.0,
        0.0,
        85.11773282520333,
        0.18915051738934074,
    ],  # 4
    [
        0.000208,
        0.0015585059698770087,
        0.000208,
        0.000208,
        0.0,
        0.0,
        85.11773282520333,
        0.18915051738934074,
    ],  # 5
    [
        0.000208,
        0.0014392818081603884,
        0.000208,
        0.000208,
        0.0,
        0.0,
        80.46799051825514,
        0.17881775670723363,
    ],  # 6
    [
        0.000208,
        0.00167859349,
        0.000208,
        0.000208,
        0.0,
        0.0,
        89.80114638719077,
        0.19955810308264613,
    ],  # 7
    [
        0.00035770237,
        0.00393472611,
        0.000208,
        0.000208,
        0.0,
        0.0,
        183.6287112314984,
        0.40806380273666326,
    ],  # 8
    [
        0.000208,
        0.00155850596,
        0.001127276,
        0.000208,
        0.0,
        0.0,
        120.9694968842802,
        0.2688211041872895,
    ],  # 9
    [
        0.000208,
        0.000208,
        0.002512032507840575,
        0.000208,
        0.0,
        0.0,
        122.3052678057824,
        0.2717894840128498,
    ],  # 10
    [
        0.000208,
        0.000208,
        0.00504865423628703,
        0.0006833391207600863,
        0.0,
        0.0,
        239.77174092483753,
        0.5328260909440834,
    ],  # 11
    [
        0.000208,
        0.000208,
        0.007348643275972779,
        0.002983199795857845,
        0.0,
        0.0,
        419.1658798013943,
        0.9314797328919874,
    ],  # 12
    [
        0.000208,
        0.000208,
        0.000208,
        0.000208,
        1.3021073e-03,
        6.3151712e-03,
        9.1862772e01,
        0.3194655421907574,
    ],  # 13
    [
        0.0081578863148278,
        0.0021736679366798468,
        0.000208,
        0.000208,
        0.0,
        0.0,
        419.15461580879827,
        0.9314547017973295,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU5,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU5,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 6 - calcul du ferraillage avec UTIL_COMPR = 'OUI' :
# -------------------------------------------------------

RESUELU6 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            FERR_MIN="CODE",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            UTIL_COMPR="OUI",
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 6
# -----------------------------------------------------
D_ref = [
    [0.000208, 0.000208, 0.000208, 0.000208, 0.0, 0.0, 3.2448000e01, 7.2106666e-02],  # 1
    [
        0.00115,
        0.00115,
        0.000208,
        0.000208,
        4.0113556e-03,
        1.4094096e-03,
        1.4820596e02,
        0.5805447164853131,
    ],  # 2
    [0.000208, 0.000208, 0.00115, 0.00115, 0.0, 0.0, 1.0592400e02, 2.3538666e-01],  # 3
    [0.000208, 0.000208, 0.000208, 0.00158351182, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 4
    [0.000208, 0.00158351182, 0.000208, 0.000208, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 5
    [0.000208, 0.00146007491, 0.000208, 0.000208, 0.0, 0.0, 8.1278921e01, 1.8061982e-01],  # 6
    [0.000208, 0.00170854611, 0.000208, 0.000208, 0.0, 0.0, 9.0969298e01, 2.0215399e-01],  # 7
    [0.00038333333, 0.00421666666, 0.000208, 0.000208, 0.0, 0.0, 1.9562400e02, 4.3472000e-01],  # 8
    [0.000208, 0.00158351182, 0.00115593019, 0.000208, 0.0, 0.0, 1.2306223e02, 2.7347169e-01],  # 9
    [0.000208, 0.000208, 0.00252854447, 0.000208, 0.0, 0.0, 1.2294923e02, 2.7322052e-01],  # 10
    [
        0.000208,
        0.000208,
        0.005048678295026455,
        0.00068338051,
        0.0,
        0.0,
        2.3977429e02,
        5.3283176e-01,
    ],  # 11
    [
        0.000208,
        0.000208,
        0.007348678295026455,
        2.9833805e-03,
        0.0,
        0.0,
        4.1917429e02,
        9.3149843e-01,
    ],  # 12
    [
        0.000208,
        0.000208,
        0.000208,
        0.000208,
        0.0017208263673295359,
        0.005506860743993114,
        88.82395946831667,
        0.3314511600827858,
    ],  # 13
    [8.1583805e-03, 2.1736782e-03, 0.000208, 0.000208, 0.0, 0.0, 4.1917429e02, 9.3149843e-01],  # 14
]

D_calc = [
    [0.000208, 0.000208, 0.000208, 0.000208, 0.0, 0.0, 3.2448000e01, 7.2106666e-02],  # 1
    [
        0.00115,
        0.00115,
        0.000208,
        0.000208,
        4.0113556e-03,
        1.4094096e-03,
        1.4820596e02,
        0.5805447164853131,
    ],  # 2
    [0.000208, 0.000208, 0.00115, 0.00115, 0.0, 0.0, 1.0592400e02, 2.3538666e-01],  # 3
    [0.000208, 0.000208, 0.000208, 0.00158351182, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 4
    [0.000208, 0.00158351182, 0.000208, 0.000208, 0.0, 0.0, 8.6092961e01, 1.9131769e-01],  # 5
    [0.000208, 0.00146007491, 0.000208, 0.000208, 0.0, 0.0, 8.1278921e01, 1.8061982e-01],  # 6
    [0.000208, 0.00170854611, 0.000208, 0.000208, 0.0, 0.0, 9.0969298e01, 2.0215399e-01],  # 7
    [0.00038333333, 0.00421666666, 0.000208, 0.000208, 0.0, 0.0, 1.9562400e02, 4.3472000e-01],  # 8
    [0.000208, 0.00158351182, 0.00115593019, 0.000208, 0.0, 0.0, 1.2306223e02, 2.7347169e-01],  # 9
    [0.000208, 0.000208, 0.00252854447, 0.000208, 0.0, 0.0, 1.2294923e02, 2.7322052e-01],  # 10
    [
        0.000208,
        0.000208,
        0.005048678295026455,
        0.00068338051,
        0.0,
        0.0,
        2.3977429e02,
        5.3283176e-01,
    ],  # 11
    [
        0.000208,
        0.000208,
        0.007348678295026455,
        2.9833805e-03,
        0.0,
        0.0,
        4.1917429e02,
        9.3149843e-01,
    ],  # 12
    [
        0.000208,
        0.000208,
        0.000208,
        0.000208,
        0.0017208263673295359,
        0.005506860743993114,
        88.82395946831667,
        0.3314511600827858,
    ],  # 13
    [8.1583805e-03, 2.1736782e-03, 0.000208, 0.000208, 0.0, 0.0, 4.1917429e02, 9.3149843e-01],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU6,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU6,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 7 - calcul du ferraillage avec changement EPURE_CISA = 'OUI' :
# -------------------------------------------------------------------

RESUELU7 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            FERR_MIN="CODE",
            EPURE_CISA="OUI",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 7
# -----------------------------------------------------
D_ref = [
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        3.24480000000000e01,
        7.21066666666667e-02,
    ],  # 1
    [
        4.76073513960142e-03,
        1.15000000000000e-03,
        1.26864966545178e-03,
        2.08000000000000e-04,
        4.01135566371042e-03,
        1.40940966978157e-03,
        3.30389976998312e02,
        0.9853980662565908,
    ],  # 2
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00115,
        0.00115,
        0.00000000000000e00,
        0.00000000000000e00,
        105.92399999999999,
        0.23538666666666663,
    ],  # 3
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        2.08000000000000e-04,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        8.60929610596718e01,
        1.91317691243715e-01,
    ],  # 4
    [
        2.08000000000000e-04,
        1.58351182204287e-03,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        8.60929610596718e01,
        1.91317691243715e-01,
    ],  # 5
    [
        2.08000000000000e-04,
        1.46007491582497e-03,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        8.12789217171737e01,
        1.80619826038164e-01,
    ],  # 6
    [
        2.08000000000000e-04,
        1.70854611494712e-03,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        9.09692984829377e01,
        2.02153996628750e-01,
    ],  # 7
    [
        3.83333333333332e-04,
        4.21666666666667e-03,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        1.95624000000000e02,
        4.34720000000000e-01,
    ],  # 8
    [
        2.08000000000000e-04,
        1.58351182204287e-03,
        1.15593019950243e-03,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        1.23062238840267e02,
        2.73471641867259e-01,
    ],  # 9
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        2.52854447869089e-03,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        1.22949234668945e02,
        2.73220521486543e-01,
    ],  # 10
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        5.04867829502645e-03,
        6.83380517248678e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        2.39774293678730e02,
        5.32831763730511e-01,
    ],  # 11
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        7.34867829502645e-03,
        2.98338051724868e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        4.19174293678730e02,
        9.31498430397178e-01,
    ],  # 12
    [
        1.54896467792191e-03,
        2.08000000000000e-04,
        4.95688172881571e-03,
        2.08000000000000e-04,
        1.30210730266157e-03,
        6.31517122943701e-03,
        3.29366782413136e02,
        0.847252230774684,
    ],  # 13
    [
        8.15838051724868e-03,
        2.17367829502645e-03,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        4.19174293678730e02,
        9.31498430397178e-01,
    ],  # 14
]

D_calc = [
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        3.24480000000000e01,
        7.21066666666667e-02,
    ],  # 1
    [
        4.76073513960142e-03,
        1.15000000000000e-03,
        1.26864966545178e-03,
        2.08000000000000e-04,
        4.01135566371042e-03,
        1.40940966978157e-03,
        3.30389976998312e02,
        0.9853980662565908,
    ],  # 2
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00115,
        0.00115,
        0.00000000000000e00,
        0.00000000000000e00,
        105.92399999999999,
        0.23538666666666663,
    ],  # 3
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        2.08000000000000e-04,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        8.60929610596718e01,
        1.91317691243715e-01,
    ],  # 4
    [
        2.08000000000000e-04,
        1.58351182204287e-03,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        8.60929610596718e01,
        1.91317691243715e-01,
    ],  # 5
    [
        2.08000000000000e-04,
        1.46007491582497e-03,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        8.12789217171737e01,
        1.80619826038164e-01,
    ],  # 6
    [
        2.08000000000000e-04,
        1.70854611494712e-03,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        9.09692984829377e01,
        2.02153996628750e-01,
    ],  # 7
    [
        3.83333333333332e-04,
        4.21666666666667e-03,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        1.95624000000000e02,
        4.34720000000000e-01,
    ],  # 8
    [
        2.08000000000000e-04,
        1.58351182204287e-03,
        1.15593019950243e-03,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        1.23062238840267e02,
        2.73471641867259e-01,
    ],  # 9
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        2.52854447869089e-03,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        1.22949234668945e02,
        2.73220521486543e-01,
    ],  # 10
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        5.04867829502645e-03,
        6.83380517248678e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        2.39774293678730e02,
        5.32831763730511e-01,
    ],  # 11
    [
        2.08000000000000e-04,
        2.08000000000000e-04,
        7.34867829502645e-03,
        2.98338051724868e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        4.19174293678730e02,
        9.31498430397178e-01,
    ],  # 12
    [
        1.54896467792191e-03,
        2.08000000000000e-04,
        4.95688172881571e-03,
        2.08000000000000e-04,
        1.30210730266157e-03,
        6.31517122943701e-03,
        3.29366782413136e02,
        0.847252230774684,
    ],  # 13
    [
        8.15838051724868e-03,
        2.17367829502645e-03,
        2.08000000000000e-04,
        2.08000000000000e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        4.19174293678730e02,
        9.31498430397178e-01,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU7,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU7,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 8 - calcul du ferraillage avec FERR_SYME = 'OUI' :
# -------------------------------------------------------

RESUELU8 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            FERR_SYME="OUI",
            SEUIL_SYME=1.0e-4,
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 8
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        4.01135566371042e-03,
        1.40940966978157e-03,
        1.31981969601238e02,
        0.5444913831519799,
    ],  # 2
    [
        2.56033126806839e-34,
        2.56033126806839e-34,
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        8.97000000000000e01,
        1.99333333333333e-01,
    ],  # 3
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 4
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 5
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 6
    [
        1.70411160946313e-03,
        1.69956726687831e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.32743476177316e02,
        2.94985502616258e-01,
    ],  # 7
    [
        3.87857926406379e-03,
        3.91475553354497e-03,
        0.00000000000000e00,
        5.40550026675057e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        3.04150871617145e02,
        6.75890825815878e-01,
    ],  # 8
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 9
    [
        0.00000000000000e00,
        -5.67170845062065e-34,
        2.52756247703704e-03,
        2.54750812895182e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.97927753633565e02,
        4.39839452519034e-01,
    ],  # 10
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 11
    [
        0.00000000000000e00,
        -1.53400600363201e-33,
        6.96817544634921e-03,
        6.89015099795158e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        5.40474731327731e02,
        1.20105495850607e00,
    ],  # 12
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.30210730266157e-03,
        6.31517122943701e-03,
        5.94147725503689e01,
        0.24735887552409078,
    ],  # 13
    [
        7.45958531724868e-03,
        7.37834459005967e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.78679266385026e02,
        1.28595392530006e00,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        4.01135566371042e-03,
        1.40940966978157e-03,
        1.31981969601238e02,
        0.5444913831519799,
    ],  # 2
    [
        2.56033126806839e-34,
        2.56033126806839e-34,
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        8.97000000000000e01,
        1.99333333333333e-01,
    ],  # 3
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 4
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 5
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 6
    [
        1.70411160946313e-03,
        1.69956726687831e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.32743476177316e02,
        2.94985502616258e-01,
    ],  # 7
    [
        3.87857926406379e-03,
        3.91475553354497e-03,
        0.00000000000000e00,
        5.40550026675057e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        3.04150871617145e02,
        6.75890825815878e-01,
    ],  # 8
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 9
    [
        0.00000000000000e00,
        -5.67170845062065e-34,
        2.52756247703704e-03,
        2.54750812895182e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.97927753633565e02,
        4.39839452519034e-01,
    ],  # 10
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 11
    [
        0.00000000000000e00,
        -1.53400600363201e-33,
        6.96817544634921e-03,
        6.89015099795158e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        5.40474731327731e02,
        1.20105495850607e00,
    ],  # 12
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.30210730266157e-03,
        6.31517122943701e-03,
        5.94147725503689e01,
        0.24735887552409078,
    ],  # 13
    [
        7.45958531724868e-03,
        7.37834459005967e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.78679266385026e02,
        1.28595392530006e00,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if abs(D_ref[j][i]) < 1.0e-8:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU8,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU8,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 9 - calcul du ferraillage avec variation de SEUIL_SYME :
# -------------------------------------------------------------

RESUELU9 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            FERR_SYME="OUI",
            SEUIL_SYME=10.0e-4,
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 9
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        4.01135566371042e-03,
        1.40940966978157e-03,
        1.31981969601238e02,
        0.5444913831519799,
    ],  # 2
    [
        2.56033126806839e-34,
        2.56033126806839e-34,
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        8.97000000000000e01,
        1.99333333333333e-01,
    ],  # 3
    [
        0.00000000000000e00,
        0.00000000000000e00,
        6.83069618997778e-04,
        1.58407375746032e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        8.84185916818657e01,
        1.96485759293035e-01,
    ],  # 4
    [
        6.83069618997778e-04,
        1.58407375746032e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        8.84185916818657e01,
        1.96485759293035e-01,
    ],  # 5
    [
        6.73281105010919e-04,
        1.46497914412698e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        8.33921497163782e01,
        1.85315888258618e-01,
    ],  # 6
    [
        7.70611531716292e-04,
        1.70323772613757e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.64801210563005e01,
        2.14400269014001e-01,
    ],  # 7
    [
        2.94866809594078e-03,
        3.92450971428571e-03,
        0.00000000000000e00,
        9.73856507936506e-05,
        0.00000000000000e00,
        0.00000000000000e00,
        2.71851974979786e02,
        6.04115499955079e-01,
    ],  # 8
    [
        6.83069618997778e-04,
        1.58407375746032e-03,
        1.14534304761905e-03,
        1.61019575177010e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        1.39366733970912e02,
        3.09703853268693e-01,
    ],  # 9
    [
        0.00000000000000e00,
        0.00000000000000e00,
        2.52686031746032e-03,
        1.56708778749595e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.59663976093295e02,
        3.54808835762877e-01,
    ],  # 10
    [
        0.00000000000000e00,
        0.00000000000000e00,
        4.65601676529100e-03,
        3.66877833643920e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        3.24667008967478e02,
        7.21482242149951e-01,
    ],  # 11
    [
        0.00000000000000e00,
        0.00000000000000e00,
        6.98841447280423e-03,
        6.00918054624016e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        5.06906205742731e02,
        1.12645823498385e00,
    ],  # 12
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.30210730266157e-03,
        6.31517122943701e-03,
        5.94147725503689e01,
        0.24735887552409078,
    ],  # 13
    [
        7.50498308232804e-03,
        6.54064723884273e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.47779582525660e02,
        1.21728796116813e00,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        4.01135566371042e-03,
        1.40940966978157e-03,
        1.31981969601238e02,
        0.5444913831519799,
    ],  # 2
    [
        2.56033126806839e-34,
        2.56033126806839e-34,
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        8.97000000000000e01,
        1.99333333333333e-01,
    ],  # 3
    [
        0.00000000000000e00,
        0.00000000000000e00,
        6.83069618997778e-04,
        1.58407375746032e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        8.84185916818657e01,
        1.96485759293035e-01,
    ],  # 4
    [
        6.83069618997778e-04,
        1.58407375746032e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        8.84185916818657e01,
        1.96485759293035e-01,
    ],  # 5
    [
        6.73281105010919e-04,
        1.46497914412698e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        8.33921497163782e01,
        1.85315888258618e-01,
    ],  # 6
    [
        7.70611531716292e-04,
        1.70323772613757e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.64801210563005e01,
        2.14400269014001e-01,
    ],  # 7
    [
        2.94866809594078e-03,
        3.92450971428571e-03,
        0.00000000000000e00,
        9.73856507936506e-05,
        0.00000000000000e00,
        0.00000000000000e00,
        2.71851974979786e02,
        6.04115499955079e-01,
    ],  # 8
    [
        6.83069618997778e-04,
        1.58407375746032e-03,
        1.14534304761905e-03,
        1.61019575177010e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        1.39366733970912e02,
        3.09703853268693e-01,
    ],  # 9
    [
        0.00000000000000e00,
        0.00000000000000e00,
        2.52686031746032e-03,
        1.56708778749595e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.59663976093295e02,
        3.54808835762877e-01,
    ],  # 10
    [
        0.00000000000000e00,
        0.00000000000000e00,
        4.65601676529100e-03,
        3.66877833643920e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        3.24667008967478e02,
        7.21482242149951e-01,
    ],  # 11
    [
        0.00000000000000e00,
        0.00000000000000e00,
        6.98841447280423e-03,
        6.00918054624016e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        5.06906205742731e02,
        1.12645823498385e00,
    ],  # 12
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.30210730266157e-03,
        6.31517122943701e-03,
        5.94147725503689e01,
        0.24735887552409078,
    ],  # 13
    [
        7.50498308232804e-03,
        6.54064723884273e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.47779582525660e02,
        1.21728796116813e00,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if abs(D_ref[j][i]) < 1.0e-8:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU9,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU9,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 10 - calcul du ferraillage avec BAEL :
# -------------------------------------------

RESUELU10 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="BAEL91",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            C_SUP=0.04,
            C_INF=0.04,
            FE=500.0e6,
            FCJ=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 10
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.0014375,
        0.0014375,
        22.425,
        0.1432473244171866,
    ],  # 1
    [
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.008624999999999999,
        0.008624999999999999,
        224.25,
        1.058817279836453,
    ],  # 2
    [
        2.56033126806839e-34,
        2.56033126806839e-34,
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.0011853928673650773,
        0.0011853928673650773,
        108.1921287308952,
        0.31745810316516937,
    ],  # 3
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 4
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.46007491582497e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.69429217171737e01,
        1.26539826038164e-01,
    ],  # 6
    [
        0.00000000000000e00,
        1.70854611494712e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.66332984829377e01,
        1.48073996628750e-01,
    ],  # 7
    [
        3.83333333333332e-04,
        4.21666666666667e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.79400000000000e02,
        3.98666666666667e-01,
    ],  # 8
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        1.15593019950243e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.06838238840267e02,
        2.37418308533926e-01,
    ],  # 9
    [
        0.00000000000000e00,
        0.00000000000000e00,
        2.52854447869089e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.86132346689446e01,
        2.19140521486544e-01,
    ],  # 10
    [
        0.00000000000000e00,
        0.00000000000000e00,
        1.30261869478650e-02,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.08021290966736e02,
        1.12893620214830e00,
    ],  # 11
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 12
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.0115,
        0.0115,
        179.4,
        1.1459785953374928,
    ],  # 13
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0014375,
        0.0014375,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.0014375,
        0.0014375,
        22.425,
        0.1432473244171866,
    ],  # 1
    [
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.008624999999999999,
        0.008624999999999999,
        224.25,
        1.058817279836453,
    ],  # 2
    [
        2.56033126806839e-34,
        2.56033126806839e-34,
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.0011853928673650773,
        0.0011853928673650773,
        108.1921287308952,
        0.31745810316516937,
    ],  # 3
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 4
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.46007491582497e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.69429217171737e01,
        1.26539826038164e-01,
    ],  # 6
    [
        0.00000000000000e00,
        1.70854611494712e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.66332984829377e01,
        1.48073996628750e-01,
    ],  # 7
    [
        3.83333333333332e-04,
        4.21666666666667e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.79400000000000e02,
        3.98666666666667e-01,
    ],  # 8
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        1.15593019950243e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.06838238840267e02,
        2.37418308533926e-01,
    ],  # 9
    [
        0.00000000000000e00,
        0.00000000000000e00,
        2.52854447869089e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.86132346689446e01,
        2.19140521486544e-01,
    ],  # 10
    [
        0.00000000000000e00,
        0.00000000000000e00,
        1.30261869478650e-02,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.08021290966736e02,
        1.12893620214830e00,
    ],  # 11
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 12
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.0115,
        0.0115,
        179.4,
        1.1459785953374928,
    ],  # 13
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0014375,
        0.0014375,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if abs(D_ref[j][i]) < 1.0e-8:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU10,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU10,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 11 - calcul du ferraillage avec changement CLASSE_ACIER='A' :
# ------------------------------------------------------------------

RESUELU11 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            CLASSE_ACIER="A",
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 11
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.004011355663710424,
        0.0014094096697815659,
        131.98196960123752,
        0.5444913831519799,
    ],  # 2
    [
        2.56033126806839e-34,
        2.56033126806839e-34,
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        89.7,
        0.19933333333333333,
    ],  # 3
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 4
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.46007491582497e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.69429217171737e01,
        1.26539826038164e-01,
    ],  # 6
    [
        0.00000000000000e00,
        1.70854611494712e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.66332984829377e01,
        1.48073996628750e-01,
    ],  # 7
    [
        3.83333333333332e-04,
        4.21666666666667e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.79400000000000e02,
        3.98666666666667e-01,
    ],  # 8
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        1.15593019950243e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.06838238840267e02,
        2.37418308533926e-01,
    ],  # 9
    [
        0.00000000000000e00,
        0.00000000000000e00,
        2.52854447869089e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.86132346689446e01,
        2.19140521486544e-01,
    ],  # 10
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.005057334825139187,
        0.0006833805172486775,
        0.00000000000000e00,
        0.00000000000000e00,
        223.88789835312673,
        0.49752866300694826,
    ],  # 11
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.007380716315277538,
        0.002983380517248678,
        0.00000000000000e00,
        0.00000000000000e00,
        404.19977646852243,
        0.8982217254856054,
    ],  # 12
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.0013021073026615673,
        0.006315171229437009,
        59.4147725503689,
        0.24735887552409078,
    ],  # 13
    [
        0.008158380517248678,
        0.0021736782950264543,
        0.00000000000000e00,
        6.53449616931214e-05,
        0.00000000000000e00,
        0.00000000000000e00,
        405.4987471847619,
        0.9011083270772486,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.004011355663710424,
        0.0014094096697815659,
        131.98196960123752,
        0.5444913831519799,
    ],  # 2
    [
        2.56033126806839e-34,
        2.56033126806839e-34,
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        89.7,
        0.19933333333333333,
    ],  # 3
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 4
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.46007491582497e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.69429217171737e01,
        1.26539826038164e-01,
    ],  # 6
    [
        0.00000000000000e00,
        1.70854611494712e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.66332984829377e01,
        1.48073996628750e-01,
    ],  # 7
    [
        3.83333333333332e-04,
        4.21666666666667e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.79400000000000e02,
        3.98666666666667e-01,
    ],  # 8
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        1.15593019950243e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.06838238840267e02,
        2.37418308533926e-01,
    ],  # 9
    [
        0.00000000000000e00,
        0.00000000000000e00,
        2.52854447869089e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.86132346689446e01,
        2.19140521486544e-01,
    ],  # 10
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.005057334825139187,
        0.0006833805172486775,
        0.00000000000000e00,
        0.00000000000000e00,
        223.88789835312673,
        0.49752866300694826,
    ],  # 11
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.007380716315277538,
        0.002983380517248678,
        0.00000000000000e00,
        0.00000000000000e00,
        404.19977646852243,
        0.8982217254856054,
    ],  # 12
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.0013021073026615673,
        0.006315171229437009,
        59.4147725503689,
        0.24735887552409078,
    ],  # 13
    [
        0.008158380517248678,
        0.0021736782950264543,
        0.00000000000000e00,
        6.53449616931214e-05,
        0.00000000000000e00,
        0.00000000000000e00,
        405.4987471847619,
        0.9011083270772486,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if abs(D_ref[j][i]) < 1.0e-8:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU11,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU11,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 12 - calcul du ferraillage avec changement CLASSE_ACIER='C' :
# ------------------------------------------------------------------

RESUELU12 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    UNITE_CONTRAINTE="Pa",
    PAS_EPAI=0.001,
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            CLASSE_ACIER="C",
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 12
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.004011355663710424,
        0.0014094096697815659,
        131.98196960123752,
        0.5444913831519799,
    ],  # 2
    [
        2.56033126806839e-34,
        2.56033126806839e-34,
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        89.7,
        0.19933333333333333,
    ],  # 3
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 4
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.46007491582497e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.69429217171737e01,
        1.26539826038164e-01,
    ],  # 6
    [
        0.00000000000000e00,
        1.70854611494712e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.66332984829377e01,
        1.48073996628750e-01,
    ],  # 7
    [
        3.83333333333332e-04,
        4.21666666666667e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.79400000000000e02,
        3.98666666666667e-01,
    ],  # 8
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        1.15593019950243e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.06838238840267e02,
        2.37418308533926e-01,
    ],  # 9
    [
        0.00000000000000e00,
        0.00000000000000e00,
        2.52854447869089e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.86132346689446e01,
        2.19140521486544e-01,
    ],  # 10
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.005057334825139187,
        0.0006833805172486775,
        0.00000000000000e00,
        0.00000000000000e00,
        223.88789835312673,
        0.49752866300694826,
    ],  # 11
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.007380716315277538,
        0.002983380517248678,
        0.00000000000000e00,
        0.00000000000000e00,
        404.19977646852243,
        0.8982217254856054,
    ],  # 12
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.0013021073026615673,
        0.006315171229437009,
        59.4147725503689,
        0.24735887552409078,
    ],  # 13
    [
        0.008158380517248678,
        0.0021736782950264543,
        0.00000000000000e00,
        6.53449616931214e-05,
        0.00000000000000e00,
        0.00000000000000e00,
        405.4987471847619,
        0.9011083270772486,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.004011355663710424,
        0.0014094096697815659,
        131.98196960123752,
        0.5444913831519799,
    ],  # 2
    [
        2.56033126806839e-34,
        2.56033126806839e-34,
        1.15000000000000e-03,
        1.15000000000000e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        89.7,
        0.19933333333333333,
    ],  # 3
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 4
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.17569610596718e01,
        1.37237691243715e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.46007491582497e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        5.69429217171737e01,
        1.26539826038164e-01,
    ],  # 6
    [
        0.00000000000000e00,
        1.70854611494712e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.66332984829377e01,
        1.48073996628750e-01,
    ],  # 7
    [
        3.83333333333332e-04,
        4.21666666666667e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.79400000000000e02,
        3.98666666666667e-01,
    ],  # 8
    [
        0.00000000000000e00,
        1.58351182204287e-03,
        1.15593019950243e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.06838238840267e02,
        2.37418308533926e-01,
    ],  # 9
    [
        0.00000000000000e00,
        0.00000000000000e00,
        2.52854447869089e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.86132346689446e01,
        2.19140521486544e-01,
    ],  # 10
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.005057334825139187,
        0.0006833805172486775,
        0.00000000000000e00,
        0.00000000000000e00,
        223.88789835312673,
        0.49752866300694826,
    ],  # 11
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.007380716315277538,
        0.002983380517248678,
        0.00000000000000e00,
        0.00000000000000e00,
        404.19977646852243,
        0.8982217254856054,
    ],  # 12
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.0013021073026615673,
        0.006315171229437009,
        59.4147725503689,
        0.24735887552409078,
    ],  # 13
    [
        0.008158380517248678,
        0.0021736782950264543,
        0.00000000000000e00,
        6.53449616931214e-05,
        0.00000000000000e00,
        0.00000000000000e00,
        405.4987471847619,
        0.9011083270772486,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if abs(D_ref[j][i]) < 1.0e-8:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU12,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU12,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 13 - calcul du ferraillage avec METHODE_2D="SANDWICH":
# -----------------------------------------------------------

RESUELU13 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    METHODE_2D="SANDWICH",
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 13
# -----------------------------------------------------
D_ref = [
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # 1
    [
        0.00115,
        0.00115,
        0.0,
        0.0,
        0.00483415486436113,
        0.0,
        127.40640794201681,
        0.5839172092091743,
    ],  # 2
    [0.0, 0.0, 0.00115, 0.00115, 0.0, 0.0, 8.9700000e01, 1.9933333e-01],  # 3
    [0.0, 0.0, 0.0, 0.0016193619361936193, 0.0, 0.0, 63.15511551155115, 0.14034470113678035],  # 4
    [0.0, 0.0016193619361936193, 0.0, 0.0, 0.0, 0.0, 63.15511551155115, 0.14034470113678035],  # 5
    [0.0, 0.0014960176991150442, 0.0, 0.0, 0.0, 0.0, 58.34469026548672, 0.12965486725663714],  # 6
    [0.0, 0.0017356365614798696, 0.0, 0.0, 0.0, 0.0, 67.68982589771491, 0.15042183532825534],  # 7
    [0.00038333333, 0.00421666666, 0.0, 0.0, 0.0, 0.0, 1.7940000e02, 3.9866666e-01],  # 8
    [
        2.6226133333332445e-05,
        0.0017985141333333335,
        0.0012570404666666667,
        1.679153333333405e-05,
        0.0,
        0.0,
        120.84431839999998,
        0.2685429297777777,
    ],  # 9
    [0.0, 0.0, 0.0026317044100119184, 0.0, 0.0, 0.0, 102.63647199046481, 0.22808104886769956],  # 10
    [
        2.8527381542699886e-05,
        0.00046051344490358133,
        0.005268607148760331,
        0.00037819888429751873,
        0.0,
        0.0,
        239.2980275206611,
        0.531773394490358,
    ],  # 11
    [
        2.8527381542699886e-05,
        0.00046051344490358133,
        0.007568607148760331,
        0.0026781988842975186,
        0.0,
        0.0,
        418.6980275206611,
        0.9304400611570247,
    ],  # 12
    [
        0.0,
        0.0,
        0.0,
        0.0,
        1.4677117099584098e-20,
        0.00455577147042278,
        35.535017469297685,
        0.10933851529014671,
    ],  # 13
    [
        0.00785319888429752,
        0.002393607148760331,
        0.00046051344490358144,
        2.8527381542699846e-05,
        0.0,
        0.0,
        418.6980275206612,
        0.9304400611570248,
    ],  # 14
]

D_calc = [
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # 1
    [
        0.00115,
        0.00115,
        0.0,
        0.0,
        0.00483415486436113,
        0.0,
        127.40640794201681,
        0.5839172092091743,
    ],  # 2
    [0.0, 0.0, 0.00115, 0.00115, 0.0, 0.0, 8.9700000e01, 1.9933333e-01],  # 3
    [0.0, 0.0, 0.0, 0.0016193619361936193, 0.0, 0.0, 63.15511551155115, 0.14034470113678035],  # 4
    [0.0, 0.0016193619361936193, 0.0, 0.0, 0.0, 0.0, 63.15511551155115, 0.14034470113678035],  # 5
    [0.0, 0.0014960176991150442, 0.0, 0.0, 0.0, 0.0, 58.34469026548672, 0.12965486725663714],  # 6
    [0.0, 0.0017356365614798696, 0.0, 0.0, 0.0, 0.0, 67.68982589771491, 0.15042183532825534],  # 7
    [0.00038333333, 0.00421666666, 0.0, 0.0, 0.0, 0.0, 1.7940000e02, 3.9866666e-01],  # 8
    [
        2.6226133333332445e-05,
        0.0017985141333333335,
        0.0012570404666666667,
        1.679153333333405e-05,
        0.0,
        0.0,
        120.84431839999998,
        0.2685429297777777,
    ],  # 9
    [0.0, 0.0, 0.0026317044100119184, 0.0, 0.0, 0.0, 102.63647199046481, 0.22808104886769956],  # 10
    [
        2.8527381542699886e-05,
        0.00046051344490358133,
        0.005268607148760331,
        0.00037819888429751873,
        0.0,
        0.0,
        239.2980275206611,
        0.531773394490358,
    ],  # 11
    [
        2.8527381542699886e-05,
        0.00046051344490358133,
        0.007568607148760331,
        0.0026781988842975186,
        0.0,
        0.0,
        418.6980275206611,
        0.9304400611570247,
    ],  # 12
    [
        0.0,
        0.0,
        0.0,
        0.0,
        1.4677117099584098e-20,
        0.00455577147042278,
        35.535017469297685,
        0.10933851529014671,
    ],  # 13
    [
        0.00785319888429752,
        0.002393607148760331,
        0.00046051344490358144,
        2.8527381542699846e-05,
        0.0,
        0.0,
        418.6980275206612,
        0.9304400611570248,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if abs(D_ref[j][i]) < 1.0e-8:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU13,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU13,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 14 - calcul du ferraillage avec METHODE_2D="SANDWICH" ET VARIATION DES CRITERES DE PRECISION:
# -----------------------------------------------------------------------------------------------------

RESUELU14 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    METHODE_2D="SANDWICH",
    PAS_THETA=1,
    PAS_EPAI=0.02,
    PAS_SIGM=0.15,
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 14
# -----------------------------------------------------
D_ref = [
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # 1
    [
        0.00115,
        0.00115,
        0.0,
        0.0,
        0.00483415486436113,
        0.0,
        127.40640794201681,
        0.5839172092091743,
    ],  # 2
    [0.0, 0.0, 0.00115, 0.00115, 0.0, 0.0, 8.9700000e01, 1.9933333e-01],  # 3
    [0.0, 0.0, 0.0, 0.0016193619361936193, 0.0, 0.0, 63.15511551155115, 0.14034470113678035],  # 4
    [0.0, 0.0016193619361936193, 0.0, 0.0, 0.0, 0.0, 63.15511551155115, 0.14034470113678035],  # 5
    [0.0, 0.0014960176991150442, 0.0, 0.0, 0.0, 0.0, 58.34469026548672, 0.12965486725663714],  # 6
    [0.0, 0.0017356365614798696, 0.0, 0.0, 0.0, 0.0, 67.68982589771491, 0.15042183532825534],  # 7
    [0.00038333333, 0.00421666666, 0.0, 0.0, 0.0, 0.0, 1.7940000e02, 3.9866666e-01],  # 8
    [
        2.6226133333332445e-05,
        0.0017985141333333335,
        0.0012547328,
        3.628479999999973e-05,
        0.0,
        0.0,
        121.51455679999995,
        0.27003234844444435,
    ],  # 9
    [0.0, 0.0, 0.0026317044100119184, 0.0, 0.0, 0.0, 102.63647199046481, 0.22808104886769956],  # 10
    [
        0.0,
        0.0,
        0.005363472222222223,
        0.0008018055555555558,
        0.0,
        0.0,
        240.44583333333335,
        0.5343240740740741,
    ],  # 11
    [
        0.0,
        0.0,
        0.007663472222222221,
        0.0031018055555555547,
        0.0,
        0.0,
        419.84583333333325,
        0.9329907407407405,
    ],  # 12
    [
        0.0,
        0.0,
        0.0,
        0.0,
        1.4677117099584098e-20,
        0.00455577147042278,
        35.535017469297685,
        0.10933851529014671,
    ],  # 13
    [
        0.008276805555555555,
        0.00248847222222222,
        1.3471436930664426e-20,
        1.224676084605856e-21,
        0.0,
        0.0,
        419.8458333333332,
        0.9329907407407404,
    ],  # 14
]

D_calc = [
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # 1
    [
        0.00115,
        0.00115,
        0.0,
        0.0,
        0.00483415486436113,
        0.0,
        127.40640794201681,
        0.5839172092091743,
    ],  # 2
    [0.0, 0.0, 0.00115, 0.00115, 0.0, 0.0, 8.9700000e01, 1.9933333e-01],  # 3
    [0.0, 0.0, 0.0, 0.0016193619361936193, 0.0, 0.0, 63.15511551155115, 0.14034470113678035],  # 4
    [0.0, 0.0016193619361936193, 0.0, 0.0, 0.0, 0.0, 63.15511551155115, 0.14034470113678035],  # 5
    [0.0, 0.0014960176991150442, 0.0, 0.0, 0.0, 0.0, 58.34469026548672, 0.12965486725663714],  # 6
    [0.0, 0.0017356365614798696, 0.0, 0.0, 0.0, 0.0, 67.68982589771491, 0.15042183532825534],  # 7
    [0.00038333333, 0.00421666666, 0.0, 0.0, 0.0, 0.0, 1.7940000e02, 3.9866666e-01],  # 8
    [
        2.6226133333332445e-05,
        0.0017985141333333335,
        0.0012547328,
        3.628479999999973e-05,
        0.0,
        0.0,
        121.51455679999995,
        0.27003234844444435,
    ],  # 9
    [0.0, 0.0, 0.0026317044100119184, 0.0, 0.0, 0.0, 102.63647199046481, 0.22808104886769956],  # 10
    [
        0.0,
        0.0,
        0.005363472222222223,
        0.0008018055555555558,
        0.0,
        0.0,
        240.44583333333335,
        0.5343240740740741,
    ],  # 11
    [
        0.0,
        0.0,
        0.007663472222222221,
        0.0031018055555555547,
        0.0,
        0.0,
        419.84583333333325,
        0.9329907407407405,
    ],  # 12
    [
        0.0,
        0.0,
        0.0,
        0.0,
        1.4677117099584098e-20,
        0.00455577147042278,
        35.535017469297685,
        0.10933851529014671,
    ],  # 13
    [
        0.008276805555555555,
        0.00248847222222222,
        1.3471436930664426e-20,
        1.224676084605856e-21,
        0.0,
        0.0,
        419.8458333333332,
        0.9329907407407404,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if abs(D_ref[j][i]) < 1.0e-8:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU14,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU14,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 15 - calcul du ferraillage avec METHODE_2D="SANDWICH" ET COND_109='NON':
# --------------------------------------------------------------------------------

RESUELU15 = CALC_FERRAILLAGE(
    RESULTAT=RESUELU,
    CARA_ELEM=CARA,
    reuse=RESUELU,
    CODIFICATION="EC2",
    TYPE_COMB="ELU",
    METHODE_2D="SANDWICH",
    COND_109="NON",
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            C_SUP=0.04,
            C_INF=0.04,
            FYK=500.0e6,
            FCK=35.0e6,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
            TYPE_DIAGRAMME="B2",
            GAMMA_S=1.15,
            GAMMA_C=1.5,
            ALPHA_CC=1.0,
        )
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 15
# -----------------------------------------------------
D_ref = [
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # 1
    [
        0.00115,
        0.00115,
        0.0,
        0.0,
        0.00483415486436113,
        0.0,
        127.40640794201681,
        0.5839172092091743,
    ],  # 2
    [0.0, 0.0, 0.00115, 0.00115, 0.0, 0.0, 8.9700000e01, 1.9933333e-01],  # 3
    [0.0, 0.0, 0.0, 0.0015844994617868675, 0.0, 0.0, 61.79547900968783, 0.13732328668819518],  # 4
    [0.0, 0.0015844994617868675, 0.0, 0.0, 0.0, 0.0, 61.79547900968783, 0.13732328668819518],  # 5
    [0.0, 0.0014586580086580086, 0.0, 0.0, 0.0, 0.0, 56.88766233766233, 0.1264170274170274],  # 6
    [0.0, 0.001707501334757074, 0.0, 0.0, 0.0, 0.0, 66.59255205552587, 0.14798344901227972],  # 7
    [0.00038333333, 0.00421666666, 0.0, 0.0, 0.0, 0.0, 1.7940000e02, 3.9866666e-01],  # 8
    [
        2.875000000000054e-05,
        0.00158125,
        0.001152172222222222,
        2.8494444444444682e-05,
        0.0,
        0.0,
        108.83600000000003,
        0.24185777777777784,
    ],  # 9
    [0.0, 0.0, 0.0025263157894736842, 0.0, 0.0, 0.0, 98.52631578947368, 0.21894736842105264],  # 10
    [0.0, 0.0, 0.005514697406340058, 0.0, 0.0, 0.0, 215.07319884726223, 0.477940441882805],  # 11
    [
        0.0,
        0.0,
        0.007730555555555555,
        0.002363888888888888,
        0.0,
        0.0,
        393.6833333333332,
        0.8748518518518517,
    ],  # 12
    [
        0.0,
        0.0,
        0.0,
        0.0,
        1.394686950593057e-20,
        0.004329102899821411,
        33.76700261860701,
        0.10389846959571387,
    ],  # 13
    [
        0.007538888888888888,
        0.0025555555555555553,
        1.584874933019344e-20,
        1.4407953936539503e-21,
        0.0,
        0.0,
        393.6833333333333,
        0.8748518518518518,
    ],  # 14
]

D_calc = [
    [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0],  # 1
    [
        0.00115,
        0.00115,
        0.0,
        0.0,
        0.00483415486436113,
        0.0,
        127.40640794201681,
        0.5839172092091743,
    ],  # 2
    [0.0, 0.0, 0.00115, 0.00115, 0.0, 0.0, 8.9700000e01, 1.9933333e-01],  # 3
    [0.0, 0.0, 0.0, 0.0015844994617868675, 0.0, 0.0, 61.79547900968783, 0.13732328668819518],  # 4
    [0.0, 0.0015844994617868675, 0.0, 0.0, 0.0, 0.0, 61.79547900968783, 0.13732328668819518],  # 5
    [0.0, 0.0014586580086580086, 0.0, 0.0, 0.0, 0.0, 56.88766233766233, 0.1264170274170274],  # 6
    [0.0, 0.001707501334757074, 0.0, 0.0, 0.0, 0.0, 66.59255205552587, 0.14798344901227972],  # 7
    [0.00038333333, 0.00421666666, 0.0, 0.0, 0.0, 0.0, 1.7940000e02, 3.9866666e-01],  # 8
    [
        2.875000000000054e-05,
        0.00158125,
        0.001152172222222222,
        2.8494444444444682e-05,
        0.0,
        0.0,
        108.83600000000003,
        0.24185777777777784,
    ],  # 9
    [0.0, 0.0, 0.0025263157894736842, 0.0, 0.0, 0.0, 98.52631578947368, 0.21894736842105264],  # 10
    [0.0, 0.0, 0.005514697406340058, 0.0, 0.0, 0.0, 215.07319884726223, 0.477940441882805],  # 11
    [
        0.0,
        0.0,
        0.007730555555555555,
        0.002363888888888888,
        0.0,
        0.0,
        393.6833333333332,
        0.8748518518518517,
    ],  # 12
    [
        0.0,
        0.0,
        0.0,
        0.0,
        1.394686950593057e-20,
        0.004329102899821411,
        33.76700261860701,
        0.10389846959571387,
    ],  # 13
    [
        0.007538888888888888,
        0.0025555555555555553,
        1.584874933019344e-20,
        1.4407953936539503e-21,
        0.0,
        0.0,
        393.6833333333333,
        0.8748518518518518,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if abs(D_ref[j][i]) < 1.0e-8:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU15,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELU15,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELU",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )


FIN()
