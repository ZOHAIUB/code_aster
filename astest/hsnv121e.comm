# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

M1 = LIRE_MAILLAGE(FORMAT="MED")

MA = CREA_MAILLAGE(
    MAILLAGE=M1,
    MODI_MAILLE=(
        _F(OPTION="QUAD8_9", GROUP_MA="MA1"),
        _F(OPTION="TRIA6_7", GROUP_MA=("MA3", "MA4")),
    ),
)

MA = DEFI_GROUP(reuse=MA, MAILLAGE=MA, CREA_GROUP_MA=_F(NOM="TOUT", TOUT="OUI"))

MO = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="COQUE_3D"))

CARAC = AFFE_CARA_ELEM(
    MODELE=MO,
    COQUE=_F(
        GROUP_MA="TOUT", EPAIS=100.0, COQUE_NCOU=1, A_CIS=0.83333333333333, ANGL_REP=(30.0, 0.0)
    ),
)

ACIER_T = DEFI_MATERIAU(ELAS=_F(E=250000.0, NU=0.0))

CHP_MATT = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(TOUT="OUI", MATER=ACIER_T))

L_INST = DEFI_LIST_REEL(
    DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=1.00, NOMBRE=1), _F(JUSQU_A=2.00, NOMBRE=20))
)

F_CHAR = DEFI_FONCTION(
    NOM_PARA="INST", PROL_DROITE="CONSTANT", VALE=(0.0, 0.0, 1.0, 0.0, 2.0, 100.0)
)


CHR_LIAI = AFFE_CHAR_MECA(
    MODELE=MO,
    DDL_IMPO=(
        _F(GROUP_NO="N12", DX=0.0, DY=0.0, DZ=0.0, DRX=0.0, DRY=0.0, DRZ=0.0),
        _F(GROUP_NO="N11", DX=0.0, DY=0.0, DZ=0.0, DRX=0.0, DRY=0.0, DRZ=0.0),
        _F(GROUP_NO="N13", DX=0.0, DY=0.0, DZ=0.0, DRX=0.0, DRY=0.0, DRZ=0.0),
    ),
)

CHR_TRAC = AFFE_CHAR_MECA(MODELE=MO, FACE_IMPO=_F(GROUP_MA="MA2", DX=0.866025404, DY=0.5))

VT = STAT_NON_LINE(
    MODELE=MO,
    CARA_ELEM=CARAC,
    CHAM_MATER=CHP_MATT,
    EXCIT=(_F(CHARGE=CHR_LIAI),),
    COMPORTEMENT=_F(RELATION="ELAS", DEFORMATION="GROT_GDEP"),
    INCREMENT=_F(LIST_INST=L_INST, NUME_INST_FIN=1),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(RESI_GLOB_MAXI=1.0e-1, ITER_GLOB_MAXI=50),
    RECH_LINEAIRE=_F(ITER_LINE_MAXI=3),
)

VT = STAT_NON_LINE(
    reuse=VT,
    ETAT_INIT=_F(EVOL_NOLI=VT, NUME_ORDRE=1),
    MODELE=MO,
    CHAM_MATER=CHP_MATT,
    CARA_ELEM=CARAC,
    EXCIT=(_F(CHARGE=CHR_LIAI), _F(CHARGE=CHR_TRAC, FONC_MULT=F_CHAR, TYPE_CHARGE="DIDI")),
    COMPORTEMENT=_F(RELATION="ELAS", DEFORMATION="GROT_GDEP"),
    INCREMENT=_F(LIST_INST=L_INST),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-06, ITER_GLOB_MAXI=50),
)

VT = CALC_CHAMP(reuse=VT, RESULTAT=VT, CONTRAINTE=("SIGM_ELNO"), VARI_INTERNE=("VARI_ELNO"))


VTPOS = POST_CHAMP(
    RESULTAT=VT, EXTR_COQUE=_F(NOM_CHAM="SIGM_ELNO", NUME_COUCHE=1, NIVE_COUCHE="MOY")
)
TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=21,
            RESULTAT=VT,
            NOM_CHAM="DEPL",
            GROUP_NO="N4",
            NOM_CMP="DX",
            VALE_CALC=86.602500000000006,
        ),
        _F(
            NUME_ORDRE=21, RESULTAT=VT, NOM_CHAM="DEPL", GROUP_NO="N4", NOM_CMP="DY", VALE_CALC=50.0
        ),
        _F(
            NUME_ORDRE=21,
            POINT=1,
            SOUS_POINT=1,
            RESULTAT=VT,
            NOM_CHAM="SIEF_ELGA",
            NOM_CMP="SIXX",
            VALE_CALC=26250.0,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=21,
            POINT=1,
            SOUS_POINT=1,
            RESULTAT=VTPOS,
            NOM_CHAM="SIGM_ELNO",
            NOM_CMP="SIXX",
            VALE_CALC=28875.0,
            GROUP_MA="M1",
        ),
    )
)

FIN()
#
