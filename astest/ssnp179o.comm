# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

########################################################################
#          TEST DE VERIFICATION EN PLASTICITE INCOMPRESSIBLE           #
#                       MEMBRANE DE COOK                               #
########################################################################

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))


mesh0 = LIRE_MAILLAGE(FORMAT="MED", PARTITIONNEUR="PTSCOTCH")

mesh = CREA_MAILLAGE(MAILLAGE=mesh0, MODI_HHO=_F(TOUT="OUI"))

mesh = MODI_MAILLAGE(reuse=mesh, MAILLAGE=mesh, ORIE_PEAU=_F(GROUP_MA_PEAU=("Encast", "load")))

mesh = DEFI_GROUP(
    reuse=mesh, MAILLAGE=mesh, CREA_GROUP_MA=_F(NOM="MA3D", TYPE_MAILLE="3D", TOUT="OUI")
)

ctrac = LIRE_FONCTION(UNITE=21, NOM_PARA="EPSI", PROL_DROITE="LINEAIRE")

E = 206.9
mater = DEFI_MATERIAU(TRACTION=_F(SIGM=ctrac), ELAS=_F(E=E, NU=0.29, RHO=1.0))

fieldmat = AFFE_MATERIAU(AFFE=_F(MATER=(mater,), TOUT="OUI"), MAILLAGE=mesh)

rampe = DEFI_FONCTION(
    NOM_PARA="INST", VALE=(0.0, 0.0, 1.0, 1.0), PROL_DROITE="LINEAIRE", PROL_GAUCHE="EXCLU"
)

listr = DEFI_LIST_REEL(
    DEBUT=0.0,
    INTERVALLE=(
        _F(JUSQU_A=0.1, NOMBRE=1),
        _F(JUSQU_A=0.5, NOMBRE=3),
        _F(JUSQU_A=0.8, NOMBRE=4),
        _F(JUSQU_A=1.0, NOMBRE=4),
    ),
)

times = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=listr), ECHEC=_F(ACTION="DECOUPE", EVENEMENT="ERREUR", SUBD_NIVEAU=4)
)

FY = FORMULE(NOM_PARA=("INST"), VALE="0.3125")

AY = [6.922673008482482]
AX = [-6.148238191548095]
AT = [0.28897372614368017]

model = AFFE_MODELE(
    AFFE=_F(MODELISATION=("3D_HHO",), FORMULATION="LINEAIRE", PHENOMENE="MECANIQUE", TOUT="OUI"),
    MAILLAGE=mesh,
)

depl = AFFE_CHAR_CINE(MECA_IMPO=_F(DX=0.0, DY=0.0, GROUP_MA=("Encast",)), MODELE=model, INFO=1)

plan = AFFE_CHAR_CINE(MECA_IMPO=_F(DZ=0.0, TOUT="OUI"), MODELE=model, INFO=1)

load = AFFE_CHAR_MECA_F(FORCE_FACE=_F(FY=FY, GROUP_MA=("load",)), MODELE=model)

resnonl = STAT_NON_LINE(
    CHAM_MATER=fieldmat,
    COMPORTEMENT=_F(DEFORMATION="GDEF_LOG", RELATION="VMIS_ISOT_TRAC", TOUT="OUI"),
    CONVERGENCE=_F(ITER_GLOB_MAXI=12, RESI_GLOB_RELA=1e-6),
    EXCIT=(
        _F(CHARGE=depl, TYPE_CHARGE="FIXE_CSTE"),
        _F(CHARGE=plan, TYPE_CHARGE="FIXE_CSTE"),
        _F(CHARGE=load, FONC_MULT=rampe, TYPE_CHARGE="FIXE_CSTE"),
    ),
    INCREMENT=_F(LIST_INST=times),
    MODELE=model,
    NEWTON=_F(MATRICE="TANGENTE", PREDICTION="TANGENTE", REAC_ITER=1),
    SOLVEUR=_F(METHODE="MUMPS"),
    INFO=1,
)

resnonl = CALC_CHAMP(
    reuse=resnonl,
    CHAM_MATER=fieldmat,
    CRITERES=("SIEQ_NOEU", "SIEQ_ELGA"),
    PROPRIETES=("MATE_ELEM", "MATE_ELGA"),
    CONTRAINTE=("SIEF_ELNO", "SIEF_NOEU"),
    DEFORMATION=("EPSI_ELNO", "EPSI_ELGA"),
    VARI_INTERNE=("VARC_ELGA"),
    MODELE=model,
    RESULTAT=resnonl,
)

rescoor = CALC_CHAM_ELEM(MODELE=model, OPTION="COOR_ELGA", GROUP_MA="MA3D")

IMPR_RESU(UNITE=80, RESU=_F(RESULTAT=resnonl, IMPR_NOM_VARI="OUI"), FORMAT="MED", INFO=1)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("A",),
        REFERENCE="AUTRE_ASTER",
        RESULTAT=resnonl,
        NOM_CHAM="HHO_DEPL",
        NOM_CMP="DY",
        VALE_CALC=AY,
        VALE_REFE=7.00031,
        CRITERE="RELATIF",
        PRECISION=2.0e-2,
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("A",),
        REFERENCE="AUTRE_ASTER",
        RESULTAT=resnonl,
        NOM_CHAM="HHO_DEPL",
        NOM_CMP="DX",
        VALE_CALC=AX,
        VALE_REFE=-6.23907,
        CRITERE="RELATIF",
        PRECISION=2.0e-2,
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("A",),
        RESULTAT=resnonl,
        NOM_CHAM="SIEQ_NOEU",
        NOM_CMP="TRSIG",
        VALE_CALC=AT,
        CRITERE="RELATIF",
    )
)


FIN()
