# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))

# MODELIDATION A : FEM 3D

# CE FICHIER EST LA VERSION CORRIGEE DU 2EME EXERCICE DES TPS
# POUR LA PREPARATION DES TPS, FOURNIR EGALEMENT UNE VERSION A TROUS DE CE FICHIER :
# - REMPLACER LES PARAMETRES RSUP ET RSUP PAR UNE VALEUR BIDON (EX. : 999)
# - SUPPRIMER LES TEST_TABLE

MA = LIRE_MAILLAGE(FORMAT="MED")

MO = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="3D"))

MA = MODI_MAILLAGE(reuse=MA, MAILLAGE=MA, ORIE_PEAU=_F(GROUP_MA_PEAU=("FACE_AV", "FACE_LAT")))

# Barsoum
MA = MODI_MAILLAGE(reuse=MA, MAILLAGE=MA, MODI_MAILLE=_F(OPTION="NOEUD_QUART", GROUP_MA_FOND="LFF"))

MAT = DEFI_MATERIAU(ELAS=_F(E=2.0e11, NU=0.3))

CHMAT = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(TOUT="OUI", MATER=MAT))

SYMETR = AFFE_CHAR_MECA(
    MODELE=MO,
    DDL_IMPO=_F(GROUP_NO="D", DZ=0.0),
    FACE_IMPO=(_F(GROUP_MA="FACE_AV", DNOR=0.0), _F(GROUP_MA="FACE_LAT", DNOR=0.0)),
)

PRESSION = AFFE_CHAR_MECA(
    MODELE=MO, FORCE_FACE=(_F(GROUP_MA="FACE_SUP", FZ=1.0e6), _F(GROUP_MA="FACE_INF", FZ=-1.0e6))
)

CHAMDEPL = MECA_STATIQUE(
    MODELE=MO, CHAM_MATER=CHMAT, EXCIT=(_F(CHARGE=PRESSION), _F(CHARGE=SYMETR))
)

CHAMDEPL = CALC_CHAMP(reuse=CHAMDEPL, RESULTAT=CHAMDEPL, CONTRAINTE=("SIGM_ELNO"))


CHAMDEPL = CALC_CHAMP(reuse=CHAMDEPL, RESULTAT=CHAMDEPL, CONTRAINTE="SIGM_NOEU")

IMPR_RESU(FORMAT="MED", UNITE=80, RESU=_F(RESULTAT=CHAMDEPL))

# ----------------------------------------------------------------------
#                  fin du calcul mecanique
# ----------------------------------------------------------------------

FISSH = DEFI_FOND_FISS(
    MAILLAGE=MA,
    FOND_FISS=_F(GROUP_MA="LFF", GROUP_NO_ORIG="NFF1", GROUP_NO_EXTR="NFF2"),
    SYME="NON",
    LEVRE_SUP=_F(GROUP_MA="LEV_SUP"),
    LEVRE_INF=_F(GROUP_MA="LEV_INF"),
)

RSUP = 0.5
RINF = 0.2


# Calcul de G par CALC_G le long du fond de fissure
# --------------------------------------------------

# valeur de reference milieu infini :
G_REF = 11.58648

# lissage de Legendre (par defaut)
G_LEG = CALC_G(
    RESULTAT=CHAMDEPL,
    OPTION="G",
    THETA=_F(FISSURE=FISSH, R_SUP=RSUP, R_INF=RINF, DISCRETISATION="LEGENDRE", DEGRE=5),
)

IMPR_TABLE(TABLE=G_LEG, UNITE=6)


# lissage de Lagrange
G_LAG = CALC_G(
    RESULTAT=CHAMDEPL,
    OPTION="G",
    THETA=_F(FISSURE=FISSH, R_SUP=RSUP, R_INF=RINF, DISCRETISATION="LINEAIRE"),
)

IMPR_TABLE(TABLE=G_LAG)


# Calcul de K par POST_K1_K2_K3 le long du fond de fissure
# ---------------------------------------------------------

K = POST_K1_K2_K3(RESULTAT=CHAMDEPL, FOND_FISS=FISSH)


IMPR_TABLE(TABLE=K)

# trace des courbes (necessite de passer par astk)

C_G_LEG = RECU_FONCTION(TABLE=G_LEG, PARA_X="ABSC_CURV_NORM", PARA_Y="G")

C_G_LAG = RECU_FONCTION(TABLE=G_LAG, PARA_X="ABSC_CURV_NORM", PARA_Y="G")


IMPR_FONCTION(
    FORMAT="XMGRACE",
    UNITE=31,
    COURBE=(
        _F(FONCTION=C_G_LEG, LEGENDE="lissage LEGENDRE degre 5", MARQUEUR=0, COULEUR=1),
        _F(FONCTION=C_G_LAG, LEGENDE="lissage LAGRANGE", MARQUEUR=0, COULEUR=2),
    ),
    TITRE="Taux de restitution d energie",
    BORNE_X=(0.0, 3.14),
    BORNE_Y=(0.0, 15),
    GRILLE_X=0.5,
    GRILLE_Y=1.0,
    LEGENDE_X="s (m)",
    LEGENDE_Y="G (J.m\S-2\\N)",
)

K1ref = 1.5957e6
TEST_TABLE(
    REFERENCE="ANALYTIQUE",
    PRECISION=8.0000000000000002e-3,
    VALE_CALC=1607011.55098,
    VALE_REFE=1.595700e6,
    NOM_PARA="K1",
    TYPE_TEST="MAX",
    TABLE=K,
)

FIN()
