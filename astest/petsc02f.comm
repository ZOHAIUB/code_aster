# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

from code_aster.Commands import *
from code_aster.CA import MPI

rank = MPI.ASTER_COMM_WORLD.Get_rank()

DEBUT(CODE="OUI")

MA = LIRE_MAILLAGE(FORMAT="MED", PARTITIONNEUR="PTSCOTCH")

MO = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="3D"))

MAT1 = DEFI_MATERIAU(ELAS=_F(E=2.1e11, NU=0.3))

AFMAT = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(TOUT="OUI", MATER=MAT1))

AFCIN = AFFE_CHAR_CINE(
    MODELE=MO,
    MECA_IMPO=(
        _F(GROUP_NO="Cote_inferieur", DX=0, DY=0, DZ=0),
        _F(GROUP_NO="Cote_superieur", DZ=1),
    ),
)

MESTAT1 = MECA_STATIQUE(
    MODELE=MO,
    CHAM_MATER=AFMAT,
    EXCIT=_F(CHARGE=AFCIN),
    SOLVEUR=_F(
        METHODE="PETSC",
        ALGORITHME="GCR",
        PRE_COND="BOOMER",
        RESI_RELA=1.0e-12,
        MATR_DISTRIBUEE="OUI",
    ),
    OPTION="SIEF_ELGA",
    INFO=2,
)

EXTR_HPC = POST_RELEVE_T(
    ACTION=(
        _F(
            GROUP_NO=("N9",),
            INTITULE="EXTR_HPC",
            NOM_CHAM="DEPL",
            OPERATION=("EXTRACTION",),
            RESULTAT=MESTAT1,
            INST=0.0,
            NOM_CMP=("DX",),
        )
    )
)

if rank == 1:
    TEST_TABLE(TABLE=EXTR_HPC, NOM_PARA="DX", VALE_CALC=0.018302360235153102)

IMPR_RESU(FORMAT="RESULTAT", RESU=_F(RESULTAT=MESTAT1, NOM_CHAM="DEPL"))

INT_DZ = POST_ELEM(
    INTEGRALE=_F(GROUP_MA="Face_i", NOM_CMP="DZ", NOM_CHAM="DEPL", TYPE_MAILLE="2D"),
    CHAM_MATER=AFMAT,
    RESULTAT=MESTAT1,
)

INT_DEPX = POST_ELEM(
    INTEGRALE=_F(GROUP_MA="Arete_superieure_y", NOM_CMP="DX", NOM_CHAM="DEPL", TYPE_MAILLE="1D"),
    CHAM_MATER=AFMAT,
    RESULTAT=MESTAT1,
)

INT_DEPY = POST_ELEM(
    INTEGRALE=_F(GROUP_MA="Arete_superieure_x", NOM_CMP="DY", NOM_CHAM="DEPL", TYPE_MAILLE="1D"),
    CHAM_MATER=AFMAT,
    RESULTAT=MESTAT1,
)

TEST_TABLE(TABLE=INT_DZ, NOM_PARA="MOYE_DZ", VALE_CALC=0.468001350730)

TEST_TABLE(TABLE=INT_DEPX, NOM_PARA="MOYE_DX", VALE_CALC=0.0719191472610)

TEST_TABLE(TABLE=INT_DEPY, NOM_PARA="MOYE_DY", VALE_CALC=0.0719191472608)

MIN_DEPY = POST_ELEM(
    MINMAX=_F(GROUP_MA="Arete_superieure_x", NOM_CMP="DY", NOM_CHAM="DEPL", RESULTAT=MESTAT1)
)

TEST_TABLE(TABLE=MIN_DEPY, NOM_PARA="MAX_DY", VALE_CALC=0.19179930575336437)
TEST_TABLE(TABLE=MIN_DEPY, NOM_PARA="MIN_DY", VALE_CALC=1.6233744250913767e-002)

MIN_SIXX = POST_ELEM(
    MINMAX=_F(GROUP_MA="GROUPE_TEST", NOM_CMP="SIXX", NOM_CHAM="SIEF_ELGA", RESULTAT=MESTAT1)
)

TEST_TABLE(TABLE=MIN_SIXX, NOM_PARA="MAX_SIXX", VALE_CALC=54730327557.440422)
TEST_TABLE(TABLE=MIN_SIXX, NOM_PARA="MIN_SIXX", VALE_CALC=1483646937.0056686)

FIN()
