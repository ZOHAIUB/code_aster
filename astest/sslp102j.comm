# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# CALCUL DU TAUX DE RESTITUTION D'ENERGIE EN PRESENCE DE PRE-DEFORMATION
# 3D
# CALCUL ELASTIQUE ELASTO-PLASTIQUE : VMIS_ISOT_LINE
# DEMI-CYLINDRE TRAITE PAR SYMETRIE
#

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

########################################################################
#                      PARAMETRES DU CAS-TEST                          #
########################################################################
sigma_max = 30
poisson = 0.3
EE = 200000
ratio = 15.0
########################################################################


MA = LIRE_MAILLAGE(FORMAT="MED")

# BARSOUM
DEFI_GROUP(reuse=MA, MAILLAGE=MA, CREA_GROUP_NO=_F(NOM="FOND_FISS_NO", GROUP_MA="FOND_FISS_MA"))
MA = MODI_MAILLAGE(
    reuse=MA, MAILLAGE=MA, MODI_MAILLE=_F(GROUP_NO_FOND=("FOND_FISS_NO",), OPTION="NOEUD_QUART")
)

# DEFINITION DU MODELE MECANIQUE
MO = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="3D"))


# CHAMP DE TEMPETATURE UNIFORME NULLE
CTE0 = DEFI_CONSTANTE(VALE=0.0)

CHP_T0 = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_TEMP_F",
    MAILLAGE=MA,
    AFFE=_F(TOUT="OUI", NOM_CMP="TEMP", VALE_F=CTE0),
)

# CHAMP DE TEMPETATURE VARIANT LINERAIREMENT

GRADT = FORMULE(VALE="-50+sqrt(X*X+Z*Z)", NOM_PARA=["X", "Z"])

CH_GRADT = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_TEMP_F",
    MAILLAGE=MA,
    AFFE=_F(TOUT="OUI", NOM_CMP="TEMP", VALE_F=GRADT),
)

# CREATION D'UN RESULTAT THERMIQUE

RESUTHER = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_THER",
    AFFE=(
        _F(NOM_CHAM="TEMP", INST=0, CHAM_GD=CHP_T0),
        _F(NOM_CHAM="TEMP", INST=1, CHAM_GD=CH_GRADT),
    ),
)

# CREATION ET AFFECTATION DU MATERIAU
MAT = DEFI_MATERIAU(
    ELAS=_F(E=EE, NU=poisson, ALPHA=1.0e-5), ECRO_LINE=_F(D_SIGM_EPSI=EE / ratio, SY=sigma_max)
)

# SANS DEFORMATION THERMIQUE
CM = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(TOUT="OUI", MATER=MAT))

# AVEC DEFORMATION THERMIQUE
CMTH = AFFE_MATERIAU(
    MAILLAGE=MA,
    AFFE=_F(TOUT="OUI", MATER=MAT),
    AFFE_VARC=_F(TOUT="OUI", NOM_VARC="TEMP", EVOL=RESUTHER, VALE_REF=0.0),
)

# CONDITIONS LIMITES ET CHARGEMENT

EPSINI = FORMULE(VALE="-0.0005+0.001*sqrt(X*X+Z*Z)/100", NOM_PARA=["X", "Z"])

CH = AFFE_CHAR_CINE(
    MODELE=MO,
    MECA_IMPO=(
        _F(GROUP_MA="GRNM2_MA", DY=0.0),
        _F(GROUP_MA="GRNM4_MA", DY=0.0),
        _F(GROUP_MA="GRSD1X", DZ=0.0),
        _F(GROUP_MA="GRSD2X", DZ=0.0),
        _F(GROUP_MA="GRSD1Z", DX=0.0),
        _F(GROUP_MA="GRSD2Z", DX=0.0),
    ),
)

CH_EPS = AFFE_CHAR_MECA_F(MODELE=MO, PRE_EPSI=_F(TOUT="OUI", EPXX=EPSINI, EPYY=EPSINI, EPZZ=EPSINI))

L_INST = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=1.0, NOMBRE=1))

# CALCUL THERMOMECANIQUE
RESUTH = STAT_NON_LINE(
    MODELE=MO,
    CHAM_MATER=CMTH,
    EXCIT=(_F(CHARGE=CH),),
    COMPORTEMENT=_F(RELATION="VMIS_ISOT_LINE"),
    INCREMENT=_F(LIST_INST=L_INST),
    CONVERGENCE=_F(ITER_GLOB_MAXI=40),
)

# CALCUL AVEC ETAT INITIAL
RESUINI = STAT_NON_LINE(
    MODELE=MO,
    CHAM_MATER=CM,
    EXCIT=(_F(CHARGE=CH), _F(CHARGE=CH_EPS)),
    COMPORTEMENT=_F(RELATION="VMIS_ISOT_LINE"),
    INCREMENT=_F(LIST_INST=L_INST),
    CONVERGENCE=_F(ITER_GLOB_MAXI=40),
)

# --------------------------------------------------------------------
#  CALCUL DE G AVEC DEFORMATIONS THERMIQUES
# --------------------------------------------------------------------

FOND = DEFI_FOND_FISS(
    MAILLAGE=MA,
    FOND_FISS=_F(GROUP_MA="FOND_FISS_MA"),
    SYME="OUI",
    LEVRE_SUP=_F(GROUP_MA="LEVRE_SUP_3D"),
)

GTH1 = CALC_G(
    RESULTAT=RESUTH,
    NUME_ORDRE=1,
    OPTION="G_EPSI",
    THETA=_F(FISSURE=FOND, R_INF=1.0, R_SUP=5.0, DISCRETISATION="LEGENDRE"),
)

GTH2 = CALC_G(
    RESULTAT=RESUTH,
    NUME_ORDRE=1,
    OPTION="G_EPSI",
    THETA=_F(FISSURE=FOND, R_INF=5.0, R_SUP=10.0, DISCRETISATION="LEGENDRE"),
)

GTH3 = CALC_G(
    RESULTAT=RESUTH,
    NUME_ORDRE=1,
    OPTION="G_EPSI",
    THETA=_F(FISSURE=FOND, R_INF=10.0, R_SUP=20.0, DISCRETISATION="LEGENDRE"),
)

GTH4 = CALC_G(
    RESULTAT=RESUTH,
    NUME_ORDRE=1,
    OPTION="G_EPSI",
    THETA=_F(FISSURE=FOND, R_INF=20.0, R_SUP=30.0, DISCRETISATION="LEGENDRE"),
)

# --------------------------------------------------------------------
#  CALCUL DE G AVEC DEFORMATIONS INITIALES
# --------------------------------------------------------------------

GINI1 = CALC_G(
    RESULTAT=RESUINI,
    NUME_ORDRE=1,
    OPTION="G_EPSI",
    THETA=_F(FISSURE=FOND, R_INF=1.0, R_SUP=5.0, DISCRETISATION="LEGENDRE"),
)

GINI2 = CALC_G(
    RESULTAT=RESUINI,
    NUME_ORDRE=1,
    OPTION="G_EPSI",
    THETA=_F(FISSURE=FOND, R_INF=5.0, R_SUP=10.0, DISCRETISATION="LEGENDRE"),
)

GINI3 = CALC_G(
    RESULTAT=RESUINI,
    NUME_ORDRE=1,
    OPTION="G_EPSI",
    THETA=_F(FISSURE=FOND, R_INF=10.0, R_SUP=20.0, DISCRETISATION="LEGENDRE"),
)

GINI4 = CALC_G(
    RESULTAT=RESUINI,
    NUME_ORDRE=1,
    OPTION="G_EPSI",
    THETA=_F(FISSURE=FOND, R_INF=20.0, R_SUP=30.0, DISCRETISATION="LEGENDRE"),
)


# --------------------------------------------------------------------
#                TESTS DES RESULTATS                                #
# --------------------------------------------------------------------
# RAPPEL DES VALEURS EN ELASTICITE LINEAIRE
Gther1_elas = 0.6290601292194907
Gther2_elas = 0.6291388017015365
Gther3_elas = 0.6297983238471783
Gther4_elas = 0.632345421643667

# VALEURS EN ELASTO PLASTICITE
Gther1 = 0.43554631756559703
Gther2 = 0.4353413618352909
Gther3 = 0.43560732450684553
Gther4 = 0.43659095665349174

IMPR_TABLE(TABLE=GTH1, UNITE=6)
IMPR_TABLE(TABLE=GINI1, UNITE=6)

# NON REGRESSIONS DES G ISSUS DU CALCUL THERMOMECANIQUE
TEST_TABLE(
    VALE_CALC=Gther1,
    NOM_PARA="G_EPSI",
    TABLE=GTH1,
    FILTRE=(_F(NOM_PARA="NUME_ORDRE", VALE_I=1), _F(NOM_PARA="NUM_PT", VALE_I=11)),
)

TEST_TABLE(
    VALE_CALC=Gther2,
    NOM_PARA="G_EPSI",
    TABLE=GTH2,
    FILTRE=(_F(NOM_PARA="NUME_ORDRE", VALE_I=1), _F(NOM_PARA="NUM_PT", VALE_I=11)),
)

TEST_TABLE(
    VALE_CALC=Gther3,
    NOM_PARA="G_EPSI",
    TABLE=GTH3,
    FILTRE=(_F(NOM_PARA="NUME_ORDRE", VALE_I=1), _F(NOM_PARA="NUM_PT", VALE_I=11)),
)

TEST_TABLE(
    VALE_CALC=Gther4,
    NOM_PARA="G_EPSI",
    TABLE=GTH4,
    FILTRE=(_F(NOM_PARA="NUME_ORDRE", VALE_I=1), _F(NOM_PARA="NUM_PT", VALE_I=11)),
)

# TEST DES G ISSUS DU CALCUL AVEC PRE-DEFORMATION
TEST_TABLE(
    VALE_CALC=0.43554273028041546,
    VALE_REFE=Gther1,
    PRECISION=1.0e-4,
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    NOM_PARA="G_EPSI",
    TABLE=GINI1,
    FILTRE=(_F(NOM_PARA="NUME_ORDRE", VALE_I=1), _F(NOM_PARA="NUM_PT", VALE_I=11)),
)

TEST_TABLE(
    VALE_CALC=0.43533685761588464,
    VALE_REFE=Gther2,
    PRECISION=1.0e-4,
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    NOM_PARA="G_EPSI",
    TABLE=GINI2,
    FILTRE=(_F(NOM_PARA="NUME_ORDRE", VALE_I=1), _F(NOM_PARA="NUM_PT", VALE_I=11)),
)

TEST_TABLE(
    VALE_CALC=0.43560212749596455,
    VALE_REFE=Gther3,
    PRECISION=1.0e-4,
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    NOM_PARA="G_EPSI",
    TABLE=GINI3,
    FILTRE=(_F(NOM_PARA="NUME_ORDRE", VALE_I=1), _F(NOM_PARA="NUM_PT", VALE_I=11)),
)

TEST_TABLE(
    VALE_CALC=0.4365861786520396,
    VALE_REFE=Gther4,
    PRECISION=1.0e-4,
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    NOM_PARA="G_EPSI",
    TABLE=GINI4,
    FILTRE=(_F(NOM_PARA="NUME_ORDRE", VALE_I=1), _F(NOM_PARA="NUM_PT", VALE_I=11)),
)

FIN()
#
