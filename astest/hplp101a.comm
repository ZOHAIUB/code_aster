# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#       OBSTACLE A UN FLUC DE CHALEUR UNIFORME EN MILIEU ISOTROPE
#
# TEST ISSU DE LA VALIDATION INDEPENDANTE EN MECANIQUE DE LA RUPTURE
# DATE 11/12/95   AUTEUR  CIBHHEL  E.LECLERE
#
# MURA_11_17 - CAS A
#

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

MA = LIRE_MAILLAGE(FORMAT="MED")

MA = DEFI_GROUP(
    reuse=MA, MAILLAGE=MA, CREA_GROUP_NO=_F(GROUP_MA=("LP9P10", "LP9P10B", "LP8P9", "LP8P9B"))
)

#
# -------------------------------------------------------------------
#                    DEBUT DU THERMIQUE
# -------------------------------------------------------------------
MOTH = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="THERMIQUE", MODELISATION="PLAN"))

MATH = DEFI_MATERIAU(THER=_F(RHO_CP=0.0, LAMBDA=54.0))

CMTH = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(TOUT="OUI", MATER=MATH))

CHTH = AFFE_CHAR_THER(
    MODELE=MOTH, TEMP_IMPO=(_F(GROUP_NO="LP9P10", TEMP=100.0), _F(GROUP_NO="LP9P10B", TEMP=-100.0))
)

METH = CALC_MATR_ELEM(MODELE=MOTH, CHARGE=CHTH, CHAM_MATER=CMTH, OPTION="RIGI_THER")

VETH = CALC_VECT_ELEM(CHARGE=CHTH, OPTION="CHAR_THER")

NUTH = NUME_DDL(MATR_RIGI=METH)

KTH = ASSE_MATRICE(MATR_ELEM=METH, NUME_DDL=NUTH)

FTH = ASSE_VECTEUR(VECT_ELEM=VETH, NUME_DDL=NUTH)

KTH = FACTORISER(reuse=KTH, MATR_ASSE=KTH)

TEMP = RESOUDRE(MATR=KTH, CHAM_NO=FTH)

#
# -------------------------------------------------------------------
#                    FIN DU THERMIQUE
# -------------------------------------------------------------------
#

MO = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="C_PLAN"))

MAT = DEFI_MATERIAU(ELAS=_F(E=2.0e11, NU=0.3, RHO=7800.0, ALPHA=1.2e-5))

CHMAT = AFFE_MATERIAU(
    MAILLAGE=MA,
    AFFE=_F(TOUT="OUI", MATER=MAT),
    AFFE_VARC=_F(NOM_VARC="TEMP", TOUT="OUI", CHAM_GD=TEMP, VALE_REF=0.0),
)

CH = AFFE_CHAR_MECA(
    MODELE=MO,
    # TEMP_CALCULEE=TEMP,
    DDL_IMPO=(
        _F(GROUP_NO="LP8P9", DX=0.0),
        _F(GROUP_NO="LP8P9B", DX=0.0),
        _F(GROUP_NO="P11", DY=0.0),
    ),
)

RIGI_ELE = CALC_MATR_ELEM(MODELE=MO, CHAM_MATER=CHMAT, CHARGE=CH, OPTION="RIGI_MECA")

# prise en compte des variables de commande

LIST1 = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=1.0, NOMBRE=1))

VECT_ELE = CALC_VECT_ELEM(OPTION="FORC_VARC", CHAM_MATER=CHMAT, MODELE=MO)

NUMEDDL = NUME_DDL(MATR_RIGI=RIGI_ELE)

RIGIDITE = ASSE_MATRICE(MATR_ELEM=RIGI_ELE, NUME_DDL=NUMEDDL)

FORCE = ASSE_VECTEUR(VECT_ELEM=VECT_ELE, NUME_DDL=NUMEDDL)

RIGIDITE = FACTORISER(reuse=RIGIDITE, MATR_ASSE=RIGIDITE)

DEP = RESOUDRE(MATR=RIGIDITE, CHAM_NO=FORCE)
RESU = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_ELAS",
    AFFE=_F(NOM_CHAM="DEPL", CHAM_GD=DEP, INST=0.0, MODELE=MO, CHAM_MATER=CHMAT),
)

FOND = DEFI_FOND_FISS(
    MAILLAGE=MA,
    SYME="NON",
    FOND_FISS=_F(GROUP_NO=("P0",)),
    LEVRE_SUP=_F(GROUP_MA="LEVRE_SUP"),
    LEVRE_INF=_F(GROUP_MA="LEVRE_INF"),
)


G00 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(CHAM_THETA=CO("cham_theta_no0"), R_INF=3.75e-5, FISSURE=FOND, R_SUP=7.50e-5),
    # ~ EXCIT=_F(CHARGE=CH,),
    OPTION="G_EPSI",
)

GK00 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(FISSURE=FOND, R_INF=3.75e-5, R_SUP=7.50e-5, CHAM_THETA=CO("cham_theta_no1")),
    # ~ EXCIT=_F(CHARGE=CH,),
    OPTION="K",
)

#
#
#


G01 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(R_INF=7.50e-5, FISSURE=FOND, R_SUP=1.125e-4),
    # ~ EXCIT=_F(CHARGE=CH,),
    OPTION="G_EPSI",
)

GK01 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(FISSURE=FOND, R_INF=7.50e-5, R_SUP=1.125e-4),
    # ~ EXCIT=_F(CHARGE=CH,),
    OPTION="K",
)

#
#
#


#
G02 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(R_INF=1.125e-4, FISSURE=FOND, R_SUP=1.500e-4),
    # ~ EXCIT=_F(CHARGE=CH,),
    OPTION="G_EPSI",
)

#
GK02 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(FISSURE=FOND, R_INF=1.125e-4, R_SUP=1.500e-4),
    # ~ EXCIT=_F(CHARGE=CH,),
    OPTION="K",
)

#
#
#


#
G03 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(CHAM_THETA=CO("cham_theta_no3"), R_INF=1.500e-4, FISSURE=FOND, R_SUP=1.875e-4),
    OPTION="G_EPSI",
    # ~ EXCIT=_F(CHARGE=CH,),
)

#
GK03 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(FISSURE=FOND, R_INF=1.500e-4, R_SUP=1.875e-4),
    # ~ EXCIT=_F(CHARGE=CH,),
    OPTION="K",
)

#
#
#


#
G04 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(R_INF=1.875e-4, FISSURE=FOND, R_SUP=2.250e-4),
    OPTION="G_EPSI",
    # ~ EXCIT=_F(CHARGE=CH,),
)

#
GK04 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(FISSURE=FOND, R_INF=1.875e-4, R_SUP=2.250e-4),
    # ~ EXCIT=_F(CHARGE=CH,),
    OPTION="K",
)


#
#
#

#

#
G05 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(FISSURE=FOND, R_INF=2.250e-4, R_SUP=3.000e-4),
    OPTION="G_EPSI",
    # ~ EXCIT=_F(CHARGE=CH,),
)

#
GK05 = CALC_G(
    RESULTAT=RESU,
    THETA=_F(FISSURE=FOND, R_INF=2.250e-4, R_SUP=3.000e-4),
    # ~ EXCIT=_F(CHARGE=CH,),
    OPTION="K",
)

#
#
#

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=2598.60846232,
    VALE_REFE=2496.9000000000001,
    REFERENCE="NON_DEFINI",
    NOM_PARA="G_EPSI",
    TABLE=G00,
)

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=22814029.2814,
    VALE_REFE=2.2347040e7,
    REFERENCE="NON_DEFINI",
    NOM_PARA="K2",
    TABLE=GK00,
)

#

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=2599.14038573,
    VALE_REFE=2496.9000000000001,
    REFERENCE="NON_DEFINI",
    NOM_PARA="G_EPSI",
    TABLE=G01,
)

#

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=22813479.9081,
    VALE_REFE=2.2347040e7,
    REFERENCE="NON_DEFINI",
    NOM_PARA="K2",
    TABLE=GK01,
)

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=2599.25385725,
    VALE_REFE=2496.9000000000001,
    REFERENCE="NON_DEFINI",
    NOM_PARA="G_EPSI",
    TABLE=G02,
)

#

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=22814053.4412,
    VALE_REFE=2.2347040e7,
    REFERENCE="NON_DEFINI",
    NOM_PARA="K2",
    TABLE=GK02,
)

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=2599.38307167,
    VALE_REFE=2496.9000000000001,
    REFERENCE="NON_DEFINI",
    NOM_PARA="G_EPSI",
    TABLE=G03,
)

#

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=22814279.4274,
    VALE_REFE=2.2347040e7,
    REFERENCE="NON_DEFINI",
    NOM_PARA="K2",
    TABLE=GK03,
)

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=2601.30341271,
    VALE_REFE=2496.9000000000001,
    REFERENCE="NON_DEFINI",
    NOM_PARA="G_EPSI",
    TABLE=G04,
)

#

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=22817490.4569,
    VALE_REFE=2.2347040e7,
    REFERENCE="NON_DEFINI",
    NOM_PARA="K2",
    TABLE=GK04,
)

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=2598.59476439,
    VALE_REFE=2496.9000000000001,
    REFERENCE="NON_DEFINI",
    NOM_PARA="G_EPSI",
    TABLE=G05,
)

#

TEST_TABLE(
    PRECISION=0.050000000000000003,
    VALE_CALC=22817560.5436,
    VALE_REFE=2.2347040e7,
    REFERENCE="NON_DEFINI",
    NOM_PARA="K2",
    TABLE=GK05,
)

FIN()
#
