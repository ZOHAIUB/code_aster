# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#
#                         SUR SABLE D'HOSTUN
#          ===============================================


DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="NON"))

# proprietes hydrauliques
poro = 0.425
# porosite
rhol = 1000.0
# masse volumique du fluide
kin = 1.0e-8
# permeabilite intrinsinque
k_w = 1.0e12
# module de compressibilite de l'eau
UNSURK = 1 / k_w
visco = 0.001
dvisco = 0.0
k_int = DEFI_CONSTANTE(VALE=kin)
viscoliq = DEFI_CONSTANTE(VALE=visco)
dviscoli = DEFI_CONSTANTE(VALE=dvisco)
b = 1.0
coef = b * k_w / 3.0

# modules mecaniques [Pa]
K = 516.2e6
G = 238.2e6
# =>
YOUNG = 9.0 * K * G / (3.0 * K + G)
POISSON = (3.0 * K - 2.0 * G) / (6.0 * K + 2.0 * G)

print(">> Young=", YOUNG, " /// nu=", POISSON)

# pression de preconsolidation [en Pa]
PCO = 5.0e4


# *******************************************************************
#
#    MAILLAGE + MODELE
#
# *******************************************************************
MAILLAGE = LIRE_MAILLAGE(FORMAT="MED")

MODELE = AFFE_MODELE(
    MAILLAGE=MAILLAGE,
    AFFE=(_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="3D_HM_SI_DIL"),),
    INFO=1,
)

MAILLAGE = MODI_MAILLAGE(
    reuse=MAILLAGE,
    MAILLAGE=MAILLAGE,
    ORIE_PEAU=_F(
        GROUP_MA_PEAU=("DEVANT", "DROIT", "ARRIERE", "GAUCHE", "BAS", "HAUT", "APPUI", "COTE")
    ),
    INFO=1,
)


# *******************************************************************
#
#                         LISTES D'INSTANTS
#
# *******************************************************************
end = 1.2

TEMPS0 = DEFI_LIST_REEL(DEBUT=-1.0, INTERVALLE=_F(JUSQU_A=0.0, NOMBRE=1))

TEMPS1 = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=20.0, NOMBRE=200),))

TEMPS2 = DEFI_LIST_REEL(
    DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=9.6, NOMBRE=24), _F(JUSQU_A=20.0, NOMBRE=416))
)

DEFLIST1 = DEFI_LIST_INST(
    METHODE="AUTO",
    DEFI_LIST=_F(LIST_INST=TEMPS1, PAS_MINI=0.000001),
    ECHEC=_F(EVENEMENT="ERREUR", ACTION="DECOUPE", SUBD_METHODE="MANUEL", SUBD_PAS=10),
)

DEFLIST2 = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=TEMPS1),
    ECHEC=_F(
        EVENEMENT="ERREUR", ACTION="DECOUPE", SUBD_METHODE="MANUEL", SUBD_PAS=4, SUBD_NIVEAU=10
    ),
)

# *******************************************************************
#
#               DEFI_MATERIAU : SOL MOHR-COULOMB + EAU
#
# *******************************************************************
SOL = DEFI_MATERIAU(
    ELAS=_F(E=YOUNG, NU=POISSON, RHO=rhol, ALPHA=0.0),
    MOHR_COULOMB=_F(PHI=33.0, ANGDIL=27.0, COHESION=1.0e3),
    COMP_THM="LIQU_SATU",
    THM_INIT=_F(PRE1=0.0, PORO=poro),
    THM_DIFFU=_F(RHO=rhol, BIOT_COEF=1.0, PESA_X=0.0, PESA_Y=0.0, PESA_Z=0.0, PERM_IN=k_int),
    THM_LIQU=_F(RHO=rhol, UN_SUR_K=UNSURK, VISC=viscoliq, D_VISC_TEMP=dviscoli),
    SECOND_ELAS=_F(A1=YOUNG),
    NON_LOCAL=_F(PENA_LAGR=1.0e8),
)


CHMAT = AFFE_MATERIAU(MAILLAGE=MAILLAGE, AFFE=(_F(TOUT="OUI", MATER=SOL),))


# ****************************************************************
#
#    CHARGEMENT MECANIQUE : FORCE DE COMPRESSION + DDL IMPOSES
#
# ****************************************************************
CHAR_U2 = AFFE_CHAR_MECA(MODELE=MODELE, PRES_REP=_F(GROUP_MA="APPUI", PRES=1.0))

CHAR_U3 = AFFE_CHAR_MECA(MODELE=MODELE, FACE_IMPO=_F(GROUP_MA="APPUI", DZ=1.0))

CHAR_UD = AFFE_CHAR_MECA(MODELE=MODELE, PRES_REP=_F(GROUP_MA="DROIT", PRES=1.0))

CHAR_UA = AFFE_CHAR_MECA(MODELE=MODELE, PRES_REP=_F(GROUP_MA="ARRIERE", PRES=1.0))

DEPL_1 = AFFE_CHAR_MECA(
    MODELE=MODELE,
    FACE_IMPO=(
        _F(GROUP_MA="BAS", DZ=0.0),
        _F(GROUP_MA="GAUCHE", DX=0.0),
        _F(GROUP_MA="DEVANT", DY=0.0),
    ),
)


# *****************************************************************
#
#             PHASE DE CONSOLIDATION ISOTROPE DRAINEE
#
# *****************************************************************
PRE0 = AFFE_CHAR_CINE(MODELE=MODELE, MECA_IMPO=_F(GROUP_MA="ECHAN", PRE1=0.0))

epsilon = 1.0e-6

COEF0 = DEFI_FONCTION(NOM_PARA="INST", PROL_DROITE="CONSTANT", VALE=(-1.0, 0.0, 0.0, PCO))

COEF00 = DEFI_FONCTION(
    NOM_PARA="INST", PROL_DROITE="CONSTANT", VALE=(-1.0, 0.0, 0.0, PCO * (1.0 + epsilon))
)

# ---- premier chargement isotrope en elastique jusqu'a 50kPa
U0M = STAT_NON_LINE(
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    EXCIT=(
        _F(CHARGE=CHAR_UD, FONC_MULT=COEF0),
        _F(CHARGE=CHAR_UA, FONC_MULT=COEF00),
        _F(CHARGE=CHAR_U2, FONC_MULT=COEF0),
        _F(CHARGE=DEPL_1),
        _F(CHARGE=PRE0),
    ),
    COMPORTEMENT=(
        _F(GROUP_MA="ECHAN", RELATION="KIT_HM", RELATION_KIT=("ELAS", "LIQU_SATU", "HYDR_UTIL")),
    ),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-8, ITER_GLOB_MAXI=5),
    INCREMENT=_F(LIST_INST=TEMPS0, INST_FIN=0.0),
)

SIG0 = CREA_CHAMP(
    INFO=1, TYPE_CHAM="ELGA_SIEF_R", OPERATION="EXTR", RESULTAT=U0M, NOM_CHAM="SIEF_ELGA", INST=0.0
)

COEF2 = DEFI_FONCTION(NOM_PARA="INST", PROL_DROITE="CONSTANT", VALE=(0.0, -PCO, 10.0 * end, -PCO))

COEF3 = DEFI_FONCTION(
    NOM_PARA="INST", PROL_DROITE="CONSTANT", VALE=(0.0, 0.0, 10.0 * end, -0.0001 * end)
)

# ***********************************************************************
#
#                             STAT_NON_LINE
#
# ***********************************************************************
COEF1 = DEFI_FONCTION(NOM_PARA="INST", PROL_DROITE="CONSTANT", VALE=(0.0, PCO, 10.0 * end, PCO))

COEF11 = DEFI_FONCTION(
    NOM_PARA="INST",
    PROL_DROITE="CONSTANT",
    VALE=(0.0, PCO * (1.0 + epsilon), 10.0 * end, PCO * (1.0 + epsilon)),
)

SNL = STAT_NON_LINE(
    MODELE=MODELE,
    INFO=1,
    CHAM_MATER=CHMAT,
    EXCIT=(
        _F(CHARGE=CHAR_UD, FONC_MULT=COEF1),
        _F(CHARGE=CHAR_UA, FONC_MULT=COEF11),
        _F(CHARGE=CHAR_U3, TYPE_CHARGE="DIDI", FONC_MULT=COEF3),
        _F(CHARGE=DEPL_1),
    ),
    ETAT_INIT=_F(SIGM=SIG0),
    COMPORTEMENT=(
        _F(
            GROUP_MA="ECHAN",
            RELATION="KIT_HM",
            RELATION_KIT=("MOHR_COULOMB", "LIQU_SATU", "HYDR_UTIL"),
        ),
    ),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-4, ITER_GLOB_MAXI=4),
    SOLVEUR=_F(METHODE="MUMPS"),
    ARCHIVAGE=_F(LIST_INST=TEMPS2),
    INCREMENT=_F(LIST_INST=DEFLIST2, INST_INIT=0.0, INST_FIN=10.0 * end),
)


# -------------------------
#    TEST_RESU AU POINT C
# -------------------------

SNL = CALC_CHAMP(
    reuse=SNL,
    GROUP_MA="ECHAN",
    CONTRAINTE=("SIGM_ELNO", "SIEF_ELNO"),
    VARI_INTERNE=("VARI_ELNO"),
    DEFORMATION=("EPSI_ELNO"),
    RESULTAT=SNL,
)


SNL = CALC_CHAMP(
    reuse=SNL,
    GROUP_MA="ECHAN",
    CONTRAINTE=("SIGM_NOEU", "SIEF_NOEU"),
    VARI_INTERNE="VARI_NOEU",
    DEFORMATION="EPSI_NOEU",
    RESULTAT=SNL,
)

SNL_SIG = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="SIEF_NOEU",
        GROUP_NO="C",
        RESULTAT=SNL,
        NOM_CHAM="SIEF_NOEU",
        NOM_CMP=("SIXX", "SIZZ", "SIPXX"),
        OPERATION="EXTRACTION",
    )
)

SNL_VARI = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="VARI_NOEU",
        GROUP_NO="C",
        RESULTAT=SNL,
        NOM_CHAM="VARI_NOEU",
        NOM_CMP=("V1", "V2", "V3"),
        OPERATION="EXTRACTION",
    )
)


SNL_EPZZ = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="EPSI_NOEU",
        GROUP_NO="C",
        RESULTAT=SNL,
        NOM_CHAM="EPSI_NOEU",
        NOM_CMP=("EPZZ",),
        OPERATION="EXTRACTION",
    )
)

TAB_SIG = CALC_TABLE(
    reuse=SNL_SIG, TABLE=SNL_SIG, ACTION=_F(OPERATION="COMB", TABLE=SNL_EPZZ, NOM_PARA="INST")
)

TAB_VARI = CALC_TABLE(
    reuse=SNL_VARI, TABLE=SNL_VARI, ACTION=_F(OPERATION="COMB", TABLE=SNL_EPZZ, NOM_PARA="INST")
)


IMPR_TABLE(TABLE=SNL_SIG)
IMPR_TABLE(TABLE=SNL_VARI)

fmt = "E12.5"

# TAB_SIG = CALC_TABLE(
#    TABLE=SNL_SIG,
#    ACTION=_F(
#        OPERATION="COMB", TABLE=SPM_SIG, RESTREINT="OUI", FORMAT_R=fmt, NOM_PARA=("EPZZ", "EPZZ")
#    ),
# )

# TAB_VARI = CALC_TABLE(
#    TABLE=SNL_VARI,
#    ACTION=_F(
#        OPERATION="COMB", TABLE=SPM_VARI, RESTREINT="OUI", FORMAT_R=fmt, NOM_PARA=("EPZZ", "EPZZ")
#    ),
# )


# IMPR_TABLE(TABLE=TAB_SIG)
# IMPR_TABLE(TABLE=TAB_VARI)


# Test des valeurs SIXX, SIPXX, V1 et V2 :
# ------------------------------------------

TEST_TABLE(
    TABLE=TAB_SIG,
    FILTRE=_F(NOM_PARA="EPZZ", VALE=-1.2e-04),
    NOM_PARA="SIXX",
    VALE_REFE=-30777.314632,
    REFERENCE="AUTRE_ASTER",
    PRECISION=4.0e-4,
    VALE_CALC=-30767.350089552467,
    TOLE_MACHINE=4.0e-4,
)

TEST_TABLE(
    TABLE=TAB_SIG,
    FILTRE=_F(NOM_PARA="EPZZ", VALE=-1.2e-04),
    NOM_PARA="SIPXX",
    VALE_REFE=-19226.5841711,
    REFERENCE="AUTRE_ASTER",
    PRECISION=5.0e-4,
    VALE_CALC=-19227.2681061,
    TOLE_MACHINE=4.0e-4,
)

TEST_TABLE(
    TABLE=TAB_VARI,
    FILTRE=_F(NOM_PARA="EPZZ", VALE=-1.2e-04),
    NOM_PARA="V1",
    VALE_REFE=1.2623784436e-05,
    REFERENCE="AUTRE_ASTER",
    VALE_CALC=1.26582816299e-05,
    CRITERE="ABSOLU",
)

TEST_TABLE(
    TABLE=TAB_VARI,
    FILTRE=_F(NOM_PARA="EPZZ", VALE=-1.2e-04),
    NOM_PARA="V2",
    VALE_REFE=2.27005791191e-05,
    REFERENCE="AUTRE_ASTER",
    VALE_CALC=2.47405179054736e-05,
    CRITERE="ABSOLU",
)

FIN()
