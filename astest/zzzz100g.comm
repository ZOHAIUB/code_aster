# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

from math import sqrt, exp
import numpy as np

from code_aster.Commands import *
from code_aster import CA


DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

from zzzz100g import MACRO_TEST

test = CA.TestCase()

form = MACRO_TEST(VALE=3.0)

TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=15.0,
        VALE_REFE=15.0,
        VALE_PARA=2.5,
        REFERENCE="ANALYTIQUE",
        NOM_PARA="X",
        FONCTION=form,
    )
)

inter = CALC_FONC_INTERP(FONCTION=form, VALE_PARA=(2.0, 2.5, 3.0))

TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=15.0,
        VALE_REFE=15.0,
        VALE_PARA=2.5,
        REFERENCE="ANALYTIQUE",
        NOM_PARA="X",
        FONCTION=inter,
    )
)

# ----------- DATA ---------------
pseed = 10000000
xmin = -200
xmax = 200.0
ymin = -100
ymax = 100.0
Lcx = 40.0
Lcy = 40.0
beta_E = 0.2
cov_E = sqrt(exp(beta_E**2) - 1.0)
Esol = 18885000000
Am_E = Esol
nbmod = 60
LX = DEFI_LIST_REEL(DEBUT=xmin, INTERVALLE=_F(JUSQU_A=xmax, PAS=0.5))
LY = DEFI_LIST_REEL(DEBUT=ymin, INTERVALLE=_F(JUSQU_A=ymax, PAS=0.5))

# ----------- FONCTION 1D ---------------

E_vari1 = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_X=120.0,
    X_MINI=xmin,
    X_MAXI=xmax,
    NB_TERM_X=nbmod,
)

TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=1.625092549018e10,
        VALE_REFE=1.625092549018e10,
        VALE_PARA=(0.0),
        REFERENCE="SOURCE_EXTERNE",
        NOM_PARA=("X"),
        FONCTION=E_vari1,
    )
)


F_vari1 = CALC_FONC_INTERP(FONCTION=E_vari1, NOM_PARA="X", LIST_PARA=LX)


X, FM = F_vari1.Valeurs()
moy = np.mean(FM)
med = np.median(FM)
bet = np.std(np.log(FM))
print("Y1D: mean median E vari", moy, med, bet)
# Y1D: mean median log std E_vari 19500425931.2 19297681926.4 0.139115524212

E_vari0 = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_Y=20.0,
    Y_MINI=ymin,
    Y_MAXI=ymax,
    NB_TERM_Y=100,
)

TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=1.485306854684e10,
        VALE_REFE=1.485306854684e10,
        VALE_PARA=(0.0),
        REFERENCE="SOURCE_EXTERNE",
        NOM_PARA=("Y"),
        FONCTION=E_vari0,
    )
)

F_vari0 = CALC_FONC_INTERP(FONCTION=E_vari0, NOM_PARA="Y", LIST_PARA=LY)


X, FM = F_vari0.Valeurs()
moy = np.mean(FM)
med = np.median(FM)
bet = np.std(np.log(FM))
print("Y1D 10m: mean median E vari", moy, med, bet)
# Y1D 0: mean median log std E_vari 19062771857.1 18838570323.7 0.19021264557


# -------------- FONCTION 2D------------

E_vari2 = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_X=Lcx,
    LONG_CORR_Y=Lcx,
    X_MINI=xmin,
    X_MAXI=xmax,
    NB_TERM_X=60,
    Y_MINI=ymin,
    Y_MAXI=ymax,
    NB_TERM_Y=60,
)


TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=1.591971870708e10,
        VALE_REFE=1.591971870708e10,
        VALE_PARA=(2.5, 2.6),
        REFERENCE="SOURCE_EXTERNE",
        NOM_PARA=("X", "Y"),
        FONCTION=E_vari2,
    )
)


F_vari2 = CALC_FONC_INTERP(
    FONCTION=E_vari2,
    VALE_PARA_FONC=100.0,
    NOM_PARA_FONC=("Y"),
    NOM_PARA="X",
    #                        VALE_PARA = 0.0,
    LIST_PARA=LX,
)


X, FM = F_vari2.Valeurs()
FM = [x[1][0] for x in FM]

moy = np.mean(FM)
med = np.median(FM)
bet = np.std(np.log(FM))
print("X2D: mean median E vari", moy, med, bet)
# X2D: mean median log std E vari 18148893896.2 18046666092.3 0.176371239856

# check for extrapolations controls
# x in [-200, 200]
# y in [100, 100]

with test.assertRaisesRegex(CA.AsterError, "FONCT0_29"):
    F_vari2(xmin - 1.0, ymax)

with test.assertRaisesRegex(CA.AsterError, "FONCT0_29"):
    F_vari2(xmax + 1.0, ymax)

with test.assertRaisesRegex(CA.AsterError, "FONCT0_29"):
    F_vari2(0.0, ymax + 1.0)

with test.assertRaisesRegex(CA.AsterError, "FONCT0_29"):
    F_vari2(0.0, ymax - 1.0)

# -------------- FONCTION 2D avec selection de N termes les plus energ√©tiques------------

lc = 0.1
nbterm = 7000
prec = 0.95
E_vari2a = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_X=lc,
    LONG_CORR_Y=lc,
    X_MINI=0.0,
    X_MAXI=1.0,
    NB_TERM_X=1000,
    Y_MINI=0.0,
    Y_MAXI=1.0,
    NB_TERM_Y=1000,
)

TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=2.062122537854e10,
        VALE_REFE=2.062122537854e10,
        VALE_PARA=(0.5, 0.6),
        REFERENCE="SOURCE_EXTERNE",
        NOM_PARA=("X", "Y"),
        FONCTION=E_vari2a,
    )
)


E_vari2b = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_X=lc,
    LONG_CORR_Y=lc,
    X_MINI=0.0,
    X_MAXI=1.0,
    NB_TERM_X=1000,
    Y_MINI=0.0,
    Y_MAXI=1.0,
    NB_TERM_Y=1000,
    NB_TERM=nbterm,
)

TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=2.079711727101e10,
        VALE_REFE=2.062122537854e10,
        VALE_PARA=(0.5, 0.6),
        PRECISION=0.01,
        REFERENCE="AUTRE_ASTER",
        NOM_PARA=("X", "Y"),
        FONCTION=E_vari2b,
    )
)


E_vari2c = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_X=lc,
    LONG_CORR_Y=lc,
    X_MINI=0.0,
    X_MAXI=1.0,
    NB_TERM_X=1000,
    Y_MINI=0.0,
    Y_MAXI=1.0,
    NB_TERM_Y=1000,
    PRECISION=prec,
)


TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=2.054604391594e10,
        VALE_REFE=2.062122537854e10,
        VALE_PARA=(0.5, 0.6),
        PRECISION=0.01,
        REFERENCE="AUTRE_ASTER",
        NOM_PARA=("X", "Y"),
        FONCTION=E_vari2c,
    )
)

nbterm2 = int(np.sqrt(nbterm))
E_vari2d = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_X=lc,
    LONG_CORR_Y=lc,
    X_MINI=0.0,
    X_MAXI=1.0,
    NB_TERM_X=nbterm2,
    Y_MINI=0.0,
    Y_MAXI=1.0,
    NB_TERM_Y=nbterm2,
)


TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=1.498236241959e10, VALE_PARA=(0.5, 0.6), NOM_PARA=("X", "Y"), FONCTION=E_vari2d
    )
)


# FONC_E  = DEFI_FONCTION ( NOM_RESU    = 'ACCE',  NOM_PARA    = 'INST',
#            PROL_GAUCHE = 'CONSTANT',  PROL_DROITE  = 'CONSTANT',
#            ABSCISSE        = X,
#            ORDONNEE     = FM)

# -------------- FONCTION 3D------------
Lcz = 0.1 * Lcx
Lcy = 1.5 * Lcx
E_vari3d = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_X=0.3,
    LONG_CORR_Y=0.6,
    LONG_CORR_Z=0.2,
    X_MINI=0.0,
    X_MAXI=1.0,
    NB_TERM_X=60,
    Y_MINI=0.0,
    Y_MAXI=1.0,
    NB_TERM_Y=50,
    Z_MINI=0.0,
    Z_MAXI=1.0,
    NB_TERM_Z=30,
)

E_vari3_1 = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_X=Lcx,
    LONG_CORR_Y=Lcy,
    LONG_CORR_Z=Lcz,
    X_MINI=xmin,
    X_MAXI=xmax,
    NB_TERM_X=20,
    Y_MINI=ymin,
    Y_MAXI=ymax,
    NB_TERM_Y=30,
    Z_MINI=0.0,
    Z_MAXI=50.0,
    NB_TERM_Z=35,
    NB_TERM=20,
)

E_vari3_2 = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_X=Lcx,
    LONG_CORR_Y=Lcy,
    LONG_CORR_Z=Lcz,
    X_MINI=xmin,
    X_MAXI=xmax,
    NB_TERM_X=30,
    Y_MINI=ymin,
    Y_MAXI=ymax,
    NB_TERM_Y=20,
    Z_MINI=0.0,
    Z_MAXI=50.0,
    NB_TERM_Z=30,
    PRECISION=0.8,
)

e0 = E_vari3d(0.0, 0.0, 0.0)
e1 = E_vari3d(0.5, 0.0, 0.0)
e2 = E_vari3d(0.75, 0.0, 0.0)
r1 = E_vari3_1(0.0, 0.0, 15.0)
r2 = E_vari3_2(0.0, 0.0, 15.0)

F_Emodul = CREA_TABLE(
    LISTE=(
        _F(LISTE_R=(e0, e1, e2, r1, r2), PARA="Modulus"),
        _F(LISTE_K=("E1", "E2", "E3", "R1", "R2"), PARA="NOEUD"),
    )
)

TEST_TABLE(
    TABLE=F_Emodul,
    NOM_PARA="Modulus",
    FILTRE=(_F(NOM_PARA="NOEUD", VALE_K="E1"),),
    VALE_CALC=17135742878.86007,
)

TEST_TABLE(
    TABLE=F_Emodul,
    NOM_PARA="Modulus",
    FILTRE=(_F(NOM_PARA="NOEUD", VALE_K="E2"),),
    VALE_CALC=20588359826.35014,
)


TEST_TABLE(
    TABLE=F_Emodul,
    NOM_PARA="Modulus",
    FILTRE=(_F(NOM_PARA="NOEUD", VALE_K="E3"),),
    VALE_CALC=14649365172.430305,
)

TEST_TABLE(
    TABLE=F_Emodul,
    NOM_PARA="Modulus",
    FILTRE=(_F(NOM_PARA="NOEUD", VALE_K="R1"),),
    VALE_CALC=19915474789.396393,
)


TEST_TABLE(
    TABLE=F_Emodul,
    NOM_PARA="Modulus",
    FILTRE=(_F(NOM_PARA="NOEUD", VALE_K="R2"),),
    VALE_CALC=19674773374.33565,
)


# ======================================================================
# Exemple de visualisation du champ 2D
# ======================================================================
E_vari = DEFI_PROP_ALEA(
    INIT_ALEA=pseed,
    MEDIANE=Am_E,
    COEF_VARI=cov_E,
    LONG_CORR_X=60.0,
    LONG_CORR_Y=30.0,
    X_MINI=xmin,
    X_MAXI=xmax,
    NB_TERM_X=60,
    Y_MINI=ymin,
    Y_MAXI=ymax,
    NB_TERM_Y=50,
)

mail = LIRE_MAILLAGE(FORMAT="MED")


mail = MODI_MAILLAGE(
    reuse=mail,
    MAILLAGE=mail,
    ORIE_PEAU=_F(GROUP_MA_PEAU=("L_Gauche", "L_Droite", "Bottom"), GROUP_MA_INTERNE="Surface"),
)

MODELE = AFFE_MODELE(
    MAILLAGE=mail,
    AFFE=(
        _F(GROUP_MA=("Surface",), PHENOMENE="MECANIQUE", MODELISATION="D_PLAN"),
        _F(
            GROUP_MA=("L_Gauche", "L_Droite", "Bottom"),
            PHENOMENE="MECANIQUE",
            MODELISATION="D_PLAN_ABSO",
        ),
    ),
)


F_2 = CREA_CHAMP(
    TYPE_CHAM="NOEU_NEUT_F",
    OPERATION="AFFE",
    MODELE=MODELE,
    AFFE=_F(VALE_F=(E_vari,), NOM_CMP=("X1",), TOUT="OUI"),
    INFO=1,
)

F_3 = CREA_CHAMP(
    TYPE_CHAM="NOEU_GEOM_R", OPERATION="EXTR", MAILLAGE=mail, NOM_CHAM="GEOMETRIE", INFO=1
)

Modulus = CREA_CHAMP(
    TYPE_CHAM="NOEU_NEUT_R", OPERATION="EVAL", CHAM_F=F_2, CHAM_PARA=(F_3,), INFO=1
)

"""
IMPR_RESU(FORMAT='MED',
           UNITE = 81,
           RESU=(  _F( NOM_CHAM_MED = 'E_modulus',
                      CHAM_GD = Modulus, ),
                        ),
                 )

"""

test.printSummary()

FIN()
