# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# MODELISATION 'MECANIQUE' 2D_FLUIDE AVEC QUAD8 ET SEG3
#
# VALIDATION INDEPENDANTE PAR LMS_NT (J.P.ROSSION)
#
DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))


#
MA = LIRE_MAILLAGE(FORMAT="IDEAS", UNITE=19)

MO = AFFE_MODELE(
    MAILLAGE=MA,
    AFFE=(
        _F(TOUT="OUI", PHENOMENE="ACOUSTIQUE", MODELISATION="PLAN"),
        _F(GROUP_MA=("impe", "velo"), PHENOMENE="ACOUSTIQUE", MODELISATION="PLAN_ABSO"),
    ),
)

#
# PROPRIETES MECANIQUES
#
AIR = DEFI_MATERIAU(FLUIDE=_F(RHO=1.2, CELE_R=340.0))
AIR2 = DEFI_MATERIAU(FLUIDE=_F(RHO=1.2, CELE_R=340.0))
AIR3 = DEFI_MATERIAU(FLUIDE=_F(RHO=1.2, CELE_R=340.0, COEF_AMOR=0.42045454545454547))

CHM = AFFE_MATERIAU(
    MAILLAGE=MA,
    AFFE=(
        _F(TOUT="OUI", MATER=AIR),
        _F(GROUP_MA="impe", MATER=AIR2),
        _F(GROUP_MA="velo", MATER=AIR3),
    ),
)

#
# CONDITIONS AUX LIMITES
#
VITES = AFFE_CHAR_ACOU(MODELE=MO, VITE_FACE=_F(GROUP_MA="velo", VNOR=-1.0))

#
# ASSEMBLAGE DES MATRICES
#

ASSEMBLAGE(
    MODELE=MO,
    CHAM_MATER=CHM,
    NUME_DDL=CO("NDDL"),
    MATR_ASSE=(
        _F(MATRICE=CO("MATA"), OPTION="AMOR_ACOU", VNOR=-1.0),
        _F(MATRICE=CO("MATK"), OPTION="RIGI_ACOU"),
        _F(MATRICE=CO("MATM"), OPTION="MASS_ACOU"),
    ),
    VECT_ASSE=_F(VECTEUR=CO("VECAS"), OPTION="CHAR_ACOU"),
    CHARGE=(VITES),
    INFO=2,
)

#
#  REPONSE HARMONIQUE
#
HARMO = DYNA_VIBRA(
    TYPE_CALCUL="HARM",
    BASE_CALCUL="PHYS",
    MATR_MASS=MATM,
    MATR_RIGI=MATK,
    MATR_AMOR=MATA,
    FREQ=500.0,
    EXCIT=_F(VECT_ASSE=VECAS, COEF_MULT=-1.0, PHAS_DEG=90.0, PUIS_PULS=1),
)

TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            VALE_CALC_C=-289.77126888785 + 7.7618801172221e-03j,
            VALE_REFE_C=-289.77 + 0.0j,
            REFERENCE="ANALYTIQUE",
            RESULTAT=HARMO,
            NOM_CHAM="PRES",
            GROUP_NO="N33",
            NOM_CMP="PRES",
        ),
        _F(
            NUME_ORDRE=1,
            VALE_CALC_C=-289.77126944227 + 7.7618654468389e-03j,
            VALE_REFE_C=-289.77 + 0.0j,
            REFERENCE="ANALYTIQUE",
            RESULTAT=HARMO,
            NOM_CHAM="PRES",
            GROUP_NO="N3",
            NOM_CMP="PRES",
        ),
        _F(
            NUME_ORDRE=1,
            VALE_CALC_C=284.78961779319 - 53.505696059775j,
            VALE_REFE_C=284.14 - 53.246j,
            REFERENCE="ANALYTIQUE",
            PRECISION=3.0e-3,
            RESULTAT=HARMO,
            NOM_CHAM="PRES",
            GROUP_NO="N4",
            NOM_CMP="PRES",
        ),
        _F(
            NUME_ORDRE=1,
            VALE_CALC_C=284.78962351866 - 53.505698422958j,
            VALE_REFE_C=284.14 - 53.246j,
            REFERENCE="ANALYTIQUE",
            PRECISION=3.0e-3,
            RESULTAT=HARMO,
            NOM_CHAM="PRES",
            GROUP_NO="N34",
            NOM_CMP="PRES",
        ),
    )
)


FIN()
#
