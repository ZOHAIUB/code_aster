# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

########################################################################
#          TEST DE VERIFICATION EN PLASTICITE INCOMPRESSIBLE           #
#                       MEMBRANE DE COOK                               #
########################################################################

import os


from code_aster.Commands import *

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))


mesh = LIRE_MAILLAGE(FORMAT="MED", PARTITIONNEUR="PTSCOTCH")

mesh = MODI_MAILLAGE(reuse=mesh, MAILLAGE=mesh, ORIE_PEAU=_F(GROUP_MA_PEAU=("Encast", "load")))

mesh = DEFI_GROUP(reuse=mesh, MAILLAGE=mesh, CREA_GROUP_MA=_F(NOM="TOUT", TOUT="OUI"))

model = AFFE_MODELE(
    AFFE=_F(MODELISATION=("D_PLAN_INCO_UPG",), PHENOMENE="MECANIQUE", TOUT="OUI"), MAILLAGE=mesh
)

mater = DEFI_MATERIAU(ECRO_LINE=_F(D_SIGM_EPSI=0.13474, SY=0.243), ELAS=_F(E=70.0, NU=0.4999))

fieldmat = AFFE_MATERIAU(AFFE=_F(MATER=(mater,), TOUT="OUI"), MAILLAGE=mesh, MODELE=model)

rampe = DEFI_FONCTION(
    NOM_PARA="INST", VALE=(0.0, 0.0, 1.0, 1.0), PROL_DROITE="LINEAIRE", PROL_GAUCHE="EXCLU"
)

listr = DEFI_LIST_REEL(
    DEBUT=0.0,
    INTERVALLE=(_F(JUSQU_A=0.3, NOMBRE=1), _F(JUSQU_A=0.65, NOMBRE=4), _F(JUSQU_A=1.0, NOMBRE=4)),
)

times = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=listr), ECHEC=_F(ACTION="DECOUPE", EVENEMENT="ERREUR", SUBD_NIVEAU=3)
)

depl = AFFE_CHAR_CINE(MECA_IMPO=_F(DX=0.0, DY=0.0, GROUP_MA=("Encast",)), MODELE=model, INFO=1)

load = AFFE_CHAR_MECA(FORCE_CONTOUR=_F(FY=0.1125, GROUP_MA=("load",)), MODELE=model)

resnonl = MECA_NON_LINE(
    CHAM_MATER=fieldmat,
    COMPORTEMENT=_F(DEFORMATION="PETIT", RELATION="VMIS_ISOT_LINE"),
    CONVERGENCE=_F(ITER_GLOB_MAXI=10),
    EXCIT=(
        _F(CHARGE=depl, TYPE_CHARGE="FIXE_CSTE"),
        _F(CHARGE=load, FONC_MULT=rampe, TYPE_CHARGE="FIXE_CSTE"),
    ),
    INCREMENT=_F(LIST_INST=times, INST_FIN=0.65),
    RECH_LINEAIRE=_F(),
    MODELE=model,
    NEWTON=_F(MATRICE="TANGENTE", PREDICTION="TANGENTE", REAC_ITER=6),
    SOLVEUR=_F(METHODE="MUMPS"),
    INFO=1,
)

# Check IMPR_RESU / LIRE_RESU
IMPR_RESU(FORMAT="MED", UNITE=81, RESU=_F(RESULTAT=resnonl))

resnonl = LIRE_RESU(
    MODELE=model,
    FORMAT="MED",
    UNITE=81,
    TYPE_RESU="EVOL_NOLI",
    COMPORTEMENT=_F(DEFORMATION="PETIT", RELATION="VMIS_ISOT_LINE", TOUT="OUI"),
    CHAM_MATER=fieldmat,
    EXCIT=(
        _F(CHARGE=depl, TYPE_CHARGE="FIXE_CSTE"),
        _F(CHARGE=load, FONC_MULT=rampe, TYPE_CHARGE="FIXE_CSTE"),
    ),
    FORMAT_MED=(
        _F(NOM_RESU="resnonl", NOM_CHAM="DEPL"),
        _F(NOM_RESU="resnonl", NOM_CHAM="SIEF_ELGA"),
        _F(NOM_RESU="resnonl", NOM_CHAM="VARI_ELGA"),
    ),
    TOUT_ORDRE="OUI",
)

# Check ETAT_INIT
resnonl = STAT_NON_LINE(
    reuse=resnonl,
    RESULTAT=resnonl,
    ETAT_INIT=_F(EVOL_NOLI=resnonl, INST=0.65),
    CHAM_MATER=fieldmat,
    COMPORTEMENT=_F(DEFORMATION="PETIT", RELATION="VMIS_ISOT_LINE", TOUT="OUI"),
    CONVERGENCE=_F(ITER_GLOB_MAXI=10, RESI_GLOB_RELA=1e-6),
    EXCIT=(
        _F(CHARGE=depl, TYPE_CHARGE="FIXE_CSTE"),
        _F(CHARGE=load, FONC_MULT=rampe, TYPE_CHARGE="FIXE_CSTE"),
    ),
    INCREMENT=_F(LIST_INST=times, INST_INIT=0.65, INST_FIN=0.825),
    MODELE=model,
    NEWTON=_F(MATRICE="TANGENTE", PREDICTION="TANGENTE", REAC_ITER=1),
    SOLVEUR=_F(METHODE="PETSC"),
    INFO=1,
)

resnonl = STAT_NON_LINE(
    reuse=resnonl,
    RESULTAT=resnonl,
    ETAT_INIT=_F(EVOL_NOLI=resnonl, NUME_ORDRE=7),
    CHAM_MATER=fieldmat,
    COMPORTEMENT=_F(DEFORMATION="PETIT", RELATION="VMIS_ISOT_LINE", TOUT="OUI"),
    CONVERGENCE=_F(ITER_GLOB_MAXI=10, RESI_GLOB_RELA=1e-6),
    EXCIT=(
        _F(CHARGE=depl, TYPE_CHARGE="FIXE_CSTE"),
        _F(CHARGE=load, FONC_MULT=rampe, TYPE_CHARGE="FIXE_CSTE"),
    ),
    INCREMENT=_F(LIST_INST=times, INST_INIT=0.825),
    MODELE=model,
    NEWTON=_F(MATRICE="TANGENTE", PREDICTION="TANGENTE", REAC_ITER=1),
    SOLVEUR=_F(METHODE="PETSC"),
    INFO=1,
)

resnonl = CALC_CHAMP(
    reuse=resnonl, CHAM_MATER=fieldmat, CRITERES=("SIEQ_NOEU",), MODELE=model, RESULTAT=resnonl
)

# Check IMPR_RESU / LIRE_RESU
IMPR_RESU(
    FORMAT="MED",
    UNITE=80,
    RESU=_F(RESULTAT=resnonl, GROUP_MA=("TOUT",), NOM_CHAM=("DEPL", "SIEQ_NOEU")),
)

DEPL = LIRE_RESU(
    TYPE_RESU="EVOL_NOLI",
    FORMAT="MED",
    MODELE=model,
    TOUT_ORDRE="OUI",
    UNITE=80,
    FORMAT_MED=_F(NOM_RESU="resnonl", NOM_CHAM=("DEPL",)),
)

SIEQ = LIRE_RESU(
    TYPE_RESU="EVOL_NOLI",
    FORMAT="MED",
    MODELE=model,
    TOUT_ORDRE="OUI",
    UNITE=80,
    FORMAT_MED=_F(NOM_RESU="resnonl", NOM_CHAM=("SIEQ_NOEU",)),
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("A",),
        REFERENCE="AUTRE_ASTER",
        RESULTAT=DEPL,
        NOM_CHAM="DEPL",
        NOM_CMP="DY",
        VALE_CALC=2.24084161927,
        VALE_REFE=2.13651,
        CRITERE="RELATIF",
        PRECISION=5.0e-2,
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("A",),
        REFERENCE="AUTRE_ASTER",
        RESULTAT=DEPL,
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        VALE_CALC=-1.69640391995,
        VALE_REFE=-1.61818,
        CRITERE="RELATIF",
        PRECISION=5.0e-2,
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("A",),
        RESULTAT=SIEQ,
        NOM_CHAM="SIEQ_NOEU",
        NOM_CMP="TRSIG",
        VALE_CALC=-0.122497874539,
        CRITERE="RELATIF",
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("C",),
        RESULTAT=DEPL,
        NOM_CHAM="DEPL",
        NOM_CMP="DY",
        VALE_CALC=0.367541131815,
        CRITERE="RELATIF",
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("C",),
        RESULTAT=DEPL,
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        VALE_CALC=-0.0249341812012,
        CRITERE="RELATIF",
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("C",),
        RESULTAT=SIEQ,
        NOM_CHAM="SIEQ_NOEU",
        NOM_CMP="TRSIG",
        VALE_CALC=0.415488296153,
        CRITERE="RELATIF",
    )
)

FIN()
