# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# CAS TEST  SSNP502B
# MODELE   : METHODE DE PENALISATION POUR LE FROTTEMENT
# MAILLAGE : QUA4
#
# UNITES   : NEWTON , CENTIMETRE , SECONDE (N,CM,S)
#
from code_aster.MacroCommands.defi_cont import DEFI_CONT

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

MA = LIRE_MAILLAGE(FORMAT="MED")

MA = DEFI_GROUP(
    reuse=MA,
    MAILLAGE=MA,
    CREA_GROUP_NO=(
        _F(TOUT_GROUP_MA="OUI"),
        _F(OPTION="NOEUD_ORDO", NOM="LRESU", GROUP_MA="LESC", GROUP_NO_ORIG="A", GROUP_NO_EXTR="D"),
    ),
)


# ----- GRANDEUR PHYSIQUE ------

E = 407
POLTH = DEFI_MATERIAU(ELAS=_F(E=E, NU=0.0), ECRO_LINE=_F(D_SIGM_EPSI=1.0, SY=1e15))

ACIER = DEFI_MATERIAU(
    ELAS=_F(E=20700000, NU=0.29999999999999999), ECRO_LINE=_F(D_SIGM_EPSI=1.0, SY=1e15)
)

# -----   MODELE ----------------

MO = AFFE_MODELE(
    MAILLAGE=MA,
    AFFE=_F(GROUP_MA=("ANNEAU", "PLAQUE"), PHENOMENE="MECANIQUE", MODELISATION="C_PLAN"),
)

MA = MODI_MAILLAGE(reuse=MA, MAILLAGE=MA, ORIE_PEAU=_F(GROUP_MA_PEAU=("LMAI", "LESC")), INFO=2)


CHMAT = AFFE_MATERIAU(
    MAILLAGE=MA, AFFE=(_F(GROUP_MA="PLAQUE", MATER=ACIER), _F(GROUP_MA="ANNEAU", MATER=POLTH))
)

# ------ CONDITIONS AUX LIMITES -----------------

CL = AFFE_CHAR_MECA(
    MODELE=MO,
    DDL_IMPO=(
        _F(GROUP_NO="PLAQUE", DX=0.0),
        _F(GROUP_NO="LCD", DY=0.0),
        _F(GROUP_NO="LAB", DX=0.0),
    ),
    # LIAISON_DDL=_F(GROUP_NO=("A", "P1"), DDL=("DY", "DY"), COEF_MULT=(1.0, -1.0), COEF_IMPO=0.0),
)

DEPL = AFFE_CHAR_MECA(MODELE=MO, DDL_IMPO=_F(GROUP_NO="PLAQUE", DY=-2.225))

coef = E / 100
CON = DEFI_CONT(
    MODELE=MO,
    ZONE=_F(
        GROUP_MA_MAIT="LMAI",
        GROUP_MA_ESCL="LESC",
        FROTTEMENT="OUI",
        TYPE_FROT="COULOMB",
        # SANS_GROUP_NO=("A", "P1"),
        COULOMB=0.4,
        COEF_CONT=coef,
    ),
)


# --------- DEFINITION DES FONCTIONS -----------------

RAMPE = DEFI_FONCTION(NOM_PARA="INST", VALE=(0.0, 0.0, 4.0, 1.0), INTERPOL="LIN")

LINST = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=4.0, NOMBRE=32))

# -------- CALCUL STATIQUE --------------------------

RESU = MECA_NON_LINE(
    MODELE=MO,
    CHAM_MATER=CHMAT,
    EXCIT=(_F(CHARGE=CL), _F(CHARGE=DEPL, FONC_MULT=RAMPE)),
    CONTACT=_F(DEFINITION=CON, ALGO_RESO_GEOM="NEWTON"),
    COMPORTEMENT=_F(RELATION="ELAS", DEFORMATION="GDEF_LOG"),
    INCREMENT=_F(LIST_INST=LINST, INST_FIN=4),
    NEWTON=_F(PREDICTION="TANGENTE", MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-6, ITER_GLOB_MAXI=15),
)

IMPR_RESU(FORMAT="MED", UNITE=80, RESU=_F(RESULTAT=RESU, NOM_CHAM="DEPL", NOM_CMP=("DX", "DY")))

# ------- POST TRAITEMENT -----------------------

RESU = CALC_CHAMP(reuse=RESU, CONTRAINTE=("SIGM_ELNO"), RESULTAT=RESU)

RESU = CALC_CHAMP(reuse=RESU, RESULTAT=RESU, FORCE="REAC_NODA", CONTRAINTE="SIGM_NOEU")

TAB_REAC = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="MESSAGE",
        GROUP_NO="LRESU",
        RESULTAT=RESU,
        NOM_CHAM="REAC_NODA",
        RESULTANTE="DY",
        OPERATION="EXTRACTION",
    )
)


TAB_PRES = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="MESSAGE",
        GROUP_NO="LRESU",
        RESULTAT=RESU,
        NOM_CHAM="SIGM_NOEU",
        INST=4.0,
        NOM_CMP=("SIYY", "SIXY"),
        OPERATION="EXTRACTION",
    )
)


# TAB_CONT = POST_RELEVE_T(
#     ACTION=_F(
#         INTITULE="MESSAGE",
#         GROUP_NO="LRESU",
#         RESULTAT=RESU,
#         NOM_CHAM="CONT_NOEU",
#         INST=4.0,
#         NOM_CMP=("CONT"),
#         OPERATION="EXTRACTION",
#     )
# )


# ------- TEST DES RESULTATS --------------
# TEST REFERENCE

TEST_TABLE(
    REFERENCE="SOURCE_EXTERNE",
    PRECISION=0.12,
    VALE_CALC=-8.919170458106112,
    VALE_REFE=-8.0083311249999998,
    NOM_PARA="DY",
    TABLE=TAB_REAC,
    FILTRE=_F(NOM_PARA="INST", VALE=1.0),
)

TEST_TABLE(
    REFERENCE="SOURCE_EXTERNE",
    PRECISION=0.08,
    VALE_CALC=-17.14687016822016,
    VALE_REFE=-16.016662499999999,
    NOM_PARA="DY",
    TABLE=TAB_REAC,
    FILTRE=_F(NOM_PARA="INST", VALE=2.0),
)

TEST_TABLE(
    REFERENCE="SOURCE_EXTERNE",
    PRECISION=0.05,
    VALE_CALC=-25.17894060328452,
    VALE_REFE=-24.02499375,
    NOM_PARA="DY",
    TABLE=TAB_REAC,
    FILTRE=_F(NOM_PARA="INST", VALE=3.0),
)

TEST_TABLE(
    REFERENCE="SOURCE_EXTERNE",
    PRECISION=0.09,
    VALE_CALC=-34.73104462863721,
    VALE_REFE=-32.033324999999998,
    NOM_PARA="DY",
    TABLE=TAB_REAC,
    FILTRE=_F(NOM_PARA="INST", VALE=4.0),
)

# TEST NON REGRESSION
TEST_RESU(
    RESU=_F(
        GROUP_NO="D",
        INST=2.0,
        RESULTAT=RESU,
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        VALE_CALC=0.756026756743282,
    )
)

TEST_RESU(
    RESU=_F(
        GROUP_NO="D",
        INST=4.0,
        RESULTAT=RESU,
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        VALE_CALC=1.4003501518450399,
    )
)

TEST_RESU(
    RESU=_F(
        GROUP_NO="A",
        INST=2.0,
        RESULTAT=RESU,
        NOM_CHAM="SIGM_NOEU",
        NOM_CMP="SIYY",
        VALE_CALC=-16.67856075468453,
    )
)

TEST_RESU(
    RESU=_F(
        GROUP_NO="A",
        INST=4.0,
        RESULTAT=RESU,
        NOM_CHAM="SIGM_NOEU",
        NOM_CMP="SIYY",
        VALE_CALC=-8.739158868455778,
    )
)

FIN()
