# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

MAIL = LIRE_MAILLAGE(FORMAT="ASTER")

MODEL = AFFE_MODELE(
    MAILLAGE=MAIL, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="C_PLAN")
)

# DEFINITION DU MATERIAU
YOUNG1 = FORMULE(VALE="210000.0 - 30.0*TEMP", NOM_PARA="TEMP")
NU1 = FORMULE(VALE="0.30 + 5.0E-05*TEMP", NOM_PARA="TEMP")
ALPHA1 = FORMULE(VALE="1.0E-06*(15.0+2.0E-03*TEMP)", NOM_PARA="TEMP")
R021 = FORMULE(
    VALE="(270.0-0.65*TEMP+0.001*TEMP**2)*(4.0-3.0*exp(-IRRA/3.0))", NOM_PARA=["TEMP", "IRRA"]
)

RM1 = FORMULE(
    VALE="""R021(TEMP,IRRA)+((600.0-1.5*TEMP+0.010*TEMP**2)
            -(270.00-0.65*TEMP+0.001*TEMP**2))*0.50*
            (0.005-0.0020*(1.0-exp(-IRRA/4.0))+exp(-IRRA/1.8))""",
    R021=R021,
    NOM_PARA=["TEMP", "IRRA"],
)

EU1 = FORMULE(
    VALE="log(1.0+((50.0-0.15*TEMP+0.0007*TEMP**2)*exp(-IRRA))*1.0E-02)", NOM_PARA=["TEMP", "IRRA"]
)


TEM = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=400.0, PAS=40.0))

# POUR VALIDER LES DEUX METHODES ON INTERPOLE SEULEMENT UNE PARTIE
# DES PARAMETRES MATERIAUX
YOUNG = CALC_FONC_INTERP(
    FONCTION=YOUNG1, LIST_PARA=TEM, PROL_GAUCHE="CONSTANT", PROL_DROITE="CONSTANT"
)
NU = CALC_FONC_INTERP(FONCTION=NU1, LIST_PARA=TEM, PROL_GAUCHE="CONSTANT", PROL_DROITE="CONSTANT")
ALPHA = CALC_FONC_INTERP(
    FONCTION=ALPHA1, LIST_PARA=TEM, PROL_GAUCHE="CONSTANT", PROL_DROITE="CONSTANT"
)

UN = DEFI_CONSTANTE(VALE=1.0)

ACIER = DEFI_MATERIAU(
    ELAS_FO=_F(E=YOUNG, NU=NU, ALPHA=ALPHA, TEMP_DEF_ALPHA=0.0),
    IRRAD3M=_F(
        R02=R021,
        RM=RM1,
        EPSI_U=EU1,
        AI0=3.00e-6,
        ETAI_S=1000.0,
        RG0=0.0020,
        ZETA_F=UN,
        ALPHA=1.0,
        PHI0=40.0,
        KAPPA=0.8,
        ZETA_G=UN,
        TOLER_ET=0.1e-02,
    ),
)

IRRA_0 = CREA_CHAMP(
    TYPE_CHAM="NOEU_IRRA_R",
    OPERATION="AFFE",
    MAILLAGE=MAIL,
    AFFE=_F(TOUT="OUI", NOM_CMP="IRRA", VALE=0.0),
)

IRRA_1 = CREA_CHAMP(
    TYPE_CHAM="NOEU_IRRA_R",
    OPERATION="AFFE",
    MAILLAGE=MAIL,
    AFFE=_F(TOUT="OUI", NOM_CMP="IRRA", VALE=140.0),
)

IRRA = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_VARC",
    AFFE=(
        _F(NOM_CHAM="IRRA", CHAM_GD=IRRA_0, INST=0.0),
        _F(NOM_CHAM="IRRA", CHAM_GD=IRRA_0, INST=100.0),
        _F(NOM_CHAM="IRRA", CHAM_GD=IRRA_1, INST=200.0),
    ),
)

CL = AFFE_CHAR_MECA(
    MODELE=MODEL, DDL_IMPO=(_F(GROUP_MA=("AB", "DC"), DY=0.0), _F(GROUP_MA="AD", DX=0.0))
)

TEMP_0 = CREA_CHAMP(
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    MAILLAGE=MAIL,
    AFFE=_F(TOUT="OUI", NOM_CMP="TEMP", VALE=0.0),
)

TEMP_1 = CREA_CHAMP(
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    MAILLAGE=MAIL,
    AFFE=_F(TOUT="OUI", NOM_CMP="TEMP", VALE=400.0),
)

LISTE = DEFI_LIST_REEL(
    DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=100.0, NOMBRE=10), _F(JUSQU_A=200.0, NOMBRE=100))
)

TEMPE = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_THER",
    AFFE=(
        _F(NOM_CHAM="TEMP", CHAM_GD=TEMP_0, INST=0.0),
        _F(NOM_CHAM="TEMP", CHAM_GD=TEMP_1, INST=100.0),
        _F(NOM_CHAM="TEMP", CHAM_GD=TEMP_1, INST=200.0),
    ),
)

CHMAT = AFFE_MATERIAU(
    MAILLAGE=MAIL,
    AFFE=_F(TOUT="OUI", MATER=ACIER),
    AFFE_VARC=(
        _F(TOUT="OUI", EVOL=IRRA, NOM_VARC="IRRA"),
        _F(TOUT="OUI", EVOL=TEMPE, NOM_VARC="TEMP", VALE_REF=0.0),
    ),
)

DEFLIST = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=LISTE), ECHEC=_F(ACTION="DECOUPE", SUBD_METHODE="MANUEL", SUBD_NIVEAU=6)
)

# CALCUL AVEC STAT_NON_LINE. VALIDATION DE LA MATRICE TANGENTE EN 3D AINSI
# QUE DU REDECOUPAGE AUTOMATIQUE DU PAS DE TEMPS.
# LE NOMBRE D ITERATION INTERNE EST IMPORTANT CAR IL PERMET DE CALCULER
# AUSSI LES PARAMETRES MATERIAUX DE LA PARTIE PLASTIQUE DE LA LOI
STAT = STAT_NON_LINE(
    MODELE=MODEL,
    CHAM_MATER=CHMAT,
    EXCIT=(_F(CHARGE=CL),),
    CONVERGENCE=_F(ITER_GLOB_MAXI=15),
    COMPORTEMENT=(
        _F(
            DEFORMATION="PETIT",
            TOUT="OUI",
            RELATION="IRRAD3M",
            ITER_INTE_PAS=-100,
            ITER_INTE_MAXI=120,
            RESI_INTE=1.0e-09,
        ),
    ),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1, REAC_INCR=1),
    INCREMENT=_F(LIST_INST=DEFLIST),
)

# TEST DE NON REGRESSION

TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=20.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="SIEF_ELGA",
        NOM_CMP="SIYY",
        VALE_CALC=-220.3478364472365,
    )
)


TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=120.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="SIEF_ELGA",
        NOM_CMP="SIYY",
        VALE_CALC=-0.0008731785670444566,
    )
)


TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=160.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="SIEF_ELGA",
        NOM_CMP="SIYY",
        VALE_CALC=-222.22221889056823,
    )
)


TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=200.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="SIEF_ELGA",
        NOM_CMP="SIYY",
        VALE_CALC=-222.22221889099404,
    )
)


TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=90.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="VARI_ELGA",
        NOM_CMP="V1",
        VALE_CALC=0.004764578824770658,
    )
)


TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=100.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="VARI_ELGA",
        NOM_CMP="V1",
        VALE_CALC=0.00538906702562891,
    )
)


TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=110.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="VARI_ELGA",
        NOM_CMP="V2",
        VALE_CALC=1308.933565096609,
    )
)


TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=200.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="VARI_ELGA",
        NOM_CMP="V2",
        VALE_CALC=23158.423267107268,
    )
)


TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=200.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="VARI_ELGA",
        NOM_CMP="V4",
        VALE_CALC=0.06666666666666667,
    )
)


TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=110.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="VARI_ELGA",
        NOM_CMP="V3",
        VALE_CALC=0.0009268006952898266,
    )
)


TEST_RESU(
    RESU=_F(
        RESULTAT=STAT,
        INST=200.000000,
        GROUP_MA="M1",
        POINT=1,
        NOM_CHAM="VARI_ELGA",
        NOM_CMP="V3",
        VALE_CALC=0.06647526980132183,
    )
)


FIN()
