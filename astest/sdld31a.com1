# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="NON"))
# SDVERI='NON' car la verification est trop couteuse en CPU
#
MA = LIRE_MAILLAGE(FORMAT="ASTER")
#
MA = DEFI_GROUP(reuse=MA, MAILLAGE=MA, CREA_GROUP_NO=_F(TOUT_GROUP_MA="OUI"))
#
MO = AFFE_MODELE(
    MAILLAGE=MA, AFFE=_F(GROUP_MA=("RESSORT", "MASS"), PHENOMENE="MECANIQUE", MODELISATION="DIS_T")
)

omega0 = 2.0 * pi * 3.0
KK = omega0 * omega0
CARA_ELE = AFFE_CARA_ELEM(
    MODELE=MO,
    DISCRET=(
        _F(CARA="K_T_D_L", REPERE="GLOBAL", GROUP_MA="RESSORT", VALE=(KK, KK, KK)),
        _F(
            CARA="M_T_L",
            REPERE="GLOBAL",
            GROUP_MA="RESSORT",
            VALE=(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
        ),
        _F(CARA="M_T_D_N", GROUP_MA="MASS", VALE=1.0),
    ),
)
#
MATE_BID = DEFI_MATERIAU(ELAS=_F(E=20000.0, RHO=7900.0, NU=0.49999))
#
CHMAT = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(GROUP_MA="RESSORT", MATER=MATE_BID))
#
pasdt = 1.0e-2
#
L_INST = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=20, PAS=pasdt),))
#
LIAISON = AFFE_CHAR_MECA(
    MODELE=MO, DDL_IMPO=(_F(GROUP_NO="A", DX=0.0, DY=0.0, DZ=0.0), _F(GROUP_NO="B", DX=0.0, DY=0.0))
)
#
TRACTION = AFFE_CHAR_MECA(MODELE=MO, FORCE_NODALE=_F(GROUP_NO="B", FZ=1.0))
#
#   Chargement sinusoidal
#
OMEGA = omega0 * 1.1
SINOMEGT = FORMULE(VALE="sin(OMEGA*INST)", OMEGA=OMEGA, NOM_PARA="INST")
FSIN = CALC_FONC_INTERP(
    FONCTION=SINOMEGT,
    LIST_PARA=L_INST,
    NOM_PARA="INST",
    NOM_RESU="ALPHA",
    INTERPOL="LIN",
    TITRE="SINUS OMEGA T",
)
#
tfin = 1.0

#
#  Solution obtenue avec schema NEWMARK - ACCELERATION et plusieurs poursuites
#
tpsr1 = 0.21 * tfin
REPACCP = MECA_NON_LINE(
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK", FORMULATION="DEPLACEMENT"),
    MODELE=MO,
    CARA_ELEM=CARA_ELE,
    CHAM_MATER=CHMAT,
    EXCIT=(_F(CHARGE=LIAISON), _F(CHARGE=TRACTION, FONC_MULT=FSIN)),
    COMPORTEMENT=_F(RELATION="ELAS"),
    INCREMENT=_F(LIST_INST=L_INST, INST_FIN=tpsr1),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(RESI_GLOB_MAXI=0.1, ITER_GLOB_MAXI=10),
)
#
tpsr2 = 0.61 * tfin
REPACCP = MECA_NON_LINE(
    reuse=REPACCP,
    ETAT_INIT=_F(EVOL_NOLI=REPACCP, INST=tpsr1, PRECISION=1e-07),
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK", FORMULATION="DEPLACEMENT"),
    MODELE=MO,
    CARA_ELEM=CARA_ELE,
    CHAM_MATER=CHMAT,
    EXCIT=(_F(CHARGE=LIAISON), _F(CHARGE=TRACTION, FONC_MULT=FSIN)),
    COMPORTEMENT=_F(RELATION="ELAS"),
    INCREMENT=_F(LIST_INST=L_INST, INST_INIT=tpsr1, PRECISION=1e-07, INST_FIN=tpsr2),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(RESI_GLOB_MAXI=0.1, ITER_GLOB_MAXI=1),
)
#
REPACCP = MECA_NON_LINE(
    reuse=REPACCP,
    ETAT_INIT=_F(EVOL_NOLI=REPACCP, INST=tpsr2, PRECISION=1e-07),
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK", FORMULATION="DEPLACEMENT"),
    MODELE=MO,
    CARA_ELEM=CARA_ELE,
    CHAM_MATER=CHMAT,
    EXCIT=(_F(CHARGE=LIAISON), _F(CHARGE=TRACTION, FONC_MULT=FSIN)),
    COMPORTEMENT=_F(RELATION="ELAS"),
    INCREMENT=_F(LIST_INST=L_INST, INST_INIT=tpsr2, PRECISION=1e-07, INST_FIN=tfin),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(RESI_GLOB_MAXI=0.1, ITER_GLOB_MAXI=1),
)

TEST_RESU(
    RESU=(
        _F(
            GROUP_NO="B",
            INST=0.5,
            REFERENCE="SOURCE_EXTERNE",
            RESULTAT=REPACCP,
            NOM_CHAM="DEPL",
            NOM_CMP="DZ",
            VALE_CALC=0.010804500,
            VALE_REFE=0.010804500210685001,
            PRECISION=1.0e-3,
        ),
        _F(
            GROUP_NO="B",
            INST=0.69999999999999996,
            REFERENCE="SOURCE_EXTERNE",
            RESULTAT=REPACCP,
            NOM_CHAM="DEPL",
            NOM_CMP="DZ",
            VALE_CALC=-4.06717795e-03,
            VALE_REFE=-4.0671779495390003e-3,
            PRECISION=1.0e-3,
        ),
        _F(
            GROUP_NO="B",
            INST=1.0,
            REFERENCE="SOURCE_EXTERNE",
            RESULTAT=REPACCP,
            NOM_CHAM="DEPL",
            NOM_CMP="DZ",
            VALE_CALC=-0.013026190,
            VALE_REFE=-0.013026189840934999,
            PRECISION=1.0e-3,
        ),
        _F(
            GROUP_NO="B",
            INST=0.5,
            REFERENCE="SOURCE_EXTERNE",
            RESULTAT=REPACCP,
            NOM_CHAM="ACCE",
            NOM_CMP="DZ",
            VALE_CALC=-4.647918136,
            VALE_REFE=-4.6479181362890643,
            PRECISION=1.0e-3,
        ),
        _F(
            GROUP_NO="B",
            INST=0.69999999999999996,
            REFERENCE="SOURCE_EXTERNE",
            RESULTAT=REPACCP,
            NOM_CHAM="ACCE",
            NOM_CMP="DZ",
            VALE_CALC=2.374868232,
            VALE_REFE=2.374868231956595,
            PRECISION=1.0e-3,
        ),
        _F(
            GROUP_NO="B",
            INST=1.0,
            REFERENCE="SOURCE_EXTERNE",
            RESULTAT=REPACCP,
            NOM_CHAM="ACCE",
            NOM_CMP="DZ",
            VALE_CALC=5.579336777,
            VALE_REFE=5.5793367773016023,
            PRECISION=1.0e-3,
        ),
    )
)

FIN()
