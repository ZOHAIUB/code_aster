# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# CAS_TEST__: FDLV111B
#
# PROPAGATION D'UNE ONDE DE COMPRESSION DANS UNE COLONNE FLUIDE
# INFINIE - ABSORPTION DE L'ONDE A LA FRONTIERE DU MAILLAGE
# ELEMENTS FINIS
# CAS 2D
# =======================================================================

DEBUT(CODE="OUI")

MAIL = LIRE_MAILLAGE(FORMAT="MED")

MAIL = MODI_MAILLAGE(
    reuse=MAIL,
    MAILLAGE=MAIL,
    ORIE_PEAU=_F(GROUP_MA_PEAU=("IFLUSOL", "IPRES"), GROUP_MA_INTERNE="FLUIDE"),
)

MAIL = DEFI_GROUP(reuse=MAIL, MAILLAGE=MAIL, CREA_GROUP_NO=_F(GROUP_MA="IFLUSOL"))

MAIL = DEFI_GROUP(reuse=MAIL, MAILLAGE=MAIL, CREA_GROUP_NO=_F(GROUP_MA="IPRES"))

MAIL = DEFI_GROUP(reuse=MAIL, MAILLAGE=MAIL, CREA_GROUP_NO=_F(GROUP_MA="STRU"))

EAU = DEFI_MATERIAU(FLUIDE=_F(RHO=1000.0, CELE_R=1500.0))

MAT1 = DEFI_MATERIAU(ELAS=_F(E=3.6e10, RHO=2400.0, NU=0.2))

MODELE = AFFE_MODELE(
    MAILLAGE=MAIL,
    AFFE=(
        _F(
            GROUP_MA="FLUIDE",
            PHENOMENE="MECANIQUE",
            MODELISATION="2D_FLUIDE",
            FORMULATION="U_P_PHI",
        ),
        _F(
            GROUP_MA="IFLUSOL",
            PHENOMENE="MECANIQUE",
            MODELISATION="2D_FLUI_STRU",
            FORMULATION="U_P_PHI",
        ),
        _F(
            GROUP_MA="FOND",
            PHENOMENE="MECANIQUE",
            MODELISATION="2D_FLUI_ABSO",
            FORMULATION="U_P_PHI",
        ),
        _F(
            GROUP_MA="IPRES",
            PHENOMENE="MECANIQUE",
            MODELISATION="2D_FLUI_STRU",
            FORMULATION="U_P_PHI",
        ),
        _F(GROUP_MA="STRU", PHENOMENE="MECANIQUE", MODELISATION="D_PLAN"),
    ),
)

CHAMPMAT = AFFE_MATERIAU(
    MAILLAGE=MAIL,
    AFFE=(
        _F(GROUP_MA=("FLUIDE", "IFLUSOL", "FOND", "IPRES"), MATER=EAU),
        _F(GROUP_MA="STRU", MATER=MAT1),
    ),
)

COND_LIM = AFFE_CHAR_MECA(
    MODELE=MODELE,
    DDL_IMPO=(_F(GROUP_NO="IFLUSOL", DX=0.0, DY=0.0), _F(GROUP_NO="IPRES", DX=-1.0e-3)),
)

RIGI_ELE = CALC_MATR_ELEM(MODELE=MODELE, OPTION="RIGI_MECA", CHAM_MATER=CHAMPMAT, CHARGE=COND_LIM)

MASS_ELE = CALC_MATR_ELEM(MODELE=MODELE, OPTION="MASS_MECA", CHAM_MATER=CHAMPMAT, CHARGE=COND_LIM)

MASS_AMOR = CALC_MATR_ELEM(
    MODELE=MODELE,
    OPTION="AMOR_MECA",
    RIGI_MECA=RIGI_ELE,
    MASS_MECA=MASS_ELE,
    CHAM_MATER=CHAMPMAT,
    CHARGE=COND_LIM,
)

VECTELEM = CALC_VECT_ELEM(OPTION="CHAR_MECA", CHAM_MATER=CHAMPMAT, CHARGE=COND_LIM)

NUMEDDL = NUME_DDL(MATR_RIGI=RIGI_ELE)
# METHODE : 'LDLT')

RIGIDITE = ASSE_MATRICE(MATR_ELEM=RIGI_ELE, NUME_DDL=NUMEDDL)

MASSE = ASSE_MATRICE(MATR_ELEM=MASS_ELE, NUME_DDL=NUMEDDL)

AMOR = ASSE_MATRICE(MATR_ELEM=MASS_AMOR, NUME_DDL=NUMEDDL)

VECTASS = ASSE_VECTEUR(VECT_ELEM=VECTELEM, NUME_DDL=NUMEDDL)

# --- LECTURE DE LA FONCTION D'EXCITATION ---
from fdlv111a import F_FONC

FONC = F_FONC()

# TEMPLI = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=4.0, NOMBRE=4000))

# INTLI = DEFI_LIST_ENTI(DEBUT=1, INTERVALLE=_F(JUSQU_A=4001, PAS=1))

TEMPLI = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=4.0, PAS=0.01))

DYN = DYNA_VIBRA(
    TYPE_CALCUL="TRAN",
    BASE_CALCUL="PHYS",
    MATR_MASS=MASSE,
    MATR_RIGI=RIGIDITE,
    MATR_AMOR=AMOR,
    ENERGIE=_F(),
    EXCIT=_F(VECT_ASSE=VECTASS, FONC_MULT=FONC),
    SOLVEUR=_F(POSTTRAITEMENTS="MINI"),
    INCREMENT=_F(LIST_INST=TEMPLI),
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK"),
)

ENER1 = RECU_TABLE(CO=DYN, NOM_TABLE="PARA_CALC")

TEST_TABLE(
    VALE_CALC=160.94592383024636,
    NOM_PARA="TRAV_EXT",
    TABLE=ENER1,
    FILTRE=_F(NOM_PARA="INST", VALE=0.6),
)

# PN10 = RECU_FONCTION(
#     LIST_INST=TEMPLI,
#     PRECISION=1.0e-4,
#     RESULTAT=DYN,
#     GROUP_NO="N10",
#     NOM_CHAM="DEPL",
#     NOM_CMP="PRES",
# )

# PN7 = RECU_FONCTION(
#     LIST_INST=TEMPLI, PRECISION=1.0e-4, RESULTAT=DYN, GROUP_NO="N7", NOM_CHAM="DEPL", NOM_CMP="PRES"
# )

# # Ce TEST_FONCTION est créé expres pour ne pas casser le cas-test. Il faudra ajouster cela une
# # fois resolu le calcul non linéaire avec le fluide et le calcul de l'energie.

# TEST_FONCTION(
#     VALEUR=(
#         _F(VALE_CALC=-99036.29433183, CRITERE="RELATIF", VALE_PARA=0.39, FONCTION=PN10),
#         _F(VALE_CALC=-1.610080941408e05, CRITERE="RELATIF", VALE_PARA=0.64, FONCTION=PN10),
#     )
# )

"""
TEST_FONCTION(
    VALEUR=(
        _F(VALE_CALC=4890.318211198, CRITERE="RELATIF", VALE_PARA=0.386, FONCTION=PN10),
        _F(VALE_CALC=-4939.786129117, CRITERE="RELATIF", VALE_PARA=0.637, FONCTION=PN10),
        _F(
            VALE_CALC=0.43365478515625,
            CRITERE="RELATIF",
            TOLE_MACHINE=3.0e-3,
            VALE_PARA=1.156,
            FONCTION=PN10,
        ),
    )
)

TEST_FONCTION(VALEUR=_F(VALE_CALC=4891.251275539, CRITERE="RELATIF", VALE_PARA=0.386, FONCTION=PN7))

TEMLI = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=1.1, NOMBRE=1100))

TEMLI2 = DEFI_LIST_REEL(DEBUT=0.001, INTERVALLE=_F(JUSQU_A=1.1, NOMBRE=1099))

INLI = DEFI_LIST_ENTI(DEBUT=1, INTERVALLE=_F(JUSQU_A=1101, PAS=1))


ACCE0 = CREA_CHAMP(
    TYPE_CHAM="NOEU_DEPL_R",
    OPERATION="AFFE",
    MODELE=MODELE,
    AFFE=_F(TOUT="OUI", NOM_CMP=("DX", "DY", "DZ", "PRES", "PHI"), VALE=(0.0, 0.0, 0.0, 0.0, 0.0)),
)

DYNA = DYNA_NON_LINE(
    MODELE=MODELE,
    CHAM_MATER=CHAMPMAT,
    EXCIT=_F(CHARGE=COND_LIM, FONC_MULT=FONC),
    #  ETAT_INIT=_F(  INST_INIT = 0.),
    #  On impose explicitement une acceleration initiale nulle car la matrice de masse etant singuliere
    #  a cause du modele (u,p,phi), on ne peut calculer une acceleration non nulle :
    ETAT_INIT=_F(ACCE=ACCE0),
    COMPORTEMENT=_F(RELATION="ELAS", TOUT="OUI"),
    SOLVEUR=_F(STOP_SINGULIER="NON", METHODE="LDLT"),
    NEWTON=_F(MATRICE="ELASTIQUE", REAC_INCR=0, REAC_ITER=0),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-6, ITER_GLOB_MAXI=20),
    INCREMENT=_F(LIST_INST=TEMLI),
    ###CDURAND###            ARCHIVAGE=_F( LIST_ARCH = INLI),
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK", FORMULATION="DEPLACEMENT"),
)

PNA10 = RECU_FONCTION(
    LIST_INST=TEMLI2,
    PRECISION=1.0e-4,
    RESULTAT=DYNA,
    GROUP_NO="N10",
    NOM_CHAM="DEPL",
    NOM_CMP="PRES",
)

PNA7 = RECU_FONCTION(
    LIST_INST=TEMLI2,
    PRECISION=1.0e-4,
    RESULTAT=DYNA,
    GROUP_NO="N7",
    NOM_CHAM="DEPL",
    NOM_CMP="PRES",
)

TEST_FONCTION(
    VALEUR=(
        _F(
            VALE_CALC=4872.999683834,
            VALE_REFE=4874.51,
            CRITERE="RELATIF",
            VALE_PARA=0.384,
            REFERENCE="AUTRE_ASTER",
            PRECISION=3.0e-3,
            FONCTION=PNA10,
        ),
        _F(
            VALE_CALC=-4881.464530009,
            VALE_REFE=-4885.83,
            CRITERE="RELATIF",
            VALE_PARA=0.644,
            REFERENCE="AUTRE_ASTER",
            PRECISION=8.0e-3,
            FONCTION=PNA10,
        ),
        _F(VALE_CALC=38.71561816223, CRITERE="RELATIF", VALE_PARA=1.1, FONCTION=PNA10),
    )
)

TEST_FONCTION(VALEUR=_F(VALE_CALC=4888.775805295, CRITERE="RELATIF", VALE_PARA=0.384, FONCTION=PN7))
"""
FIN()
#
