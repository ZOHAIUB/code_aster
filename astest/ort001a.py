# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2022 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# unittest test_engine_aster.py:test10_short
# Data from ORT: cas_long_9_capteurs_121_mesures/data.cfg

# Some changes after the 'measures' array.

import os.path as osp

import numpy
from numpy import array, matrix

try:
    from code_aster.Utilities import ExecutionParameter

    rcdir = ExecutionParameter().get_option("rcdir")
except ModuleNotFoundError:
    rcdir = "."

inner_radius = 0.146
outer_radius = 0.1778
material_filename = osp.join(rcdir, "materiau", "Z2CN1810_REF_A.NOMI")
sensor_angle = array([-90.0, -54.0, -48.0, -24.0, 0.0, 12.0, 24.0, 66.0, 90.0])
sensor_index = array([1, 2, 3, 4, 5, 6, 7, 8, 9])
number_of_sensors = 9
number_of_timesteps = 121
timestep = 10.0
pre_stab_steps = 7
post_stab_steps = 0
cutoff = 10
thmLossPar = [0.0, 20.0]
shoot = 100.0
base = 50.0

measures = matrix(
    [
        [0.0, 81.5032, 94.3969, 97.4176, 108.086, 118.493, 123.724, 129.179, 147.801, 154.964],
        [10.0, 81.5033, 94.4014, 97.423, 108.094, 118.504, 123.737, 129.194, 147.821, 154.986],
        [20.0, 81.5038, 94.4348, 97.4634, 108.152, 118.586, 123.831, 129.3, 147.973, 155.149],
        [30.0, 81.5061, 94.5495, 97.601, 108.355, 118.87, 124.157, 129.671, 148.491, 155.718],
        [40.0, 81.5117, 94.799, 97.899, 108.805, 119.497, 124.876, 130.487, 149.614, 156.979],
        [50.0, 81.5223, 95.2069, 98.3848, 109.552, 120.539, 126.067, 131.836, 151.433, 159.078],
        [60.0, 81.539, 95.7703, 99.0551, 110.599, 121.996, 127.733, 133.722, 153.999, 162.028],
        [70.0, 81.5626, 96.4765, 99.883, 111.926, 123.84, 129.84, 136.104, 157.275, 165.769],
        [80.0, 81.5933, 97.2869, 100.839, 113.471, 125.985, 132.288, 138.87, 161.097, 170.124],
        [90.0, 81.6303, 98.1401, 101.852, 115.12, 128.27, 134.895, 141.81, 165.181, 174.753],
        [100.0, 81.6722, 98.9756, 102.863, 116.753, 130.528, 137.467, 144.708, 169.219, 179.306],
        [110.0, 81.7174, 99.7515, 103.82, 118.303, 132.667, 139.902, 147.447, 173.043, 183.597],
        [120.0, 81.7651, 100.481, 104.713, 119.751, 134.663, 142.171, 149.963, 176.609, 187.581],
        [130.0, 81.8142, 101.154, 105.544, 121.097, 136.515, 144.275, 152.262, 179.917, 191.259],
        [140.0, 81.8643, 101.775, 106.313, 122.345, 138.23, 146.222, 154.415, 182.974, 194.642],
        [150.0, 81.9147, 102.355, 107.023, 123.5, 139.815, 148.01, 156.418, 185.799, 197.75],
        [160.0, 81.9653, 102.893, 107.68, 124.57, 141.283, 149.644, 158.274, 188.408, 200.576],
        [170.0, 82.0155, 103.392, 108.29, 125.563, 142.641, 151.146, 159.995, 190.82, 203.148],
        [180.0, 82.0651, 103.855, 108.855, 126.483, 143.899, 152.54, 161.592, 193.049, 205.552],
        [190.0, 82.114, 104.285, 109.38, 127.338, 145.065, 153.845, 163.077, 195.113, 207.776],
        [200.0, 82.1619, 104.685, 109.867, 128.132, 146.145, 155.06, 164.456, 197.018, 209.844],
        [210.0, 82.2087, 105.056, 110.321, 128.871, 147.144, 156.193, 165.741, 198.772, 211.762],
        [220.0, 82.2543, 105.403, 110.744, 129.56, 148.071, 157.248, 166.937, 200.381, 213.547],
        [230.0, 82.2986, 105.727, 111.138, 130.202, 148.934, 158.234, 168.053, 201.876, 215.207],
        [240.0, 82.3415, 106.03, 111.507, 130.802, 149.73, 159.155, 169.096, 203.279, 216.755],
        [250.0, 82.383, 106.313, 111.85, 131.361, 150.479, 160.015, 170.068, 204.591, 218.196],
        [260.0, 82.4229, 106.572, 112.165, 131.873, 151.163, 160.804, 170.958, 205.791, 219.509],
        [270.0, 82.4611, 106.8, 112.441, 132.321, 151.76, 161.494, 171.735, 206.838, 220.645],
        [280.0, 82.497, 106.985, 112.666, 132.686, 152.251, 162.057, 172.365, 207.681, 221.551],
        [290.0, 82.5305, 107.125, 112.835, 132.959, 152.619, 162.479, 172.836, 208.306, 222.208],
        [300.0, 82.5613, 107.22, 112.949, 133.144, 152.87, 162.764, 173.153, 208.717, 222.624],
        [310.0, 82.5892, 107.272, 113.012, 133.246, 153.008, 162.922, 173.324, 208.93, 222.818],
        [320.0, 82.6141, 107.286, 113.028, 133.271, 153.042, 162.962, 173.361, 208.958, 222.806],
        [330.0, 82.6361, 107.263, 113.0, 133.226, 152.98, 162.892, 173.276, 208.818, 222.607],
        [340.0, 82.6551, 107.208, 112.932, 133.117, 152.831, 162.723, 173.077, 208.523, 222.237],
        [350.0, 82.6711, 107.123, 112.827, 132.948, 152.601, 162.463, 172.776, 208.087, 221.711],
        [360.0, 82.6842, 107.01, 112.69, 132.725, 152.297, 162.12, 172.382, 207.522, 221.045],
        [370.0, 82.6944, 106.872, 112.521, 132.453, 151.926, 161.7, 171.901, 206.838, 220.25],
        [380.0, 82.7018, 106.711, 112.325, 132.136, 151.492, 161.21, 171.342, 206.046, 219.338],
        [390.0, 82.7065, 106.529, 112.103, 131.778, 151.0, 160.657, 170.711, 205.157, 218.32],
        [400.0, 82.7086, 106.328, 111.858, 131.381, 150.449, 160.045, 170.016, 204.175, 217.206],
        [410.0, 82.7081, 106.109, 111.592, 130.951, 149.856, 159.38, 169.261, 203.107, 216.004],
        [420.0, 82.7051, 105.873, 111.306, 130.488, 149.218, 158.666, 168.451, 201.963, 214.722],
        [430.0, 82.6998, 105.623, 111.002, 129.997, 148.533, 157.907, 167.592, 200.741, 213.368],
        [440.0, 82.6923, 105.36, 110.681, 129.48, 147.815, 157.107, 166.687, 199.448, 211.947],
        [450.0, 82.6826, 105.083, 110.346, 128.939, 147.067, 156.268, 165.741, 198.093, 210.466],
        [460.0, 82.6708, 104.796, 109.997, 128.375, 146.289, 155.394, 164.758, 196.694, 208.929],
        [470.0, 82.6572, 104.497, 109.635, 127.792, 145.482, 154.489, 163.739, 195.252, 207.341],
        [480.0, 82.6416, 104.189, 109.262, 127.19, 144.65, 153.551, 162.689, 193.771, 205.705],
        [490.0, 82.6243, 103.872, 108.879, 126.571, 143.798, 152.585, 161.61, 192.251, 204.024],
        [500.0, 82.6054, 103.546, 108.486, 125.937, 142.922, 151.591, 160.505, 190.696, 202.301],
        [510.0, 82.5848, 103.214, 108.083, 125.289, 142.028, 150.567, 159.374, 189.111, 200.534],
        [520.0, 82.5628, 102.875, 107.673, 124.628, 141.116, 149.519, 158.221, 187.498, 198.676],
        [530.0, 82.5394, 102.53, 107.255, 123.955, 140.189, 148.447, 157.047, 185.86, 196.81],
        [540.0, 82.5147, 102.179, 106.831, 123.271, 139.248, 147.363, 155.852, 184.199, 194.931],
        [550.0, 82.4888, 101.823, 106.4, 122.578, 138.293, 146.269, 154.64, 182.516, 193.033],
        [560.0, 82.4616, 101.462, 105.964, 121.875, 137.327, 145.161, 153.408, 180.815, 191.121],
        [570.0, 82.4334, 101.095, 105.522, 121.165, 136.349, 144.045, 152.155, 179.096, 189.192],
        [580.0, 82.4042, 100.719, 105.077, 120.447, 135.362, 142.915, 150.881, 177.362, 187.251],
        [590.0, 82.374, 100.342, 104.625, 119.722, 134.365, 141.776, 149.58, 175.613, 185.296],
        [600.0, 82.3429, 99.9639, 104.169, 118.99, 133.36, 140.628, 148.265, 173.851, 183.33],
        [610.0, 82.3109, 99.5823, 103.71, 118.253, 132.348, 139.472, 146.948, 172.078, 181.353],
        [620.0, 82.2782, 99.197, 103.246, 117.511, 131.329, 138.309, 145.627, 170.293, 179.366],
        [630.0, 82.2447, 98.8027, 102.779, 116.764, 130.303, 137.14, 144.302, 168.499, 177.371],
        [640.0, 82.2105, 98.411, 102.308, 116.012, 129.272, 135.964, 142.969, 166.696, 175.367],
        [650.0, 82.1757, 98.0184, 101.835, 115.257, 128.236, 134.783, 141.631, 164.884, 173.357],
        [660.0, 82.1403, 97.6244, 101.36, 114.497, 127.195, 133.597, 140.288, 163.063, 171.339],
        [670.0, 82.1043, 97.2286, 100.881, 113.735, 126.149, 132.406, 138.942, 161.235, 169.315],
        [680.0, 82.0678, 96.8303, 100.393, 112.969, 125.1, 131.211, 137.591, 159.399, 167.285],
        [690.0, 82.0308, 96.4303, 99.9064, 112.201, 124.046, 130.012, 136.237, 157.555, 165.249],
        [700.0, 81.9934, 96.0293, 99.419, 111.43, 122.99, 128.81, 134.88, 155.703, 163.208],
        [710.0, 81.9555, 95.6286, 98.9227, 110.656, 121.931, 127.605, 133.519, 153.842, 161.16],
        [720.0, 81.9173, 95.2251, 98.4312, 109.881, 120.869, 126.397, 132.156, 151.972, 159.107],
        [730.0, 81.8787, 94.8209, 97.94, 109.103, 119.804, 125.187, 130.791, 150.069, 157.046],
        [740.0, 81.8397, 94.4162, 97.4473, 108.324, 118.737, 123.974, 129.423, 148.125, 154.978],
        [750.0, 81.8005, 94.0109, 96.9536, 107.542, 117.668, 122.758, 128.054, 146.203, 152.901],
        [760.0, 81.7609, 93.6047, 96.4607, 106.759, 116.597, 121.541, 126.682, 144.284, 150.806],
        [770.0, 81.7211, 93.1982, 95.9664, 105.975, 115.525, 120.323, 125.309, 142.366, 148.656],
        [780.0, 81.681, 92.7912, 95.4712, 105.188, 114.45, 119.102, 123.935, 140.45, 146.505],
        [790.0, 81.6407, 92.3836, 94.9761, 104.4, 113.375, 117.88, 122.559, 138.535, 144.371],
        [800.0, 81.6002, 91.9756, 94.4805, 103.609, 112.298, 116.657, 121.182, 136.621, 142.239],
        [810.0, 81.5595, 91.5672, 93.985, 102.817, 111.22, 115.433, 119.803, 134.707, 140.113],
        [820.0, 81.5186, 91.1586, 93.4891, 102.022, 110.14, 114.207, 118.424, 132.794, 137.987],
        [830.0, 81.4775, 90.7497, 92.9931, 101.221, 109.059, 112.98, 117.044, 130.882, 135.865],
        [840.0, 81.4363, 90.3405, 92.4968, 100.411, 107.977, 111.753, 115.663, 128.97, 133.745],
        [850.0, 81.3949, 89.9311, 92.0004, 99.586, 106.894, 110.524, 114.281, 127.059, 131.627],
        [860.0, 81.3534, 89.5216, 91.504, 98.7595, 105.809, 109.294, 112.899, 125.148, 129.51],
        [870.0, 81.3117, 89.1119, 91.0075, 97.9428, 104.722, 108.063, 111.515, 123.238, 127.395],
        [880.0, 81.27, 88.7021, 90.5109, 97.1296, 103.633, 106.83, 110.131, 121.328, 125.281],
        [890.0, 81.2281, 88.2921, 90.0142, 96.3159, 102.541, 105.596, 108.745, 119.419, 123.168],
        [900.0, 81.1862, 87.8821, 89.5176, 95.504, 101.447, 104.36, 107.358, 117.509, 121.056],
        [910.0, 81.1441, 87.472, 89.021, 94.6938, 100.339, 103.12, 105.969, 115.6, 118.945],
        [920.0, 81.102, 87.0618, 88.5243, 93.8845, 99.1962, 101.877, 104.578, 113.691, 116.835],
        [930.0, 81.0598, 86.6516, 88.0277, 93.0763, 98.0661, 100.627, 103.184, 111.781, 114.724],
        [940.0, 81.0176, 86.2413, 87.5311, 92.269, 96.9458, 99.3364, 101.784, 109.87, 112.614],
        [950.0, 80.9752, 85.831, 87.0345, 91.4626, 95.8266, 98.0474, 100.375, 107.958, 110.502],
        [960.0, 80.9328, 85.4211, 86.5383, 90.6577, 94.713, 96.7759, 98.9152, 106.045, 108.391],
        [970.0, 80.8905, 85.0139, 86.0454, 89.8587, 93.6081, 95.5134, 97.4864, 104.14, 106.291],
        [980.0, 80.8482, 84.6158, 85.5633, 89.0779, 92.5294, 94.2833, 96.0954, 102.269, 104.231],
        [990.0, 80.8064, 84.2361, 85.1033, 88.3328, 91.5002, 93.1095, 94.7708, 100.466, 102.256],
        [1000.0, 80.7652, 83.8819, 84.6741, 87.637, 90.5395, 92.0144, 93.5359, 98.7227, 100.395],
        [1010.0, 80.7251, 83.5554, 84.2784, 86.9948, 89.6529, 91.0038, 92.3964, 97.1289, 98.6219],
        [1020.0, 80.686, 83.2557, 83.9154, 86.4048, 88.8385, 90.0758, 91.3502, 95.672, 97.01],
        [1030.0, 80.6482, 82.9812, 83.583, 85.8638, 88.0919, 89.2249, 90.391, 94.3376, 95.5427],
        [1040.0, 80.6118, 82.7299, 83.2789, 85.3682, 87.4082, 88.4456, 89.5126, 93.1177, 94.2025],
        [1050.0, 80.5768, 82.4999, 83.0007, 84.9144, 86.7821, 87.7321, 88.7083, 92.0011, 92.9798],
        [1060.0, 80.5432, 82.2895, 82.7463, 84.499, 86.209, 87.0789, 87.9721, 90.9801, 91.8628],
        [1070.0, 80.511, 82.0969, 82.5136, 84.1187, 85.6844, 86.481, 87.2982, 90.0459, 90.8429],
        [1080.0, 80.4803, 81.9207, 82.3008, 83.7705, 85.2043, 85.9336, 86.6813, 89.1914, 89.9111],
        [1090.0, 80.4511, 81.7594, 82.1061, 83.4518, 84.7647, 85.4326, 86.1167, 88.4096, 89.0599],
        [1100.0, 80.4233, 81.6117, 81.928, 83.16, 84.3623, 84.9739, 85.5998, 87.6944, 88.2822],
        [1110.0, 80.3969, 81.4765, 81.765, 82.893, 83.994, 84.5539, 85.1267, 87.0401, 87.5716],
        [1120.0, 80.3718, 81.3528, 81.6159, 82.6485, 83.6568, 84.1695, 84.6936, 86.4415, 86.9223],
        [1130.0, 80.3481, 81.2394, 81.4795, 82.4246, 83.3481, 83.8176, 84.2971, 85.8938, 86.3289],
        [1140.0, 80.3257, 81.1356, 81.3546, 82.2197, 83.0654, 83.4953, 83.9341, 85.3926, 85.7865],
        [1150.0, 80.3045, 81.0406, 81.2403, 82.0321, 82.8067, 83.2003, 83.6018, 84.9341, 85.2907],
        [1160.0, 80.2845, 80.9535, 81.1358, 81.8604, 82.5698, 82.9302, 83.2976, 84.5147, 84.8376],
        [1170.0, 80.2657, 80.8738, 81.04, 81.7032, 82.3529, 82.6829, 83.0191, 84.1309, 84.4235],
        [1180.0, 80.248, 80.8008, 80.9524, 81.5593, 82.1543, 82.4565, 82.7641, 83.7798, 84.0449],
        [1190.0, 80.2314, 80.7339, 80.8722, 81.4275, 81.9726, 82.2492, 82.5307, 83.4585, 83.6989],
        [1200.0, 80.2157, 80.6726, 80.7988, 81.3069, 81.8061, 82.0594, 82.3171, 83.1645, 83.3825],
    ]
)

# utilities from engine.utils
def matrix2vect(matr):
    """Convert a matrix(nbtime, nbsensor), where each column contains the values
    for a sensor, into a vector(nbsensor * nbtime) containing the values sensor
    by sensor."""
    if type(matr) == numpy.matrix:
        matr = matr.A
    return matr.T.ravel()


def init_kronecker(sizeX, sizeY, i, j):
    """Return a null matrix with element (i, j) = 1"""
    mat = numpy.zeros((sizeX, sizeY))
    mat[i, j] = 1.0
    return mat


class Data:
    """Store variables"""

    attr = (
        "inner_radius",
        "outer_radius",
        "material_filename",
        "sensor_angle",
        "sensor_index",
        "number_of_sensors",
        "number_of_timesteps",
        "timestep",
        "pre_stab_steps",
        "post_stab_steps",
        "cutoff",
        "thmLossPar",
        "shoot",
        "base",
        "measures",
    )

    def __init__(self, vardict):
        for key in self.attr:
            setattr(self, key, vardict[key])


def get_data(testname):
    data = Data(globals())
    if testname == "test10_short":
        # truncated in test10_short:
        data.number_of_timesteps = 10
        data.pre_stab_steps = 0
        data.load = measures[1 : data.number_of_timesteps, 1:]

    elif testname == "test11_shoot":
        # test11_shoot
        nbstep = data.number_of_timesteps - 1 + data.pre_stab_steps + data.post_stab_steps
        data.load = init_kronecker(nbstep, data.number_of_sensors, 1, 0) * 100.0 + 50.0

    elif testname == "test20_long_case2":
        data.number_of_timesteps += 1
        data.pre_stab_steps = 0
        # nominal_input_cas2.npy
        data.load = numpy.load("fort.11")

    # matr to vect in _run_study:
    data.input_values = matrix2vect(data.load)

    return data
