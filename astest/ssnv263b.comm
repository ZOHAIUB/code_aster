# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="NON"))

# ......................................................................
# CYLINDRE A COMPOSANTE DE CONTRAINTES DONNEES DANS LE REPERE CYL.
# ELASTOPLASTICITE ISOTROPE VON MISES A ECROUISSAGE NON LINERAIRE
# ......................................................................


# Geometrie
Rint = 50.0
Rext = 100.0
L = 15.0


# Composantes des contraintes normalisees
srr = 1 / 6.0
stt = 1 / 6.0
szz = 2.0 / 3.0
srz = 0.5

nrr = -1 / 6.0
ntt = -1 / 6.0
nzz = 2 / 6.0
nrz = 0.5


# Parametres du materiau
E = 195000.0
NU = 0.3
R0 = 490
RH = 3000.0
R1 = 60.0
G1 = 8500.0
R2 = 250.0
G2 = 10.0
RK = 50.0
P0 = 1.0e-3
GM = 0.15


# Cible de chargement
ka = 0.05
qe = R0 + RK * P0**GM
q = R0 + RH * ka + R1 * (1 - exp(-G1 * ka)) + R2 * (1 - exp(-G2 * ka)) + RK * (ka + P0) ** GM


# Reponse
err = 1.5 * ka * nrr + (1 + NU) / E * q * srr - NU / E * q * (srr + stt + szz)
ezz = 1.5 * ka * nzz + (1 + NU) / E * q * szz - NU / E * q * (srr + stt + szz)
ett = 1.5 * ka * ntt + (1 + NU) / E * q * stt - NU / E * q * (srr + stt + szz)
erz = 1.5 * ka * nrz + (1 + NU) / E * q * srz
ur = Rext * err
uz = ezz * L + 2 * erz * (Rext - Rint)


# Simulation

MA = LIRE_MAILLAGE()


MO = AFFE_MODELE(
    MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="AXIS_GRAD_VARI")
)


ACIER = DEFI_MATERIAU(
    ELAS=_F(E=E, NU=NU),
    ECRO_NL=_F(R0=R0, RH=RH, GAMMA_1=G1, R1=R1, GAMMA_2=G2, R2=R2, RK=RK, P0=P0, GAMMA_M=GM),
    NON_LOCAL=_F(C_GRAD_VARI=R0 * (L / 5.0) ** 2, PENA_LAGR=R0),
)


CM = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(TOUT="OUI", MATER=ACIER))


CH_BORD = AFFE_CHAR_MECA(
    MODELE=MO,
    FORCE_CONTOUR=(
        _F(GROUP_MA="INT", FX=-srr, FY=-srz),
        _F(GROUP_MA="EXT", FX=srr, FY=srz),
        _F(GROUP_MA="SUP", FX=srz, FY=szz),
        _F(GROUP_MA="INF", FX=-srz, FY=-szz),
    ),
)


F_VOLU = FORMULE(NOM_PARA="X", VALE="-srz/X", srz=srz)


CH_VOLU = AFFE_CHAR_MECA_F(MODELE=MO, FORCE_INTERNE=_F(GROUP_MA="VOLU", FY=F_VOLU))


RIGIDE = AFFE_CHAR_MECA(MODELE=MO, DDL_IMPO=_F(GROUP_NO="INF_INT", DY=0))


L_INST = DEFI_LIST_REEL(
    DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=qe / q, NOMBRE=1), _F(JUSQU_A=1, NOMBRE=2))
)

RAMPE = DEFI_FONCTION(NOM_PARA="INST", VALE=(0, 0, 1, q))


EVOL = STAT_NON_LINE(
    MODELE=MO,
    CHAM_MATER=CM,
    EXCIT=(
        _F(CHARGE=RIGIDE),
        _F(CHARGE=CH_VOLU, FONC_MULT=RAMPE),
        _F(CHARGE=CH_BORD, FONC_MULT=RAMPE),
    ),
    COMPORTEMENT=_F(RELATION="VMIS_ISOT_NL"),
    INCREMENT=_F(LIST_INST=L_INST),
    NEWTON=_F(REAC_ITER=1),
)


EVOL = CALC_CHAMP(
    reuse=EVOL,
    RESULTAT=EVOL,
    CONTRAINTE="SIEF_NOEU",
    VARI_INTERNE="VARI_NOEU",
    DEFORMATION="EPSI_NOEU",
)


TEST_RESU(
    RESU=(
        _F(
            INST=1.0,
            RESULTAT=EVOL,
            NOM_CHAM="SIEF_NOEU",
            NOM_CMP="SIXX",
            GROUP_NO="SUP_EXT",
            VALE_REFE=q * srr,
            VALE_CALC=138.3940101726406,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            INST=1.0,
            RESULTAT=EVOL,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            GROUP_NO="SUP_EXT",
            VALE_REFE=ur,
            VALE_CALC=-1.2854854972011847,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            INST=1.0,
            RESULTAT=EVOL,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            GROUP_NO="SUP_EXT",
            VALE_REFE=uz,
            VALE_CALC=4.437982893431353,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            INST=1.0,
            RESULTAT=EVOL,
            NOM_CHAM="VARI_NOEU",
            NOM_CMP="V6",
            GROUP_NO="SUP_EXT",
            VALE_REFE=1.5 * ka * nrz,
            VALE_CALC=0.037499995610774065,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
    )
)


# --------------------------------------------------------------------------------------------------
#  Test en présence d'un plateau de Luders -> déplacement contrôlé partout
# --------------------------------------------------------------------------------------------------

# Seuil du plateau de Luders
LU = 0.02
q_lu = R0 + RH * LU + R1 * (1 - exp(-G1 * LU)) + R2 * (1 - exp(-G2 * LU)) + RK * (LU + P0) ** GM


# Première valeur de kappa : sur le plateau
ka_0 = 0.01
err_0 = 1.5 * ka_0 * nrr + (1 + NU) / E * q_lu * srr - NU / E * q_lu * (srr + stt + szz)
ezz_0 = 1.5 * ka_0 * nzz + (1 + NU) / E * q_lu * szz - NU / E * q_lu * (srr + stt + szz)
ett_0 = 1.5 * ka_0 * ntt + (1 + NU) / E * q_lu * stt - NU / E * q_lu * (srr + stt + szz)
erz_0 = 1.5 * ka_0 * nrz + (1 + NU) / E * q_lu * srz


# Evolution de la déformation et du déplacement correspondante
err_f = DEFI_FONCTION(NOM_PARA="INST", VALE=(0, 0, 1, err_0, 2, err))
ezz_f = DEFI_FONCTION(NOM_PARA="INST", VALE=(0, 0, 1, ezz_0, 2, ezz))
ett_f = DEFI_FONCTION(NOM_PARA="INST", VALE=(0, 0, 1, ett_0, 2, ett))
erz_f = DEFI_FONCTION(NOM_PARA="INST", VALE=(0, 0, 1, erz_0, 2, erz))

ur_f = FORMULE(NOM_PARA=("INST", "X", "Y"), VALE="X*err_f(INST)", err_f=err_f)
uz_f = FORMULE(
    NOM_PARA=("INST", "X", "Y"),
    VALE="Y*ezz_f(INST) + 2*erz_f(INST)*(X-Rint)",
    ezz_f=ezz_f,
    erz_f=erz_f,
    Rint=Rint,
)


depl_imp = AFFE_CHAR_MECA_F(MODELE=MO, DDL_IMPO=_F(GROUP_MA="VOLU", DX=ur_f, DY=uz_f))


acier_lu = DEFI_MATERIAU(
    ELAS=_F(E=E, NU=NU),
    ECRO_NL=_F(
        R0=R0, RH=RH, GAMMA_1=G1, R1=R1, GAMMA_2=G2, R2=R2, RK=RK, P0=P0, GAMMA_M=GM, EPSP_LUDERS=LU
    ),
    NON_LOCAL=_F(C_GRAD_VARI=R0 * (L / 5.0) ** 2, PENA_LAGR=R0),
)

cm_lu = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(TOUT="OUI", MATER=acier_lu))


linst_lu = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=1, NOMBRE=1), _F(JUSQU_A=2, NOMBRE=1)))


evol_lu = STAT_NON_LINE(
    MODELE=MO,
    CHAM_MATER=cm_lu,
    EXCIT=_F(CHARGE=depl_imp),
    COMPORTEMENT=_F(RELATION="VMIS_ISOT_NL"),
    INCREMENT=_F(LIST_INST=linst_lu),
    NEWTON=_F(REAC_ITER=1),
)


CALC_CHAMP(
    reuse=evol_lu,
    RESULTAT=evol_lu,
    CONTRAINTE="SIEF_NOEU",
    VARI_INTERNE="VARI_NOEU",
    DEFORMATION="EPSI_NOEU",
)


TEST_RESU(
    RESU=(
        _F(
            INST=1.0,
            RESULTAT=evol_lu,
            NOM_CHAM="SIEF_NOEU",
            NOM_CMP="SIXX",
            GROUP_NO="SUP_EXT",
            VALE_REFE=q_lu * srr,
            VALE_CALC=113.88777553704917,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            INST=2.0,
            RESULTAT=evol_lu,
            NOM_CHAM="SIEF_NOEU",
            NOM_CMP="SIXX",
            GROUP_NO="SUP_EXT",
            VALE_REFE=q * srr,
            VALE_CALC=138.39399626039187,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            INST=1.0,
            RESULTAT=evol_lu,
            NOM_CHAM="SIEF_NOEU",
            NOM_CMP="SIYY",
            GROUP_NO="SUP_EXT",
            VALE_REFE=q_lu * szz,
            VALE_CALC=455.5511021481737,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            INST=2.0,
            RESULTAT=evol_lu,
            NOM_CHAM="SIEF_NOEU",
            NOM_CMP="SIYY",
            GROUP_NO="SUP_EXT",
            VALE_REFE=q * szz,
            VALE_CALC=553.5760677011701,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            INST=1.0,
            RESULTAT=evol_lu,
            NOM_CHAM="SIEF_NOEU",
            NOM_CMP="SIXY",
            GROUP_NO="SUP_EXT",
            VALE_REFE=q_lu * srz,
            VALE_CALC=341.66332661111255,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            INST=2.0,
            RESULTAT=evol_lu,
            NOM_CHAM="SIEF_NOEU",
            NOM_CMP="SIXY",
            GROUP_NO="SUP_EXT",
            VALE_REFE=q * srz,
            VALE_CALC=415.182071440763,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
    )
)


FIN()
