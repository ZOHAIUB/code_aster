# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#       A UN ECOULEMENT MONOPHASIQUE AVEC UN AMORTISSEMENT EN
#       FLUIDE AU REPOS DE 1,3#.
# -------------------------------------------------------------------
# FICHIER MODELE GEVIBUS
# person_in_charge: andre.adobes at edf.fr

from code_aster.Commands import *
from code_aster.Utilities import ExecutionParameter

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

TUBE = LIRE_MAILLAGE(FORMAT="MED")
MODI_MAILLAGE(reuse=TUBE, MAILLAGE=TUBE, ABSC_CURV=_F(GROUP_NO_ORIG="N_01_001", TOUT="OUI"))

TUBE = DEFI_GROUP(
    reuse=TUBE,
    MAILLAGE=TUBE,
    CREA_GROUP_NO=(
        _F(NOM="GR_NO_INIT", GROUP_NO="N_02_001"),
        _F(NOM="GR_NO_FIN", GROUP_NO="N_02_060"),
        _F(GROUP_MA="POUTRE"),
    ),
    CREA_GROUP_MA=_F(NOM="POUTRE", TOUT="OUI"),
)

MODELE = AFFE_MODELE(
    MAILLAGE=TUBE, AFFE=_F(GROUP_MA="POUTRE", PHENOMENE="MECANIQUE", MODELISATION="POU_D_TG")
)

CARA = AFFE_CARA_ELEM(
    MODELE=MODELE,
    POUTRE=_F(
        GROUP_MA="POUTRE", SECTION="CERCLE", CARA=("R", "EP"), VALE=(7.939000e-03, 3.176000e-03)
    ),
)

RHOI = DEFI_FONCTION(
    NOM_PARA="ABSC", MAILLAGE=TUBE, VALE_Y=(1.300000e00, 1.300000e00), NOEUD_PARA=("N1", "N271")
)

RHOE = DEFI_FONCTION(
    NOM_PARA="ABSC",
    MAILLAGE=TUBE,
    VALE_Y=(1.000000e03, 1.000000e03, 1.300000e00, 1.300000e00),
    NOEUD_PARA=("N1", "N182", "N183", "N271"),
)

PROFVIT1 = DEFI_FONC_FLUI(
    MAILLAGE=TUBE,
    GROUP_NO_INIT="GR_NO_INIT",
    GROUP_NO_FIN="GR_NO_FIN",
    VITE=_F(PROFIL="UNIFORME", VALE=1.000000e00),
)


def includeExternalData(theFile):
    """Retrieve a file in the external data folder"""
    import os.path as osp

    rcdir = ExecutionParameter().get_option("rcdir")
    return osp.join(rcdir, "tests_data", theFile)


CD = includeExternalData("sdll110a.70")
CK = includeExternalData("sdll110a.71")
DEFI_FICHIER(ACTION="ASSOCIER", FICHIER=CD, ACCES="NEW", UNITE=70)
DEFI_FICHIER(ACTION="ASSOCIER", FICHIER=CK, ACCES="NEW", UNITE=71)

TYPEFLUI = DEFI_FLUI_STRU(
    FAISCEAU_TRANS=_F(
        COUPLAGE="OUI",
        CARA_ELEM=CARA,
        PROF_RHO_F_INT=RHOI,
        PROF_RHO_F_EXT=RHOE,
        COEF_MASS_AJOU=2.071110e00,
        NOM_CMP="DX",
        TYPE_PAS="CARRE_LIGN",
        TYPE_RESEAU=1001,
        PAS=1.500000e00,
        PROF_VITE_FLUI=PROFVIT1,
    ),
    INFO=2,
)

FONC_CM = FONC_FLUI_STRU(TYPE_FLUI_STRU=TYPEFLUI)

MAT = DEFI_MATERIAU(
    ELAS_FLUI=_F(
        E=1.100000e11,
        RHO=8.330000e03,
        NU=3.000000e-01,
        PROF_RHO_F_EXT=RHOE,
        PROF_RHO_F_INT=RHOI,
        COEF_MASS_AJOU=FONC_CM,
    )
)

CHMAT = AFFE_MATERIAU(MAILLAGE=TUBE, AFFE=_F(TOUT="OUI", MATER=MAT))

CHDDL = AFFE_CHAR_MECA(
    MODELE=MODELE,
    DDL_IMPO=(
        _F(GROUP_NO="N_01_001", DX=0.0, DY=0.0, DZ=0.0, DRZ=0.0),
        _F(GROUP_NO="N_04_001", DX=0.0, DY=0.0, DZ=0.0, DRZ=0.0),
        _F(GROUP_MA="POUTRE", DY=0.0),
    ),
)

MELR = CALC_MATR_ELEM(
    MODELE=MODELE, CHARGE=CHDDL, CARA_ELEM=CARA, CHAM_MATER=CHMAT, OPTION="RIGI_FLUI_STRU"
)

MELM = CALC_MATR_ELEM(
    MODELE=MODELE, CHARGE=CHDDL, CARA_ELEM=CARA, CHAM_MATER=CHMAT, OPTION="MASS_FLUI_STRU"
)

NUM = NUME_DDL(MATR_RIGI=MELR)

MATRR = ASSE_MATRICE(MATR_ELEM=MELR, NUME_DDL=NUM)

MATRM = ASSE_MATRICE(MATR_ELEM=MELM, NUME_DDL=NUM)

MODES = CALC_MODES(
    MATR_RIGI=MATRR,
    OPTION="PLUS_PETITE",
    CALC_FREQ=_F(NMAX_FREQ=2),
    MATR_MASS=MATRM,
    SOLVEUR_MODAL=_F(METHODE="TRI_DIAG"),
)


MODES = NORM_MODE(reuse=MODES, MODE=MODES, NORME=("TRAN",))

vite_min = 5.000000e-01
vite_max = 2.500000e00
nb_poin = 201

MELFLUI0 = CALC_FLUI_STRU(
    VITE_FLUI=_F(VITE_MIN=vite_min, VITE_MAX=vite_max, NB_POIN=nb_poin),
    BASE_MODALE=_F(MODE_MECA=MODES, NUME_ORDRE=(1,), AMOR_REDUIT=(1.300000e-02,)),
    TYPE_FLUI_STRU=TYPEFLUI,
    IMPRESSION=_F(PARA_COUPLAGE="OUI"),
)

DEFI_FICHIER(ACTION="LIBERER", UNITE=70)
DEFI_FICHIER(ACTION="LIBERER", UNITE=71)

SPECTRE1 = DEFI_SPEC_TURB(SPEC_LONG_COR_3=_F(LONG_COR=3.4, PROF_VITE_FLUI=PROFVIT1))

pas = (vite_max - vite_min) / (nb_poin - 1)
vite = []
for i in range(nb_poin):
    vitesse = vite_min + i * pas
    vite.append(vitesse)

SPRJ = [None] * nb_poin
RPM0 = [None] * nb_poin
RPP0 = [None] * nb_poin
DYN0 = [None] * nb_poin

for i in range(len(vite)):
    SPRJ[i] = PROJ_SPEC_BASE(
        SPEC_TURB=SPECTRE1,
        NB_POIN=1024,
        FREQ_INIT=10.2222,
        FREQ_FIN=30.6666,
        TOUT_CMP="NON",
        TOUT="OUI",
        BASE_ELAS_FLUI=MELFLUI0,
        VITE_FLUI=vite[i],
    )

    RPM0[i] = DYNA_SPEC_MODAL(
        BASE_ELAS_FLUI=MELFLUI0, VITE_FLUI=vite[i], EXCIT=_F(INTE_SPEC_GENE=SPRJ[i])
    )

    RPP0[i] = REST_SPEC_PHYS(
        BASE_ELAS_FLUI=MELFLUI0,
        VITE_FLUI=vite[i],
        INTE_SPEC_GENE=RPM0[i],
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        OPTION="TOUT_TOUT",
        GROUP_NO=("N_02_030",),
    )

    DYN0[i] = POST_DYNA_ALEA(INTERSPECTRE=_F(INTE_SPEC=RPP0[i], OPTION="DIAG"))

F_FREQ = RECU_FONCTION(
    BASE_ELAS_FLUI=MELFLUI0, PARA_X="VITE_FLU", PARA_Y="FREQ", TOUT_ORDRE="OUI", NUME_MODE=1
)

TEST_FONCTION(VALEUR=_F(VALE_CALC=20.08193245601, VALE_PARA=0.5, FONCTION=F_FREQ))

TEST_FONCTION(VALEUR=_F(VALE_CALC=20.30964383598, VALE_PARA=0.75, FONCTION=F_FREQ))

TEST_FONCTION(VALEUR=_F(VALE_CALC=20.46745953263, VALE_PARA=1.0, FONCTION=F_FREQ))

TEST_FONCTION(VALEUR=_F(VALE_CALC=20.44397201019, VALE_PARA=1.25, FONCTION=F_FREQ))

TEST_FONCTION(VALEUR=_F(VALE_CALC=20.44397202651, VALE_PARA=1.5, FONCTION=F_FREQ))

TEST_FONCTION(VALEUR=_F(VALE_CALC=20.44397206803, VALE_PARA=1.75, FONCTION=F_FREQ))

TEST_FONCTION(VALEUR=_F(VALE_CALC=20.44397217998, VALE_PARA=2.0, FONCTION=F_FREQ))

TEST_FONCTION(VALEUR=_F(VALE_CALC=20.44397200955, VALE_PARA=2.25, FONCTION=F_FREQ))

TEST_FONCTION(VALEUR=_F(VALE_CALC=20.44397200980, VALE_PARA=2.5, FONCTION=F_FREQ))

F_AMOR = RECU_FONCTION(
    BASE_ELAS_FLUI=MELFLUI0, PARA_X="VITE_FLU", PARA_Y="AMOR", TOUT_ORDRE="OUI", NUME_MODE=1
)

TEST_FONCTION(VALEUR=_F(VALE_CALC=0.01008021209722, VALE_PARA=0.5, FONCTION=F_AMOR))

TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=0.01006588944488,
        VALE_REFE=0.010065879999999999,
        VALE_PARA=0.75,
        REFERENCE="NON_DEFINI",
        PRECISION=2.0e-3,
        FONCTION=F_AMOR,
    )
)

TEST_FONCTION(VALEUR=_F(VALE_CALC=0.01018029186833, VALE_PARA=1.0, FONCTION=F_AMOR))

TEST_FONCTION(VALEUR=_F(VALE_CALC=9.525026030287e-03, VALE_PARA=1.25, FONCTION=F_AMOR))

TEST_FONCTION(VALEUR=_F(VALE_CALC=5.398749947678e-03, VALE_PARA=1.5, FONCTION=F_AMOR))

TEST_FONCTION(VALEUR=_F(VALE_CALC=2.653854204917e-03, VALE_PARA=1.75, FONCTION=F_AMOR))

TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=-5.133329560309e-04,
        VALE_REFE=-5.1277709999999999e-4,
        VALE_PARA=2.0,
        REFERENCE="NON_DEFINI",
        PRECISION=5.0e-3,
        FONCTION=F_AMOR,
    )
)

TEST_FONCTION(VALEUR=_F(VALE_CALC=-4.102812719176e-03, VALE_PARA=2.25, FONCTION=F_AMOR))

TEST_FONCTION(VALEUR=_F(VALE_CALC=-8.114583602961e-03, VALE_PARA=2.5, FONCTION=F_AMOR))

TEST_TABLE(
    VALE_CALC=1.75938489588e-06,
    NOM_PARA="ECART",
    TABLE=DYN0[0],
    FILTRE=(_F(NOM_PARA="NOEUD_I", VALE_K="91"), _F(NOM_PARA="NOEUD_J", VALE_K="91")),
)

TEST_TABLE(
    VALE_CALC=6.34353898573e-06,
    NOM_PARA="ECART",
    TABLE=DYN0[25],
    FILTRE=(_F(NOM_PARA="NOEUD_I", VALE_K="91"), _F(NOM_PARA="NOEUD_J", VALE_K="91")),
)

TEST_TABLE(
    VALE_CALC=1.56294919658e-05,
    NOM_PARA="ECART",
    TABLE=DYN0[50],
    FILTRE=(_F(NOM_PARA="NOEUD_I", VALE_K="91"), _F(NOM_PARA="NOEUD_J", VALE_K="91")),
)

TEST_TABLE(
    VALE_CALC=3.32093839904e-05,
    NOM_PARA="ECART",
    TABLE=DYN0[75],
    FILTRE=(_F(NOM_PARA="NOEUD_I", VALE_K="91"), _F(NOM_PARA="NOEUD_J", VALE_K="91")),
)

TEST_TABLE(
    VALE_CALC=7.8979847269e-05,
    NOM_PARA="ECART",
    TABLE=DYN0[100],
    FILTRE=(_F(NOM_PARA="NOEUD_I", VALE_K="91"), _F(NOM_PARA="NOEUD_J", VALE_K="91")),
)

TEST_TABLE(
    VALE_CALC=0.000165757281078,
    NOM_PARA="ECART",
    TABLE=DYN0[125],
    FILTRE=(_F(NOM_PARA="NOEUD_I", VALE_K="91"), _F(NOM_PARA="NOEUD_J", VALE_K="91")),
)

TEST_TABLE(
    VALE_CALC=0.000613798581098,
    NOM_PARA="ECART",
    TABLE=DYN0[150],
    FILTRE=(_F(NOM_PARA="NOEUD_I", VALE_K="91"), _F(NOM_PARA="NOEUD_J", VALE_K="91")),
)

TEST_TABLE(
    VALE_CALC=0.000754307961057,
    NOM_PARA="ECART",
    TABLE=DYN0[175],
    FILTRE=(_F(NOM_PARA="NOEUD_I", VALE_K="91"), _F(NOM_PARA="NOEUD_J", VALE_K="91")),
)

TEST_TABLE(
    VALE_CALC=0.000907037000247,
    NOM_PARA="ECART",
    TABLE=DYN0[200],
    FILTRE=(_F(NOM_PARA="NOEUD_I", VALE_K="91"), _F(NOM_PARA="NOEUD_J", VALE_K="91")),
)

FIN()
#
