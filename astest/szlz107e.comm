# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# RETROUVER DES 3 CRITERES EXISTANTS "MATAKE_MODI_AV",
# "DANG_VAN_MODI_AV","FATESOCI_MODI_AV",

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

# LE CHARGEMENT OBTENU AVEC SSLV135b
#######################################################
# ASSOCIE AVEC LA SOLUTION SOL_NL de SSLV135b
#######################################################
# POUR DANG-VAN et MATAKE
SIGMXX = DEFI_FONCTION(
    NOM_PARA="INST",
    VALE=(
        0.00000e00,
        0.00000e00,
        5.00000e-01,
        5.00000e01,
        1.00000e00,
        1.00000e02,
        1.50000e00,
        5.00000e01,
        2.00000e00,
        1.28358e-14,
        2.50000e00,
        -5.00000e01,
        3.00000e00,
        -1.00000e02,
        3.50000e00,
        -5.00000e01,
        4.00000e00,
        -1.40267e-26,
        4.50000e00,
        5.00000e01,
        5.00000e00,
        1.00000e02,
        5.50000e00,
        5.00000e01,
        6.00000e00,
        1.28358e-14,
        6.50000e00,
        -5.00000e01,
        7.00000e00,
        -1.00000e02,
        7.50000e00,
        -5.00000e01,
        8.00000e00,
        -2.80824e-14,
    ),
)

SIGMYY = DEFI_FONCTION(
    NOM_PARA="INST",
    VALE=(
        0.00000e00,
        0.00000e00,
        5.00000e-01,
        -1.00000e02,
        1.00000e00,
        -2.00000e02,
        1.50000e00,
        -1.00000e02,
        2.00000e00,
        -2.52742e-13,
        2.50000e00,
        1.00000e02,
        3.00000e00,
        2.00000e02,
        3.50000e00,
        1.00000e02,
        4.00000e00,
        -1.40368e-26,
        4.50000e00,
        -1.00000e02,
        5.00000e00,
        -2.00000e02,
        5.50000e00,
        -1.00000e02,
        6.00000e00,
        -2.52742e-13,
        6.50000e00,
        1.00000e02,
        7.00000e00,
        2.00000e02,
        7.50000e00,
        1.00000e02,
        8.00000e00,
        3.55819e-13,
    ),
)
ZERO = DEFI_FONCTION(
    NOM_PARA="INST",
    VALE=(
        0.00000e00,
        0,
        5.00000e-01,
        0,
        1.00000e00,
        0,
        1.50000e00,
        0,
        2.00000e00,
        0,
        2.50000e00,
        0,
        3.00000e00,
        0,
        3.50000e00,
        0,
        4.00000e00,
        0,
        4.50000e00,
        0,
        5.00000e00,
        0,
        5.50000e00,
        0,
        6.00000e00,
        0,
        6.50000e00,
        0,
        7.00000e00,
        0,
        7.50000e00,
        0,
        8.00000e00,
        0,
    ),
)

EPSTXX = DEFI_FONCTION(
    NOM_PARA="INST",
    VALE=(
        0.00000e00,
        0.00000e00,
        5.00000e-01,
        4.00000e-04,
        1.00000e00,
        8.00000e-04,
        1.50000e00,
        4.00000e-04,
        2.00000e00,
        4.25211e-19,
        2.50000e00,
        -4.00000e-04,
        3.00000e00,
        -8.00000e-04,
        3.50000e00,
        -4.00000e-04,
        4.00000e00,
        -1.28195e-33,
        4.50000e00,
        4.00000e-04,
        5.00000e00,
        8.00000e-04,
        5.50000e00,
        4.00000e-04,
        6.00000e00,
        4.25211e-19,
        6.50000e00,
        -4.00000e-04,
        7.00000e00,
        -8.00000e-04,
        7.50000e00,
        -4.00000e-04,
        8.00000e00,
        -7.60636e-19,
    ),
)


EPSTYY = DEFI_FONCTION(
    NOM_PARA="INST",
    VALE=(
        0.00000e00,
        0.00000e00,
        5.00000e-01,
        -5.75000e-04,
        1.00000e00,
        -1.15000e-03,
        1.50000e00,
        -5.75000e-04,
        2.00000e00,
        -1.30104e-18,
        2.50000e00,
        5.75000e-04,
        3.00000e00,
        1.15000e-03,
        3.50000e00,
        5.75000e-04,
        4.00000e00,
        2.40741e-33,
        4.50000e00,
        -5.75000e-04,
        5.00000e00,
        -1.15000e-03,
        5.50000e00,
        -5.75000e-04,
        6.00000e00,
        -1.30104e-18,
        6.50000e00,
        5.75000e-04,
        7.00000e00,
        1.15000e-03,
        7.50000e00,
        5.75000e-04,
        8.00000e00,
        1.73472e-18,
    ),
)

EPSTZZ = DEFI_FONCTION(
    NOM_PARA="INST",
    VALE=(
        0.00000e00,
        0.00000e00,
        5.00000e-01,
        7.50000e-05,
        1.00000e00,
        1.50000e-04,
        1.50000e00,
        7.50000e-05,
        2.00000e00,
        4.20128e-19,
        2.50000e00,
        -7.50000e-05,
        3.00000e00,
        -1.50000e-04,
        3.50000e00,
        -7.50000e-05,
        4.00000e00,
        -2.31112e-33,
        4.50000e00,
        7.50000e-05,
        5.00000e00,
        1.50000e-04,
        5.50000e00,
        7.50000e-05,
        6.00000e00,
        4.20128e-19,
        6.50000e00,
        -7.50000e-05,
        7.00000e00,
        -1.50000e-04,
        7.50000e00,
        -7.50000e-05,
        8.00000e00,
        -2.03288e-19,
    ),
)

WHOL = DEFI_FONCTION(
    NOM_PARA="SIGM",
    INTERPOL="LOG",
    PROL_DROITE="LINEAIRE",
    PROL_GAUCHE="LINEAIRE",
    VALE=(
        138.0,
        1000000.0,
        152.0,
        500000.0,
        165.0,
        200000.0,
        180.0,
        100000.0,
        200.0,
        50000.0,
        250.0,
        20000.0,
        295.0,
        12000.0,
        305.0,
        10000.0,
        340.0,
        5000.0,
        430.0,
        2000.0,
        540.0,
        1000.0,
        690.0,
        500.0,
        930.0,
        200.0,
        1210.0,
        100.0,
        1590.0,
        50.0,
        2210.0,
        20.0,
        2900.0,
        10.0,
    ),
)
ACIER = [None] * 2
ACIER[0] = DEFI_MATERIAU(
    ELAS=_F(E=200000.0, NU=0.3, ALPHA=0.0),
    FATIGUE=_F(WOHLER=WHOL),
    CISA_PLAN_CRIT=_F(CRITERE="MATAKE_MODI_AV", MATAKE_A=1.0, MATAKE_B=2.0, COEF_FLEX_TORS=1.5),
)
ACIER[1] = DEFI_MATERIAU(
    ELAS=_F(E=200000.0, NU=0.3, ALPHA=0.0),
    FATIGUE=_F(WOHLER=WHOL),
    CISA_PLAN_CRIT=_F(CRITERE="DANG_VAN_MODI_AV", D_VAN_A=1.0, D_VAN_B=2.0, COEF_CISA_TRAC=1.5),
)
WHOL_F = FORMULE(NOM_PARA=("NBRUP"), VALE=""" 4098.3*(NBRUP**(-0.2693)) """)

## CRITERES A TESTER
CRIT = [None] * 4

# POUR RETROUVER 'MATAKE_MODI_AV'
CRIT[0] = FORMULE(
    NOM_PARA=("TAUPR_1", "TAUPR_2", "SIGN_1", "SIGN_2"),
    VALE=""" 1.5*( abs(TAUPR_1-TAUPR_2)/2.0 + max(0,SIGN_1, SIGN_2) ) """,
)

# POUR RETROUVER 'DANG_VAN_MODI_AV'
CRIT[1] = FORMULE(
    NOM_PARA=("TAUPR_1", "TAUPR_2", "PHYDR_1", "PHYDR_2"),
    VALE=""" 1.5*( abs(TAUPR_1-TAUPR_2)/2.0 + max(0,PHYDR_1, PHYDR_2) ) """,
)
CRIT[2] = "MATAKE_MODI_AV"
CRIT[3] = "DANG_VAN_MODI_AV"
## -----------------------------------------------------------------------

FATN = [None] * 4

NPAR = ["VNM1X", "VNM1Y", "VNM1Z", "DOMMAGE", "VNM2X", "VNM2Y", "VNM2Z"]

RESU = [
    (-0.38268343236509, 0.38268343236509),
    (0.92387953251129, 9.2050485345244e-01),
    0,
    7.0532362250862e-04,
    (-0.38268343236509, 0.38268343236509),
    (0.92387953251129, 9.2050485345244e-01),
    0,
    # REFERENCE DE DV
    0.70710678118655,
    0.70710678118655,
    0,
    1.3419917535855e-04,
    -0.70710678118655,
    0.70710678118655,
    0,
]
CTEST = ["RELATIF", "RELATIF", "ABSOLU", "RELATIF", "RELATIF", "RELATIF", "ABSOLU"]

for i in range(2):

    FATN[i] = POST_FATIGUE(
        CHARGEMENT="MULTIAXIAL",
        HISTOIRE=_F(
            SIGM_XX=SIGMXX,
            SIGM_YY=SIGMYY,
            SIGM_ZZ=ZERO,
            SIGM_XY=ZERO,
            SIGM_XZ=ZERO,
            SIGM_YZ=ZERO,
            EPS_XX=EPSTXX,
            EPS_YY=EPSTYY,
            EPS_ZZ=EPSTZZ,
            EPS_XY=ZERO,
            EPS_XZ=ZERO,
            EPS_YZ=ZERO,
        ),
        TYPE_CHARGE="NON_PERIODIQUE",
        CRITERE="FORMULE_CRITERE",
        FORMULE_GRDEQ=CRIT[i],
        DOMMAGE="WOHLER",
        MATER=ACIER[i],
        PROJECTION="UN_AXE",
    )

    IMPR_TABLE(TABLE=FATN[i])

    for j in range(7):

        TEST_TABLE(
            TABLE=FATN[i],
            NOM_PARA=NPAR[j],
            VALE_REFE=RESU[j + i * 7],
            VALE_CALC=RESU[j + i * 7],
            CRITERE=CTEST[j],
            REFERENCE="AUTRE_ASTER",
        )

FATNW = [None] * 2

### FORMULE_VIE = WHOL,
for i in range(2):

    FATNW[i] = POST_FATIGUE(
        CHARGEMENT="MULTIAXIAL",
        HISTOIRE=_F(
            SIGM_XX=SIGMXX,
            SIGM_YY=SIGMYY,
            SIGM_ZZ=ZERO,
            SIGM_XY=ZERO,
            SIGM_XZ=ZERO,
            SIGM_YZ=ZERO,
            EPS_XX=EPSTXX,
            EPS_YY=EPSTYY,
            EPS_ZZ=EPSTZZ,
            EPS_XY=ZERO,
            EPS_XZ=ZERO,
            EPS_YZ=ZERO,
        ),
        TYPE_CHARGE="NON_PERIODIQUE",
        CRITERE="FORMULE_CRITERE",
        FORMULE_GRDEQ=CRIT[i],
        DOMMAGE="FORM_VIE",
        FORMULE_VIE=WHOL,
        MATER=ACIER[i],
        PROJECTION="UN_AXE",
    )

    IMPR_TABLE(TABLE=FATNW[i])

    for j in range(7):

        TEST_TABLE(
            TABLE=FATNW[i],
            NOM_PARA=NPAR[j],
            VALE_REFE=RESU[j + i * 7],
            VALE_CALC=RESU[j + i * 7],
            CRITERE=CTEST[j],
            REFERENCE="AUTRE_ASTER",
        )

### FORMULE_VIE = WHOL_F,
FATNF = [None] * 2
RESUF = [
    (-0.38268343236509, 0.38268343236509),
    (0.92387953251129, 9.2050485345244e-01),
    6.1232339957368e-17,
    3.3180845213285e-04,
    (-0.38268343236509, 0.38268343236509),
    (0.92387953251129, 9.2050485345244e-01),
    6.1232339957368e-17,
    ##REFERENCE DE DV
    7.0710678118655e-01,
    7.0710678118655e-01,
    6.1232339957368e-17,
    8.7960237413997e-05,
    -7.0710678118655e-01,
    7.0710678118655e-01,
    6.1232339957368e-17,
]

for i in range(2):

    FATNF[i] = POST_FATIGUE(
        CHARGEMENT="MULTIAXIAL",
        HISTOIRE=_F(
            SIGM_XX=SIGMXX,
            SIGM_YY=SIGMYY,
            SIGM_ZZ=ZERO,
            SIGM_XY=ZERO,
            SIGM_XZ=ZERO,
            SIGM_YZ=ZERO,
            EPS_XX=EPSTXX,
            EPS_YY=EPSTYY,
            EPS_ZZ=EPSTZZ,
            EPS_XY=ZERO,
            EPS_XZ=ZERO,
            EPS_YZ=ZERO,
        ),
        TYPE_CHARGE="NON_PERIODIQUE",
        CRITERE="FORMULE_CRITERE",
        FORMULE_GRDEQ=CRIT[i],
        DOMMAGE="FORM_VIE",
        FORMULE_VIE=WHOL_F,
        MATER=ACIER[i],
        PROJECTION="UN_AXE",
    )

    IMPR_TABLE(TABLE=FATNF[i])

    for j in range(7):

        TEST_TABLE(
            TABLE=FATNF[i],
            NOM_PARA=NPAR[j],
            VALE_REFE=RESUF[j + i * 7],
            VALE_CALC=RESUF[j + i * 7],
            CRITERE=CTEST[j],
            REFERENCE="AUTRE_ASTER",
        )

## POUR RETROUVER LES CRITERES EN NOM
for i in range(2):

    FATN[i + 2] = POST_FATIGUE(
        CHARGEMENT="MULTIAXIAL",
        HISTOIRE=_F(
            SIGM_XX=SIGMXX,
            SIGM_YY=SIGMYY,
            SIGM_ZZ=ZERO,
            SIGM_XY=ZERO,
            SIGM_XZ=ZERO,
            SIGM_YZ=ZERO,
            EPS_XX=EPSTXX,
            EPS_YY=EPSTYY,
            EPS_ZZ=EPSTZZ,
            EPS_XY=ZERO,
            EPS_XZ=ZERO,
            EPS_YZ=ZERO,
        ),
        TYPE_CHARGE="NON_PERIODIQUE",
        CRITERE=CRIT[i + 2],
        DOMMAGE="WOHLER",
        MATER=ACIER[i],
        PROJECTION="UN_AXE",
    )

    IMPR_TABLE(TABLE=FATN[i + 2])

    for j in range(7):

        TEST_TABLE(
            TABLE=FATN[i + 2],
            NOM_PARA=NPAR[j],
            VALE_REFE=RESU[j + i * 7],
            VALE_CALC=RESU[j + i * 7],
            CRITERE=CTEST[j],
            REFERENCE="AUTRE_ASTER",
        )


### POUR FATEMI_SOCIE

MANCOF = DEFI_FONCTION(
    NOM_PARA="EPSI",
    INTERPOL="LOG",
    PROL_DROITE="LINEAIRE",
    PROL_GAUCHE="LINEAIRE",
    VALE=(
        0.00226,
        5800000.0,
        0.00230,
        4600000.0,
        0.00250,
        239284.0,
        0.00270,
        149535.0,
        0.00300,
        73544.0,
        0.00350,
        33821.0,
        0.00600,
        2850.0,
        0.00850,
        1068.0,
        0.01000,
        562.0,
        1.00000,
        1.0,
    ),
)

ACIER2 = DEFI_MATERIAU(
    ELAS=_F(E=200000.0, NU=0.3, ALPHA=0.0),
    FATIGUE=_F(MANSON_COFFIN=MANCOF),
    CISA_PLAN_CRIT=_F(CRITERE="FATESOCI_MODI_AV", FATSOC_A=1.0, COEF_CISA_TRAC=1.5),
)

MANCO1 = FORMULE(NOM_PARA=("NBRUP"), VALE=""" 0.2*(NBRUP**(-0.1619)) """)

# Pour le critère FS, il faut multiplier la déformatipn par 2 car on trouve
# la déformation du type d'ingénieurie dans le critère

CRIT_FAT = FORMULE(
    NOM_PARA=("EPSPR_1", "EPSPR_2", "SIGN_1", "SIGN_2"),
    VALE=""" 1.5*( abs(EPSPR_1-EPSPR_2) * (1+ max(0,SIGN_1, SIGN_2) )) """,
)

RESU2 = [
    (-0.43051109680829, 0.43051109680830),
    0.90258528434986,
    0,
    0.43649132038876,
    (-0.43051109680829, 0.43051109680830),
    0.90258528434986,
    0,
    0.43649132038876,
]


## POUR RETROUVER LES CRITERES EN NOM AVEC PROJECTION = DEUX_AXES
FATN2SF2 = POST_FATIGUE(
    CHARGEMENT="MULTIAXIAL",
    HISTOIRE=_F(
        SIGM_XX=SIGMXX,
        SIGM_YY=SIGMYY,
        SIGM_ZZ=ZERO,
        SIGM_XY=ZERO,
        SIGM_XZ=ZERO,
        SIGM_YZ=ZERO,
        EPS_XX=EPSTXX,
        EPS_YY=EPSTYY,
        EPS_ZZ=EPSTZZ,
        EPS_XY=ZERO,
        EPS_XZ=ZERO,
        EPS_YZ=ZERO,
    ),
    TYPE_CHARGE="NON_PERIODIQUE",
    CRITERE="FATESOCI_MODI_AV",
    MATER=ACIER2,
    PROJECTION="DEUX_AXES",
)

IMPR_TABLE(TABLE=FATN2SF2)

for j in range(7):

    TEST_TABLE(
        TABLE=FATN2SF2,
        NOM_PARA=NPAR[j],
        VALE_REFE=RESU2[j],
        VALE_CALC=RESU2[j],
        CRITERE=CTEST[j],
        REFERENCE="AUTRE_ASTER",
    )

FATN2 = POST_FATIGUE(
    CHARGEMENT="MULTIAXIAL",
    HISTOIRE=_F(
        SIGM_XX=SIGMXX,
        SIGM_YY=SIGMYY,
        SIGM_ZZ=ZERO,
        SIGM_XY=ZERO,
        SIGM_XZ=ZERO,
        SIGM_YZ=ZERO,
        EPS_XX=EPSTXX,
        EPS_YY=EPSTYY,
        EPS_ZZ=EPSTZZ,
        EPS_XY=ZERO,
        EPS_XZ=ZERO,
        EPS_YZ=ZERO,
    ),
    TYPE_CHARGE="NON_PERIODIQUE",
    CRITERE="FORMULE_CRITERE",
    FORMULE_GRDEQ=CRIT_FAT,
    DOMMAGE="MANSON_COFFIN",
    MATER=ACIER2,
    PROJECTION="UN_AXE",
)

IMPR_TABLE(TABLE=FATN2)

for j in range(7):

    TEST_TABLE(
        TABLE=FATN2,
        NOM_PARA=NPAR[j],
        VALE_REFE=RESU2[j],
        VALE_CALC=RESU2[j],
        CRITERE=CTEST[j],
        REFERENCE="AUTRE_ASTER",
    )

# POUR FORMULE_VIE = MANCOF,
FATN2M = POST_FATIGUE(
    CHARGEMENT="MULTIAXIAL",
    HISTOIRE=_F(
        SIGM_XX=SIGMXX,
        SIGM_YY=SIGMYY,
        SIGM_ZZ=ZERO,
        SIGM_XY=ZERO,
        SIGM_XZ=ZERO,
        SIGM_YZ=ZERO,
        EPS_XX=EPSTXX,
        EPS_YY=EPSTYY,
        EPS_ZZ=EPSTZZ,
        EPS_XY=ZERO,
        EPS_XZ=ZERO,
        EPS_YZ=ZERO,
    ),
    TYPE_CHARGE="NON_PERIODIQUE",
    CRITERE="FORMULE_CRITERE",
    FORMULE_GRDEQ=CRIT_FAT,
    DOMMAGE="FORM_VIE",
    FORMULE_VIE=MANCOF,
    MATER=ACIER2,
    PROJECTION="UN_AXE",
)

IMPR_TABLE(TABLE=FATN2M)

for j in range(7):

    TEST_TABLE(
        TABLE=FATN2M,
        NOM_PARA=NPAR[j],
        VALE_REFE=RESU2[j],
        VALE_CALC=RESU2[j],
        CRITERE=CTEST[j],
        REFERENCE="AUTRE_ASTER",
    )

## POUR RETROUVER LES CRITERES EN NOM
FATN2SF = POST_FATIGUE(
    CHARGEMENT="MULTIAXIAL",
    HISTOIRE=_F(
        SIGM_XX=SIGMXX,
        SIGM_YY=SIGMYY,
        SIGM_ZZ=ZERO,
        SIGM_XY=ZERO,
        SIGM_XZ=ZERO,
        SIGM_YZ=ZERO,
        EPS_XX=EPSTXX,
        EPS_YY=EPSTYY,
        EPS_ZZ=EPSTZZ,
        EPS_XY=ZERO,
        EPS_XZ=ZERO,
        EPS_YZ=ZERO,
    ),
    TYPE_CHARGE="NON_PERIODIQUE",
    CRITERE="FATESOCI_MODI_AV",
    MATER=ACIER2,
    PROJECTION="UN_AXE",
)

IMPR_TABLE(TABLE=FATN2SF)

for j in range(7):

    TEST_TABLE(
        TABLE=FATN2SF,
        NOM_PARA=NPAR[j],
        VALE_REFE=RESU2[j],
        VALE_CALC=RESU2[j],
        CRITERE=CTEST[j],
        REFERENCE="AUTRE_ASTER",
    )


FIN()
#
