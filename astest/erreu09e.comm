# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# copy of ssnp125b to check that the database is saved after ConvergenceError.
from code_aster.Commands import *
from code_aster import CA
from run_aster.config import CFG

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))

if CFG.get("require_mpiexec"):
    print("INFO: This testcase can not be run under mpiexec.")
    # because it would exit before saving the database
    CA.exit()

MAILLAGE = LIRE_MAILLAGE(FORMAT="MED")

MODELE = AFFE_MODELE(
    MAILLAGE=MAILLAGE,
    AFFE=(
        _F(GROUP_MA=("ROCHE",), PHENOMENE="MECANIQUE", MODELISATION="D_PLAN"),
        _F(
            GROUP_MA=("BAS", "EXTREM", "HAUT", "GAUCHE"),
            PHENOMENE="MECANIQUE",
            MODELISATION="D_PLAN",
        ),
    ),
)

MATER1 = DEFI_MATERIAU(
    ELAS=_F(E=5800.0e6, NU=0.3),
    DRUCK_PRAGER=_F(SY_ULTM=0.47e6, ALPHA=0.33, SY=2.11e6, P_ULTM=0.01, ECROUISSAGE="PARABOLIQUE"),
)

MATER2 = DEFI_MATERIAU(
    ELAS=_F(E=5800.0e6, NU=0.3),
    DRUCK_PRAGER=_F(SY_ULTM=0.44e6, ALPHA=0.33, SY=2.0e6, P_ULTM=0.01, ECROUISSAGE="PARABOLIQUE"),
)

MAILLAGE = MODI_MAILLAGE(
    reuse=MAILLAGE,
    MAILLAGE=MAILLAGE,
    ORIE_PEAU=_F(GROUP_MA_PEAU=("BAS", "EXTREM", "HAUT", "GAUCHE")),
)

CHMAT = AFFE_MATERIAU(
    MAILLAGE=MAILLAGE, AFFE=(_F(TOUT="OUI", MATER=MATER1), _F(GROUP_MA="M1", MATER=MATER2))
)

SIGINIT = CREA_CHAMP(
    TYPE_CHAM="ELGA_SIEF_R",
    OPERATION="AFFE",
    MODELE=MODELE,
    AFFE=_F(
        TOUT="OUI", NOM_CMP=("SIXX", "SIYY", "SIZZ", "SIXY"), VALE=(-2.0e6, -2.0e6, -2.0e6, 0.0)
    ),
)

CHAR_DR = AFFE_CHAR_MECA(MODELE=MODELE, PRES_REP=_F(GROUP_MA="EXTREM", PRES=2.0e6))

CHAR_GA = AFFE_CHAR_MECA(MODELE=MODELE, PRES_REP=_F(GROUP_MA="GAUCHE", PRES=2.0e6))

DEPL_BA = AFFE_CHAR_MECA(MODELE=MODELE, DDL_IMPO=_F(GROUP_MA="BAS", DY=0.0))

DEPL_GA = AFFE_CHAR_MECA(MODELE=MODELE, DDL_IMPO=_F(GROUP_MA="GAUCHE", DX=0.0))

DEPL_HA = AFFE_CHAR_MECA(MODELE=MODELE, FACE_IMPO=_F(GROUP_MA="HAUT", DY=1.0))

COEF = DEFI_FONCTION(
    NOM_PARA="INST", PROL_DROITE="CONSTANT", PROL_GAUCHE="CONSTANT", VALE=(0.0, 0.00, 2.0, -0.030)
)

TEMPS = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=2.00, NOMBRE=100),))

DEFLIST = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=TEMPS),
    ECHEC=_F(
        EVENEMENT="ERREUR",
        ACTION="DECOUPE",
        SUBD_METHODE="MANUEL",
        SUBD_NIVEAU=3,
        SUBD_PAS=10,
        SUBD_PAS_MINI=0.000001,
    ),
)

# try:
U = STAT_NON_LINE(
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    EXCIT=(
        _F(CHARGE=CHAR_DR),
        _F(CHARGE=CHAR_GA),
        _F(CHARGE=DEPL_BA),
        _F(CHARGE=DEPL_GA),
        _F(CHARGE=DEPL_HA, FONC_MULT=COEF),
    ),
    COMPORTEMENT=_F(RELATION="DRUCK_PRAGER"),
    INCREMENT=_F(LIST_INST=DEFLIST),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    ETAT_INIT=_F(SIGM=SIGINIT),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-6, ITER_GLOB_MAXI=26),
)

FIN()
