# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

########################################################################
#          TEST DE VERIFICATION EN PLASTICITE INCOMPRESSIBLE           #
#                       MEMBRANE DE COOK                               #
########################################################################

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))


mesh0 = LIRE_MAILLAGE(FORMAT="MED")

mesh = CREA_MAILLAGE(MAILLAGE=mesh0, MODI_HHO=_F(TOUT="OUI"))

mesh = MODI_MAILLAGE(reuse=mesh, MAILLAGE=mesh, ORIE_PEAU=_F(GROUP_MA_PEAU=("Encast", "load")))

E = 70
ET = 0.13474
RH = ET * E / (E - ET)
mater = DEFI_MATERIAU(
    ECRO_NL=_F(R0=0.243, RH=RH), ELAS=_F(E=E, NU=0.4999), HHO=_F(COEF_STAB=100.0 * E)
)

fieldmat = AFFE_MATERIAU(AFFE=_F(MATER=(mater,), TOUT="OUI"), MAILLAGE=mesh)

rampe = DEFI_FONCTION(
    NOM_PARA="INST", VALE=(0.0, 0.0, 1.0, 1.0), PROL_DROITE="LINEAIRE", PROL_GAUCHE="EXCLU"
)

listr = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=0.3, NOMBRE=1), _F(JUSQU_A=1.0, NOMBRE=7)))

times = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=listr), ECHEC=_F(ACTION="DECOUPE", EVENEMENT="ERREUR", SUBD_NIVEAU=3)
)

FY = FORMULE(NOM_PARA=("X", "Y", "INST"), VALE="0.1125")


model = AFFE_MODELE(
    AFFE=_F(
        MODELISATION="D_PLAN_HHO", FORMULATION="QUADRATIQUE", PHENOMENE="MECANIQUE", TOUT="OUI"
    ),
    MAILLAGE=mesh,
)

depl = AFFE_CHAR_CINE(MECA_IMPO=_F(DX=0.0, DY=0.0, GROUP_MA=("Encast",)), MODELE=model, INFO=1)

load = AFFE_CHAR_MECA_F(FORCE_CONTOUR=_F(FY=FY, GROUP_MA=("load",)), MODELE=model)

resnonl = STAT_NON_LINE(
    CHAM_MATER=fieldmat,
    COMPORTEMENT=_F(DEFORMATION="PETIT", RELATION="VMIS_ISOT_NL", TOUT="OUI"),
    CONVERGENCE=_F(ITER_GLOB_MAXI=10, RESI_GLOB_RELA=1e-6),
    EXCIT=(
        _F(CHARGE=depl, TYPE_CHARGE="FIXE_CSTE"),
        _F(CHARGE=load, FONC_MULT=rampe, TYPE_CHARGE="FIXE_CSTE"),
    ),
    INCREMENT=_F(LIST_INST=times, INST_FIN=0.3),
    MODELE=model,
    NEWTON=_F(MATRICE="TANGENTE", PREDICTION="TANGENTE", REAC_ITER=1),
    SOLVEUR=_F(METHODE="MUMPS", POSTTRAITEMENTS="FORCE"),
    INFO=1,
)

resnonl = STAT_NON_LINE(
    reuse=resnonl,
    RESULTAT=resnonl,
    ETAT_INIT=_F(EVOL_NOLI=resnonl),
    CHAM_MATER=fieldmat,
    COMPORTEMENT=_F(DEFORMATION="PETIT", RELATION="VMIS_ISOT_NL", TOUT="OUI"),
    CONVERGENCE=_F(ITER_GLOB_MAXI=10, RESI_GLOB_RELA=1e-6),
    EXCIT=(
        _F(CHARGE=depl, TYPE_CHARGE="FIXE_CSTE"),
        _F(CHARGE=load, FONC_MULT=rampe, TYPE_CHARGE="FIXE_CSTE"),
    ),
    INCREMENT=_F(LIST_INST=times),
    MODELE=model,
    NEWTON=_F(MATRICE="TANGENTE", PREDICTION="TANGENTE", REAC_ITER=1),
    SOLVEUR=_F(METHODE="MUMPS", POSTTRAITEMENTS="FORCE"),
    INFO=1,
)

resnonl = CALC_CHAMP(
    reuse=resnonl,
    CHAM_MATER=fieldmat,
    CRITERES=("SIEQ_NOEU",),
    DEFORMATION=("EPSI_ELGA",),
    MODELE=model,
    RESULTAT=resnonl,
)
rescoor = CALC_CHAM_ELEM(MODELE=model, OPTION="COOR_ELGA")
IMPR_RESU(UNITE=80, RESU=_F(RESULTAT=resnonl, IMPR_NOM_VARI="OUI"), FORMAT="MED")

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("A",),
        REFERENCE="AUTRE_ASTER",
        RESULTAT=resnonl,
        NOM_CHAM="HHO_DEPL",
        NOM_CMP="DY",
        VALE_CALC=2.1301163736423283,
        VALE_REFE=2.13651,
        CRITERE="RELATIF",
        PRECISION=1.0e-2,
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("A",),
        REFERENCE="AUTRE_ASTER",
        RESULTAT=resnonl,
        NOM_CHAM="HHO_DEPL",
        NOM_CMP="DX",
        VALE_CALC=-1.6124902036824984,
        VALE_REFE=-1.61818,
        CRITERE="RELATIF",
        PRECISION=1.0e-2,
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("A",),
        RESULTAT=resnonl,
        NOM_CHAM="SIEQ_NOEU",
        NOM_CMP="TRSIG",
        VALE_CALC=-0.12645632606194848,
        CRITERE="RELATIF",
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("C",),
        RESULTAT=resnonl,
        NOM_CHAM="HHO_DEPL",
        NOM_CMP="DY",
        VALE_CALC=0.3512959305754303,
        CRITERE="RELATIF",
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("C",),
        RESULTAT=resnonl,
        NOM_CHAM="HHO_DEPL",
        NOM_CMP="DX",
        VALE_CALC=-0.024991009332364023,
        CRITERE="RELATIF",
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_NO=("C",),
        RESULTAT=resnonl,
        NOM_CHAM="SIEQ_NOEU",
        NOM_CMP="TRSIG",
        VALE_CALC=0.4181578504282206,
        CRITERE="RELATIF",
    )
)

TEST_RESU(
    RESU=_F(
        INST=1.0,
        GROUP_MA=("M200"),
        POINT=1,
        RESULTAT=resnonl,
        NOM_CHAM="EPSI_ELGA",
        NOM_CMP="EPXY",
        VALE_CALC=0.02566179063060396,
        CRITERE="RELATIF",
    )
)


TEST_RESU(
    CHAM_ELEM=_F(
        POINT=1, NOM_CMP="X", GROUP_MA="M200", CHAM_GD=rescoor, VALE_CALC=21.338104996137776
    )
)


FIN()
