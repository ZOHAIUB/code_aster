# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# person_in_charge: david.haboussa at edf.fr

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), IMPR_MACRO="NON")


#########################################################
######### DEFINITION DES PARAMETRES MATERIAUX ###########
#########################################################

# temperature de travail en degres Celsius
Tdegc = 600

# ATTENTION : f en h-1 et non en %/h
feps = 5.2e7
Qeps = 3e5
aK = -3.3e-2
bK = 38.5
fA = 9e4
QA = 2e5
f0 = 3.5e-2
Q0 = -4.85e4

# parametres vitesse de sollicitation
vitesse = 1.0e-5

t_0 = 5.0e-2 / (8.0 * vitesse)
# liste d'archivage
temps_ar = DEFI_LIST_REEL(VALE=[t_0 * i for i in range(9)])

# quelques calculs intermediaires
ep0val = feps * exp(-Qeps / (8.314 * (Tdegc + 273.0)))
Kcoef = aK * (Tdegc + 273.0) + bK
A0 = fA * exp(-QA / (8.314 * (Tdegc + 273.0)))
sig0val = f0 * exp(-Q0 / (8.314 * (Tdegc + 273.0)))

# def des materiaux
ACIER = [None] * 2
# unite en Pa
C_Pa = 1.0e6

POISSON = 0.3
YOUNG = 145000.0
YOUNG_Pa = YOUNG * C_Pa
Kcoef_Pa = Kcoef * C_Pa
H1 = 30000.0
H2 = -280.0
H1_Pa = H1 * C_Pa
H2_Pa = H2 * C_Pa
sig0Pa = sig0val * C_Pa
kc = 1.0e-10


# unite en MPa
ACIER[1] = DEFI_MATERIAU(
    ELAS=_F(E=YOUNG, NU=0.3),
    HAYHURST=_F(
        EPS0=ep0val,
        K=Kcoef,
        H1=H1,
        H2=H2,
        DELTA1=1.0,
        DELTA2=0.0,
        H1ST=0.33,
        H2ST=1.0,
        KC=kc,
        BIGA=A0,
        SIG0=sig0val,
        ALPHAD=0.5,
        S_EQUI_D=1.0,
    ),
)

# unite en MPa
ep0valf = DEFI_CONSTANTE(VALE=ep0val)
Kcoef_Paf = DEFI_CONSTANTE(VALE=Kcoef_Pa)
H1_Paf = DEFI_CONSTANTE(VALE=H1_Pa)
H2_Paf = DEFI_CONSTANTE(VALE=H2_Pa)
un = DEFI_CONSTANTE(VALE=1.0)
zero = DEFI_CONSTANTE(VALE=0.0)
kcf = DEFI_CONSTANTE(VALE=kc)
A0f = DEFI_CONSTANTE(VALE=A0)
sig0Paf = DEFI_CONSTANTE(VALE=sig0Pa)

h1stf = DEFI_CONSTANTE(VALE=0.33)
alphadf = DEFI_CONSTANTE(VALE=0.5)

ACIER[0] = DEFI_MATERIAU(
    ELAS=_F(E=YOUNG_Pa, NU=0.3),
    HAYHURST_FO=_F(
        EPS0=ep0valf,
        K=Kcoef_Paf,
        H1=H1_Paf,
        H2=H2_Paf,
        DELTA1=un,
        DELTA2=zero,
        H1ST=h1stf,
        H2ST=un,
        KC=kcf,
        BIGA=A0f,
        SIG0=sig0Paf,
        ALPHAD=alphadf,
        S_EQUI_D=1.0,
    ),
)


compor = "HAYHURST"


tabresu = TEST_COMPOR(
    OPTION="MECA",
    INFO=1,
    COMPORTEMENT=_F(RELATION=compor, ITER_INTE_MAXI=100, ALGO_INTE="NEWTON"),
    NEWTON=_F(REAC_ITER=1),
    LIST_MATER=ACIER,
    LIST_NPAS=4 * [10] + [10, 15, 25],
    VARI_TEST=("V7", "VMIS", "TRACE"),
    LIST_TOLE=4 * [1.0e-10] + [5.0] + [2.0] + [1.0e-2] + [0.2],
    YOUNG=YOUNG,
    POISSON=0.3,
)


tabres2 = TEST_COMPOR(
    OPTION="MECA",
    INFO=1,
    COMPORTEMENT=_F(RELATION=compor, ITER_INTE_MAXI=100, ALGO_INTE="NEWTON"),
    NEWTON=_F(REAC_ITER=1),
    LIST_MATER=ACIER,
    MODELISATION="C_PLAN",
    LIST_NPAS=4 * [10] + [10, 15, 25],
    VARI_TEST=("V7", "VMIS", "TRACE"),
    LIST_TOLE=4 * [1.0e-10] + [5.0] + [2.0] + [1.0e-2] + [0.4],
    YOUNG=YOUNG,
    POISSON=0.3,
)

FIN()
