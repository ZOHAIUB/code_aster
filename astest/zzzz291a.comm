# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

import math

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))
# =======================================================================
#
# Ce test purement informatique sert a valider la programmation relative
# au mot-cle facteur NORME de l'operateur POST_ELEM
#
#  GEOMETRIE : CUBE 'ABCDEDFG' : A(0,0,0), B(1,0,0), C(1,1,0), D(0,1,0)
#                                E(0,0,1), F(1,0,1), G(1,1,1), H(0,1,1)
#
#  MAILLAGE : NOMBRE DE NOEUDS   : 371
#             NOMBRE DE MAILLES  : 1913
#                      SEG2        48
#                      TRIA3       480
#                      TETRA4      1385
#
# ======================================================================


MA = LIRE_MAILLAGE(FORMAT="MED")

MA = DEFI_GROUP(
    MAILLAGE=MA,
    reuse=MA,
    CREA_GROUP_MA=(
        _F(NOM="CUBE", TOUT="OUI"),
        _F(
            NOM="1D", UNION=("AE", "DA", "HE", "DH", "AB", "EF", "CD", "GH", "BF", "BC", "FG", "CG")
        ),
        _F(NOM="1D2D", UNION=("2D", "1D")),
        _F(NOM="3D", DIFFE=("CUBE", "1D2D")),
    ),
)

MA = DEFI_GROUP(MAILLAGE=MA, reuse=MA, DETR_GROUP_MA=_F(NOM=("1D2D", "1D")))

MA = MODI_MAILLAGE(reuse=MA, MAILLAGE=MA, ORIE_PEAU=_F(GROUP_MA_PEAU="BCGF"))

MO = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="3D"))

ACIER = DEFI_MATERIAU(ELAS=_F(E=2.04e11, NU=0.3, ALPHA=1.092e-05))

CHMAT = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(TOUT="OUI", MATER=ACIER))

CHARG = AFFE_CHAR_MECA(
    MODELE=MO,
    FACE_IMPO=_F(GROUP_MA="BCGF", SANS_GROUP_NO=("B"), DNOR=1),
    DDL_IMPO=_F(GROUP_NO=("A", "B", "D", "E"), DX=0.0, DY=0.0, DZ=0.0),
)
LINST = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=1.0, NOMBRE=1))

RESU = STAT_NON_LINE(
    MODELE=MO, CHAM_MATER=CHMAT, EXCIT=_F(CHARGE=CHARG), INCREMENT=_F(LIST_INST=LINST)
)


RESU = CALC_CHAMP(reuse=RESU, RESULTAT=RESU, CONTRAINTE=("SIGM_ELNO"))

RESU = CALC_CHAMP(
    reuse=RESU,
    RESULTAT=RESU,
    CONTRAINTE="SIGM_NOEU",
    DEFORMATION=("EPSP_NOEU", "EPSP_ELNO", "EPSP_ELGA"),
)


# Extraction des champs (DEPL, SIGM_ELNO, SIEF_ELGA)

DEPL = CREA_CHAMP(
    OPERATION="EXTR", TYPE_CHAM="NOEU_DEPL_R", NOM_CHAM="DEPL", NUME_ORDRE=1, RESULTAT=RESU
)

SIGA = CREA_CHAMP(
    OPERATION="EXTR", TYPE_CHAM="ELGA_SIEF_R", NOM_CHAM="SIEF_ELGA", NUME_ORDRE=1, RESULTAT=RESU
)

SIGELNO = CREA_CHAMP(
    OPERATION="EXTR", TYPE_CHAM="ELNO_SIEF_R", NOM_CHAM="SIGM_ELNO", NUME_ORDRE=1, RESULTAT=RESU
)

SIGNOEU = CREA_CHAMP(
    OPERATION="EXTR", TYPE_CHAM="NOEU_SIEF_R", NOM_CHAM="SIGM_NOEU", NUME_ORDRE=1, RESULTAT=RESU
)

DEPLELGA = CREA_CHAMP(
    OPERATION="DISC", TYPE_CHAM="ELGA_DEPL_R", PROL_ZERO="OUI", CHAM_GD=DEPL, MODELE=MO
)


# Formule

FNORM3 = FORMULE(VALE="DX*DX + DY*DY + DZ*DZ", NOM_PARA=["DX", "DY", "DZ"])

FNORM6 = FORMULE(
    VALE="SIXX*SIXX + SIYY*SIYY + SIZZ*SIZZ + 2*SIXY*SIXY + 2*SIYZ*SIYZ + 2*SIXZ*SIXZ",
    NOM_PARA=["SIXX", "SIYY", "SIZZ", "SIXY", "SIXZ", "SIYZ"],
)


# Creation des champs de fonctions

# 3D
F3DNO = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_NEUT_F",
    MAILLAGE=MA,
    AFFE=_F(GROUP_MA="CUBE", NOM_CMP="X1", VALE_F=FNORM3),
)
F3DEGA = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="ELGA_NEUT_F",
    MODELE=MO,
    PROL_ZERO="OUI",
    AFFE=_F(GROUP_MA="3D", NOM_CMP="X1", VALE_F=FNORM6),
)
F2DEGA = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="ELGA_NEUT_F",
    MODELE=MO,
    PROL_ZERO="OUI",
    AFFE=_F(GROUP_MA="2D", NOM_CMP="X1", VALE_F=FNORM3),
)
F3DENO = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="ELNO_NEUT_F",
    MODELE=MO,
    PROL_ZERO="OUI",
    AFFE=_F(GROUP_MA="3D", NOM_CMP="X1", VALE_F=FNORM6),
)


# Evaluation des valeurs du champ

TEMP00 = CREA_CHAMP(OPERATION="EVAL", TYPE_CHAM="NOEU_NEUT_R", CHAM_F=F3DNO, CHAM_PARA=DEPL)

TEMPAA = CREA_CHAMP(OPERATION="EVAL", TYPE_CHAM="ELGA_NEUT_R", CHAM_F=F3DEGA, CHAM_PARA=SIGA)

TEMPAZ = CREA_CHAMP(OPERATION="EVAL", TYPE_CHAM="ELGA_NEUT_R", CHAM_F=F2DEGA, CHAM_PARA=DEPLELGA)

TEMPBB = CREA_CHAMP(OPERATION="EVAL", TYPE_CHAM="ELNO_NEUT_R", CHAM_F=F3DENO, CHAM_PARA=SIGELNO)


#  Integration de chaque champ

Norme00 = POST_ELEM(
    MODELE=MO,
    CHAM_GD=TEMP00,
    CHAM_MATER=CHMAT,
    INTEGRALE=_F(NOM_CHAM="DEPL", NOM_CMP="X1", GROUP_MA="3D", TYPE_MAILLE="3D"),
)

Norme01 = POST_ELEM(
    MODELE=MO,
    CHAM_GD=TEMP00,
    CHAM_MATER=CHMAT,
    INTEGRALE=_F(NOM_CHAM="DEPL", NOM_CMP="X1", GROUP_MA="CUBE", TYPE_MAILLE="3D"),
)

Norme02 = POST_ELEM(
    MODELE=MO,
    CHAM_GD=TEMP00,
    CHAM_MATER=CHMAT,
    INTEGRALE=_F(NOM_CHAM="DEPL", NOM_CMP="X1", GROUP_MA="3D", TYPE_MAILLE="3D"),
)

Norme03 = POST_ELEM(
    MODELE=MO,
    CHAM_GD=TEMP00,
    CHAM_MATER=CHMAT,
    INTEGRALE=_F(NOM_CHAM="DEPL", NOM_CMP="X1", GROUP_MA="2D", TYPE_MAILLE="2D"),
)

Norme11 = POST_ELEM(
    MODELE=MO,
    CHAM_GD=TEMPAA,
    CHAM_MATER=CHMAT,
    INTEGRALE=_F(NOM_CHAM="SIEF_ELGA", NOM_CMP="X1", GROUP_MA="CUBE", TYPE_MAILLE="3D"),
)


Norme22 = POST_ELEM(
    MODELE=MO,
    CHAM_GD=TEMPBB,
    CHAM_MATER=CHMAT,
    INTEGRALE=_F(NOM_CHAM="SIGM_ELNO", NOM_CMP="X1", GROUP_MA="CUBE", TYPE_MAILLE="3D"),
)


# calcul de la norme (reference):

Norm00 = math.sqrt(Norme00["INTE_X1", 1])

Norm01 = math.sqrt(Norme01["INTE_X1", 1])

Norm02 = math.sqrt(Norme02["INTE_X1", 1])

Norm03 = math.sqrt(Norme03["INTE_X1", 1])

Norm11 = math.sqrt(Norme11["INTE_X1", 1])

Norm22 = math.sqrt(Norme22["INTE_X1", 1])


# calcul de la norme directement par POST_ELEM
# ---------------------------------------------

# champ DEPL

TB3 = POST_ELEM(NORME=_F(TYPE_NORM="L2", TOUT="OUI", CHAM_GD=DEPL, MODELE=MO))

TB4 = POST_ELEM(NORME=_F(TYPE_NORM="L2", GROUP_MA="CUBE", CHAM_GD=DEPL, MODELE=MO))

NDEPL3D = POST_ELEM(
    NORME=_F(TYPE_NORM="L2", GROUP_MA="CUBE", CHAM_GD=DEPL, TYPE_MAILLE="3D", MODELE=MO)
)

TB6 = POST_ELEM(
    NORME=_F(TYPE_NORM="L2", GROUP_MA="CUBE", CHAM_GD=DEPL, TYPE_MAILLE="2D", MODELE=MO)
)

# champ SIEF_ELGA

TBA1 = POST_ELEM(NORME=_F(TYPE_NORM="L2", TOUT="OUI", CHAM_GD=SIGA, MODELE=MO))

TBA2 = POST_ELEM(NORME=_F(TYPE_NORM="L2", GROUP_MA="CUBE", CHAM_GD=SIGA, MODELE=MO))

# champ SIEF_ELGA (apres interpolation aux noeuds)

TBA3 = POST_ELEM(NORME=_F(TYPE_NORM="L2", TOUT="OUI", CHAM_GD=SIGNOEU, MODELE=MO))

TBA4 = POST_ELEM(NORME=_F(TYPE_NORM="L2", GROUP_MA="CUBE", CHAM_GD=SIGNOEU, MODELE=MO))

NSIEGA = POST_ELEM(
    NORME=_F(TYPE_NORM="L2", GROUP_MA="CUBE", CHAM_GD=SIGA, TYPE_MAILLE="3D", MODELE=MO)
)
# Coverage POST_ELEM

TEST1 = POST_ELEM(
    MINMAX=(
        _F(NOM_CHAM="SIEF_ELGA", NOM_CMP=("SIYY",), RESULTAT=RESU, TOUT="OUI"),
        _F(NOM_CHAM="EPSP_ELGA", NOM_CMP=("EPYY",), RESULTAT=RESU, GROUP_MA="CUBE"),
        _F(NOM_CHAM="VARI_ELGA", NOM_CMP=("V1",), RESULTAT=RESU, NUME_ORDRE=1, GROUP_MA="CUBE"),
    )
)
TEST2 = POST_ELEM(
    RESULTAT=RESU,
    CHAM_MATER=CHMAT,
    MODELE=MO,
    INTEGRALE=(
        _F(NOM_CHAM="EPSP_ELNO", NOM_CMP="EPXX", TOUT="OUI", TYPE_MAILLE="3D"),
        _F(NOM_CHAM="EPSP_NOEU", NOM_CMP="EPXX", TOUT="OUI", TYPE_MAILLE="3D"),
    ),
)
TEST3 = POST_ELEM(
    INST=(1.0),
    RESULTAT=RESU,
    VOLUMOGRAMME=(
        _F(GROUP_MA=("CUBE",), NOM_CHAM="EPSP_ELGA", NOM_CMP="EPXX", SEUIL=0.1),
        _F(GROUP_MA=("CUBE",), NOM_CHAM="EPSP_ELNO", NOM_CMP="EPXX", SEUIL=0.1),
        _F(GROUP_MA=("CUBE",), NOM_CHAM="EPSP_ELNO", NOM_CMP="EPXX", SEUIL=0.1),
    ),
)

TEST_TABLE(
    FILTRE=(
        _F(
            CRITERE="RELATIF",
            CRIT_COMP="EQ",
            NOM_PARA="CHAMP_GD",
            PRECISION=0.001,
            VALE_K="SIEF_ELGA",
        ),
        _F(CRITERE="RELATIF", CRIT_COMP="EQ", NOM_PARA="NUME_ORDRE", PRECISION=0.001, VALE_I=1),
    ),
    NOM_PARA="MAX_SIYY",
    TABLE=TEST1,
    VALE_CALC=(177077342499.198,),
)

TEST_TABLE(
    CRITERE="ABSOLU",
    FILTRE=(
        _F(
            CRITERE="RELATIF",
            CRIT_COMP="EQ",
            NOM_PARA="CHAMP_GD",
            PRECISION=0.001,
            VALE_K="EPSP_ELGA",
        ),
        _F(CRITERE="RELATIF", CRIT_COMP="EQ", NOM_PARA="NUME_ORDRE", PRECISION=0.001, VALE_I=1),
    ),
    NOM_PARA="MAX_EPYY",
    ORDRE_GRANDEUR=1.0,
    REFERENCE="AUTRE_ASTER",
    TABLE=TEST1,
    VALE_ABS="OUI",
    VALE_CALC=(0.0,),
    VALE_REFE=(0.0,),
)

TEST_TABLE(
    CRITERE="ABSOLU",
    FILTRE=(
        _F(
            CRITERE="RELATIF",
            CRIT_COMP="EQ",
            NOM_PARA="NOM_CHAM",
            PRECISION=0.001,
            VALE_K="EPSP_NOEU",
        ),
        _F(CRITERE="RELATIF", CRIT_COMP="EQ", NOM_PARA="NUME_ORDRE", PRECISION=0.001, VALE_I=1),
    ),
    NOM_PARA="INTE_EPXX",
    ORDRE_GRANDEUR=1.0,
    REFERENCE="AUTRE_ASTER",
    TABLE=TEST2,
    VALE_ABS="OUI",
    VALE_CALC=(0.0,),
    VALE_REFE=(0.0,),
)

TEST_TABLE(
    FILTRE=(
        _F(
            CRITERE="RELATIF",
            CRIT_COMP="EQ",
            NOM_PARA="NOM_CHAM",
            PRECISION=0.001,
            VALE_K="EPSP_ELGA",
        ),
        _F(CRITERE="RELATIF", CRIT_COMP="EQ", NOM_PARA="INTERVALLE", PRECISION=0.001, VALE_I=1),
    ),
    NOM_PARA="DISTRIBUTION",
    TABLE=TEST3,
    VALE_CALC=(100.0,),
)

# champ SIGM_ELNO

TBB1 = POST_ELEM(NORME=_F(TYPE_NORM="L2", TOUT="OUI", CHAM_GD=SIGELNO, MODELE=MO))

TBB2 = POST_ELEM(NORME=_F(TYPE_NORM="L2", GROUP_MA="CUBE", CHAM_GD=SIGELNO, MODELE=MO))

# champ SIGM_ELNO (apres interpolation aux noeuds)

TBB3 = POST_ELEM(NORME=_F(TYPE_NORM="L2", TOUT="OUI", CHAM_GD=SIGNOEU, MODELE=MO))

TBB4 = POST_ELEM(NORME=_F(TYPE_NORM="L2", GROUP_MA="CUBE", CHAM_GD=SIGNOEU, MODELE=MO))

NSIGNO = POST_ELEM(
    NORME=_F(TYPE_NORM="L2", GROUP_MA="CUBE", CHAM_GD=SIGELNO, TYPE_MAILLE="3D", MODELE=MO)
)

TBB6 = POST_ELEM(
    NORME=_F(TYPE_NORM="L2", GROUP_MA="CUBE", CHAM_GD=SIGNOEU, TYPE_MAILLE="2D", MODELE=MO)
)

# champ NEUT_R

TEMPC = CREA_CHAMP(
    OPERATION="ASSE",
    TYPE_CHAM="ELGA_NEUT_R",
    MODELE=MO,
    PROL_ZERO="OUI",
    ASSE=(
        _F(CHAM_GD=SIGA, GROUP_MA="3D", NOM_CMP_RESU="X1", NOM_CMP="SIXX"),
        _F(CHAM_GD=SIGA, GROUP_MA="3D", NOM_CMP_RESU="X2", NOM_CMP="SIYY"),
        _F(CHAM_GD=SIGA, GROUP_MA="3D", NOM_CMP_RESU="X3", NOM_CMP="SIZZ"),
        _F(CHAM_GD=SIGA, GROUP_MA="3D", NOM_CMP_RESU="X4", NOM_CMP="SIXY"),
        _F(CHAM_GD=SIGA, GROUP_MA="3D", NOM_CMP_RESU="X5", NOM_CMP="SIXZ"),
        _F(CHAM_GD=SIGA, GROUP_MA="3D", NOM_CMP_RESU="X6", NOM_CMP="SIYZ"),
    ),
)

TBC1 = POST_ELEM(
    NORME=_F(
        TYPE_NORM="L2",
        CHAM_GD=TEMPC,
        GROUP_MA="CUBE",
        MODELE=MO,
        COEF_MULT=(1.0, 1.0, 1.0, 2.0, 2.0, 2.0),
    )
)


#  tests
# =======

# -------------------------
# champ DEPL (3D)

TEST_TABLE(
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.5e-3,
    VALE_CALC=0.931098810,
    VALE_REFE=0.93237081353046525,
    NOM_PARA="VALE_NORM",
    TABLE=NDEPL3D,
)

# champ SIEF_ELGA (3D)

TEST_TABLE(
    REFERENCE="AUTRE_ASTER",
    PRECISION=9.9999999999999995e-07,
    VALE_CALC=9.03146507e10,
    VALE_REFE=9.0314650667997894e10,
    NOM_PARA="VALE_NORM",
    TABLE=NSIEGA,
)

# champ SIGM_ELNO (3D)

TEST_TABLE(
    REFERENCE="AUTRE_ASTER",
    PRECISION=9.9999999999999995e-07,
    VALE_CALC=9.03146507e10,
    VALE_REFE=9.0314650667997864e10,
    NOM_PARA="VALE_NORM",
    TABLE=NSIGNO,
)

# -------------------------

# champ DEPL (2D et 3D) : TOUT='OUI'
TEST_TABLE(VALE_CALC=2.4263499999999998, NOM_PARA="VALE_NORM", TABLE=TB3)

# champ DEPL (2D et 3D) : GROUP_MA='CUBE'
TEST_TABLE(VALE_CALC=2.4263499999999998, NOM_PARA="VALE_NORM", TABLE=TB4)

# champ DEPL (2D) : GROUP_MA='CUBE'
TEST_TABLE(
    REFERENCE="AUTRE_ASTER",
    PRECISION=5.0000000000000001e-3,
    VALE_CALC=2.240588536,
    VALE_REFE=2.2512414458642365,
    NOM_PARA="VALE_NORM",
    TABLE=TB6,
)

# -------------------------

# champ SIEF_ELGA (3D) : TOUT='OUI'
TEST_TABLE(
    REFERENCE="AUTRE_ASTER",
    PRECISION=9.9999999999999995e-07,
    VALE_CALC=9.03146507e10,
    VALE_REFE=9.0314650667997894e10,
    NOM_PARA="VALE_NORM",
    TABLE=TBA1,
)

# champ SIEF_ELGA (3D) : GROUP_MA='CUBE'
TEST_TABLE(
    REFERENCE="AUTRE_ASTER",
    PRECISION=9.9999999999999995e-07,
    VALE_CALC=9.03146507e10,
    VALE_REFE=9.0314650667997894e10,
    NOM_PARA="VALE_NORM",
    TABLE=TBA2,
)

# champ SIEF_ELGA (2D et 3D) :  TOUT='OUI'
# apres interpolation aux noeuds
TEST_TABLE(VALE_CALC=2.6616249434387e11, NOM_PARA="VALE_NORM", TABLE=TBA3)

# champ SIEF_ELGA (2D et 3D) :  GROUP_MA='CUBE'
# apres interpolation aux noeuds
TEST_TABLE(VALE_CALC=2.6616249434387e11, NOM_PARA="VALE_NORM", TABLE=TBA4)

# -------------------------

# champ SIGM_ELNO (3D) : TOUT='OUI'
TEST_TABLE(
    REFERENCE="AUTRE_ASTER",
    PRECISION=9.9999999999999995e-07,
    VALE_CALC=9.03146507e10,
    VALE_REFE=9.0314650667997864e10,
    NOM_PARA="VALE_NORM",
    TABLE=TBB1,
)

# champ SIGM_ELNO (3D) : GROUP_MA='CUBE'
TEST_TABLE(
    REFERENCE="AUTRE_ASTER",
    PRECISION=9.9999999999999995e-07,
    VALE_CALC=9.03146507e10,
    VALE_REFE=9.0314650667997864e10,
    NOM_PARA="VALE_NORM",
    TABLE=TBB2,
)

# champ SIGM_ELNO (2D et 3D) :  TOUT='OUI'
# apres interpolation aux noeuds
TEST_TABLE(VALE_CALC=2.6616249434387e11, NOM_PARA="VALE_NORM", TABLE=TBB3)

# champ SIGM_ELNO (2D et 3D) :  GROUP_MA='CUBE'
# apres interpolation aux noeuds
TEST_TABLE(VALE_CALC=2.6616249434387e11, NOM_PARA="VALE_NORM", TABLE=TBB4)

# champ SIGM_ELNO (2D) :  GROUP_MA='CUBE'
# apres interpolation aux noeuds
TEST_TABLE(VALE_CALC=2.5926081379162e11, NOM_PARA="VALE_NORM", TABLE=TBB6)

# champ NEUT_R (3D) :  GROUP_MA='CUBE'
TEST_TABLE(
    REFERENCE="AUTRE_ASTER",
    VALE_CALC=9.03146507e10,
    VALE_REFE=9.0314650667997864e10,
    NOM_PARA="VALE_NORM",
    TABLE=TBC1,
)

#  VERIFICATION DE LA PRISE EN COMPTE DU FILTRAGE DES ELEMENTS FINIS
#
# ======================================================================

# Definition du probleme mixte 3D/coque
MOMIX = AFFE_MODELE(
    MAILLAGE=MA,
    AFFE=(
        _F(GROUP_MA="3D", PHENOMENE="MECANIQUE", MODELISATION="3D"),
        _F(GROUP_MA="2D", PHENOMENE="MECANIQUE", MODELISATION="DKT"),
    ),
)


CARAEL = AFFE_CARA_ELEM(MODELE=MOMIX, COQUE=_F(GROUP_MA="2D", EPAIS=1.0e-1, ANGL_REP=(20, 10)))

CHARMIX = AFFE_CHAR_MECA(
    MODELE=MOMIX,
    FACE_IMPO=_F(GROUP_MA="BCGF", SANS_GROUP_NO=("B"), DNOR=1),
    DDL_IMPO=_F(GROUP_NO=("A", "B", "D", "E"), DX=0.0, DY=0.0, DZ=0.0),
)

RESUMIX = MECA_STATIQUE(MODELE=MOMIX, CARA_ELEM=CARAEL, CHAM_MATER=CHMAT, EXCIT=_F(CHARGE=CHARMIX))

# Calcul de la norme L2 par POST_ELEM/NORME
NSIGMIX = POST_ELEM(
    NORME=_F(TYPE_NORM="L2", RESULTAT=RESUMIX, NOM_CHAM="SIEF_ELGA", GROUP_MA="3D", MODELE=MOMIX)
)

# Calcul de la norme L2 par POST_ELEM/INTEGRALE
SIGNOMIX = CREA_CHAMP(
    OPERATION="EXTR", TYPE_CHAM="ELGA_SIEF_R", NOM_CHAM="SIEF_ELGA", NUME_ORDRE=1, RESULTAT=RESUMIX
)

F3DSIG = CREA_CHAMP(
    OPERATION="AFFE",
    TYPE_CHAM="ELGA_NEUT_F",
    PROL_ZERO="OUI",
    MODELE=MOMIX,
    AFFE=_F(GROUP_MA="3D", NOM_CMP="X1", VALE_F=FNORM6),
)

TEMPZZ = CREA_CHAMP(OPERATION="EVAL", TYPE_CHAM="ELGA_NEUT_R", CHAM_F=F3DSIG, CHAM_PARA=SIGNOMIX)

NormeZZ = POST_ELEM(
    MODELE=MOMIX,
    CHAM_GD=TEMPZZ,
    CHAM_MATER=CHMAT,
    INTEGRALE=_F(NOM_CHAM="DEPL", NOM_CMP="X1", GROUP_MA="3D", TYPE_MAILLE="3D"),
)

NormZZ = math.sqrt(NormeZZ["INTE_X1", 1])

# Comparaison
TEST_TABLE(
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-08,
    VALE_CALC=9.38681238e10,
    VALE_REFE=9.3868123779196365e10,
    NOM_PARA="VALE_NORM",
    TABLE=NSIGMIX,
)

FIN()
