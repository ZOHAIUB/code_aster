# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="NON"), IMPR_MACRO="OUI")

# >>>>>>>>>>
#  Materials
# <<<<<<<<<<

youngPA = 7.0e9
nu = 0.3
pciPA = 1.0e6
ciPA = 1.0e3
MCC = 0.5
Nd = 1.0
mB = 10.0
aB = 0.75
om = 15.0
tau = 2.0e2
nv = 2.0
HpPA = youngPA / 2.5
HvPA = 0.01 * youngPA

youngMPA = youngPA / 1.0e6
pciMPA = pciPA / 1.0e6
ciMPA = ciPA / 1.0e6
HpMPA = HpPA / 1.0e6
HvMPA = HvPA / 1.0e6

MAT = [None] * 2

MAT[0] = DEFI_MATERIAU(
    ELAS=_F(E=youngPA, NU=nu, ALPHA=0.0),
    NLH_CSRM=_F(
        YoungModulus=youngPA,
        PoissonRatio=nu,
        IsoCompElasLim=pciPA,
        IsoTensElasLim=ciPA,
        MCCSlopeCSL=MCC,
        NLHIndex=Nd,
        mBigoCritCoef=mB,
        aBigoCritCoef=aB,
        IncompIndex=om,
        Tau=tau,
        PerzynaExpo=nv,
        NLHModulusP=HpPA,
        NLHModulusV=HvPA,
    ),
)

MAT[1] = DEFI_MATERIAU(
    ELAS=_F(E=youngMPA, NU=nu, ALPHA=0.0),
    NLH_CSRM=_F(
        YoungModulus=youngMPA,
        PoissonRatio=nu,
        IsoCompElasLim=pciMPA,
        IsoTensElasLim=ciMPA,
        MCCSlopeCSL=MCC,
        NLHIndex=Nd,
        mBigoCritCoef=mB,
        aBigoCritCoef=aB,
        IncompIndex=om,
        Tau=tau,
        PerzynaExpo=nv,
        NLHModulusP=HpMPA,
        NLHModulusV=HvMPA,
    ),
)

# lst_npas_long = 4*[1]+[1,5,25,125,625,3125]
# lst_tole_long = [1.e-00,1.e-10,1.e-10,1.e-10]+[1.e-1]+[3.e-2,1.e-2,7.e-3,2.e-3,6.e-5,1.e-8]+[1.e-8]
lst_npas_shor = 4 * [1] + [1, 5, 25]
lst_tole_shor = (
    [1.0e-00, 1.0e-10, 1.0e-10, 1.0e-10] + [2.0e-1] + [2.0e-1, 2.0e-1, 2.0e-1] + [1.0e-8]
)

TRESU = TEST_COMPOR(
    INFO=2,
    OPTION="MECA",
    COMPORTEMENT=_F(RELATION="NLH_CSRM", RESI_INTE=1.0e-14),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-10),
    NEWTON=_F(REAC_ITER=1),
    LIST_MATER=MAT,
    LIST_NPAS=lst_npas_shor,
    LIST_TOLE=lst_tole_shor,
    VARI_TEST=("V7", "V8", "V15", "VMIS", "TRACE"),
    YOUNG=youngPA,
    POISSON=nu,
)

IMPR_TABLE(TABLE=TRESU, UNITE=8)

FIN()
