# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# ======================================================================
#


from code_aster.Commands import *

# Calcul de la solution analytique
# ---------------------------------
from code_aster.MacroCommands.Contrib.essai_triaxial import Triaxial_DR

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))

# modules mecaniques [kPa]
K = 516.2e6
G = 238.2e6
# =>
YOUNG = 9.0 * K * G / (3.0 * K + G)
POISSON = (3.0 * K - 2.0 * G) / (6.0 * K + 2.0 * G)

print("young=", YOUNG, " /// nu=", POISSON)

# pression de preconsolidation [en kPa]
PCO = 50.0e3

# *******************************************************************
#
#                     INCREMENTS DE CHARGEMENT
#
# *******************************************************************

nb_inst = 200
# depzz   =-.000001
epzz_max = 0.0003
depzz = epzz_max / nb_inst
tfin = 100.0


# ***********************************************************************
#    ESSAI TRIAXIAL NON DRAINE CYCLIQUE
# ***********************************************************************
SOL = DEFI_MATERIAU(
    ELAS=_F(E=YOUNG, NU=POISSON, ALPHA=0.0), MOHR_COULOMB=_F(PHI=33.0, ANGDIL=27.0, COHESION=1.0e3)
)

CALC_ESSAI_GEOMECA(
    INFO=1,
    MATER=SOL,
    COMPORTEMENT=_F(RELATION="MOHR_COULOMB", ITER_INTE_PAS=20),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-10, ITER_GLOB_MAXI=5),
    #
    # Essai triaxial draine
    ESSAI_TRIA_DR_M_D=_F(
        PRES_CONF=PCO, EPSI_IMPOSE=epzz_max, NB_INST=nb_inst, TABLE_RESU=CO("TSIMU")
    ),
)

IMPR_TABLE(TABLE=TSIMU)

# =============================================================================
#
#           TEST DES RESULTATS PAR RAPPORT A UNE SOLUTION ANALYTIQUE
#
# =============================================================================


epzz, sizz, sixx, epsivp, epsidp = Triaxial_DR(K, G, 33.0, 27.0, 1.0e3, -PCO, -depzz, -epzz_max)


TEST_TABLE(
    NOM_PARA="SIG_LAT",
    TABLE=TSIMU,
    FILTRE=_F(NOM_PARA="EPS_AXI", VALE=3.0e-4, CRITERE="ABSOLU", PRECISION=1e-7),
    # Non-regression
    VALE_CALC=50000.0,
    # Reference
    REFERENCE="ANALYTIQUE",
    VALE_REFE=-sixx[-1],
)

TEST_TABLE(
    NOM_PARA="SIG_AXI",
    TABLE=TSIMU,
    FILTRE=_F(NOM_PARA="EPS_AXI", VALE=3.0e-4, CRITERE="ABSOLU", PRECISION=1e-7),
    # Non-regression
    VALE_CALC=1.7328954160409e05,
    # Reference
    REFERENCE="ANALYTIQUE",
    VALE_REFE=-sizz[-1],
)

FIN()
