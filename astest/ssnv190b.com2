# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2024 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#                 ACIERS 300 SOUS IRRADIATIONS
#
# person_in_charge: jean-luc.flejou at edf.fr

POURSUITE(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

from ssnv190b_mater import define_material

ACIERI, ACIERS, REFER = define_material()

# Valeurs de references,  Pas : 0.1
itps = 0
icha = 1
icmp = 2
irefe = 3
icalc = 4
icrit = 5
iprec = 6

materS = AFFE_MATERIAU(
    MAILLAGE=mail,
    AFFE=_F(TOUT="OUI", MATER=ACIERS),
    AFFE_VARC=(
        _F(TOUT="OUI", EVOL=Irrad, NOM_VARC="IRRA"),
        _F(TOUT="OUI", EVOL=Temper, NOM_VARC="TEMP", VALE_REF=25.0),
    ),
)

linstS = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=90.0, PAS=2.5),))

DEFLISTS = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=linstS), ECHEC=_F(ACTION="DECOUPE", SUBD_METHODE="MANUEL", SUBD_NIVEAU=6)
)

STATS = STAT_NON_LINE(
    MODELE=mode,
    CHAM_MATER=materS,
    INCREMENT=_F(LIST_INST=DEFLISTS, INST_FIN=90.0),
    EXCIT=_F(CHARGE=CDepl),
    NEWTON=_F(REAC_INCR=1, REAC_ITER=1),
    CONVERGENCE=_F(ITER_GLOB_MAXI=20, RESI_GLOB_RELA=1.0e-10, RESI_GLOB_MAXI=5.0e-03, ARRET="OUI"),
    COMPORTEMENT=(
        _F(
            DEFORMATION="PETIT",
            TOUT="OUI",
            RELATION="IRRAD3M",
            ITER_INTE_PAS=0,
            ITER_INTE_MAXI=120,
            RESI_INTE=1.0e-09,
        ),
    ),
)


for ii in range(len(REFER)):
    TEST_RESU(
        RESU=_F(
            RESULTAT=STATS,
            INST=REFER[ii][itps],
            GROUP_MA="CUBE",
            POINT=1,
            NOM_CHAM=REFER[ii][icha],
            NOM_CMP=REFER[ii][icmp],
            CRITERE=REFER[ii][icrit],
            TOLE_MACHINE=(REFER[ii][iprec], 1.0e-08),
            PRECISION=REFER[ii][iprec],
            REFERENCE="AUTRE_ASTER",
            VALE_CALC=REFER[ii][icalc],
            VALE_REFE=REFER[ii][irefe],
        )
    )

# [][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][]
# Borne inferieure


materI = AFFE_MATERIAU(
    MAILLAGE=mail,
    AFFE=_F(TOUT="OUI", MATER=ACIERI),
    AFFE_VARC=(
        _F(TOUT="OUI", EVOL=Irrad, NOM_VARC="IRRA"),
        _F(TOUT="OUI", EVOL=Temper, NOM_VARC="TEMP", VALE_REF=25.0),
    ),
)

linstI = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=90.0, PAS=1.0),))

DEFLISTI = DEFI_LIST_INST(
    DEFI_LIST=_F(LIST_INST=linstI), ECHEC=_F(ACTION="DECOUPE", SUBD_METHODE="MANUEL", SUBD_NIVEAU=6)
)

STATI = STAT_NON_LINE(
    MODELE=mode,
    CHAM_MATER=materI,
    INCREMENT=_F(LIST_INST=DEFLISTI, INST_FIN=90.0),
    EXCIT=_F(CHARGE=CDepl),
    NEWTON=_F(REAC_INCR=1, REAC_ITER=1),
    CONVERGENCE=_F(ITER_GLOB_MAXI=20, RESI_GLOB_RELA=1.0e-10, RESI_GLOB_MAXI=5.0e-03, ARRET="OUI"),
    COMPORTEMENT=(
        _F(
            DEFORMATION="PETIT",
            TOUT="OUI",
            RELATION="IRRAD3M",
            ITER_INTE_PAS=0,
            ITER_INTE_MAXI=120,
            RESI_INTE=1.0e-09,
        ),
    ),
)


# VARIABLES INTERNES
#   PLASTICITE, ETAI, PI,  GONFLEMENT
#   V1          V2    V3,  V4
# Valeurs de references,  Pas : 0.05
itps = 0
icha = 1
icmp = 2
irefe = 3
icalc = 4
icrit = 5
iprec = 6
REFER = [
    #   INST    NOM_CHAM      NOM_CMP  VALE_REFE             VALE_CALC             CRITERE   PRECISION
    (10.0, "SIEF_ELGA", "SIXX", 3.1702167756237e02, 3.1702167756237e02, "RELATIF", 2.0e-04),
    (20.0, "SIEF_ELGA", "SIXX", -2.0448046465750e02, -2.0448046465750e02, "RELATIF", 2.0e-04),
    (30.0, "SIEF_ELGA", "SIXX", -3.2200423465750e02, -3.2200423465750e02, "RELATIF", 2.0e-04),
    (40.0, "SIEF_ELGA", "SIXX", 7.5541402373873e02, 7.5541402373873e02, "RELATIF", 2.0e-04),
    (50.0, "SIEF_ELGA", "SIXX", -3.3832459063422e02, -3.3832459063422e02, "RELATIF", 2.0e-04),
    (60.0, "SIEF_ELGA", "SIXX", -3.4691059304758e02, -3.4677908173600e02, "RELATIF", 4.0e-04),
    (70.0, "SIEF_ELGA", "SIXX", 7.4541577458488e02, 7.4556891726700e02, "RELATIF", 3.0e-04),
    (80.0, "SIEF_ELGA", "SIXX", -3.4691059304743e02, -3.4677908173600e02, "RELATIF", 4.0e-04),
    (90.0, "SIEF_ELGA", "SIXX", -2.6843152333999e02, -2.6834102213300e02, "RELATIF", 4.1e-04),
    (10.0, "VARI_ELGA", "V1", 1.4016974246408e-03, 1.4016974246408e-03, "RELATIF", 1.0e-06),
    (20.0, "VARI_ELGA", "V1", 5.0406372433913e-03, 5.0406372433913e-03, "RELATIF", 1.0e-06),
    (30.0, "VARI_ELGA", "V1", 5.0406372433913e-03, 5.0406372433913e-03, "RELATIF", 1.0e-06),
    (40.0, "VARI_ELGA", "V1", 5.1378452310498e-03, 5.1378452310498e-03, "RELATIF", 1.0e-06),
    (50.0, "VARI_ELGA", "V1", 5.1378452310498e-03, 5.1378452310498e-03, "RELATIF", 1.0e-06),
    (60.0, "VARI_ELGA", "V1", 5.1378452310498e-03, 5.1378452310498e-03, "RELATIF", 1.0e-06),
    (70.0, "VARI_ELGA", "V1", 5.1378452310498e-03, 5.1378452310498e-03, "RELATIF", 1.0e-06),
    (80.0, "VARI_ELGA", "V1", 5.1378452310498e-03, 5.1378452310498e-03, "RELATIF", 1.0e-06),
    (90.0, "VARI_ELGA", "V1", 5.1378452310498e-03, 5.1378452310498e-03, "RELATIF", 1.0e-06),
    (10.0, "VARI_ELGA", "V2", 0.0000000000000e00, 0.0000000000000e00, "ABSOLU", 5.0e-04),
    (20.0, "VARI_ELGA", "V2", 0.0000000000000e00, 0.0000000000000e00, "ABSOLU", 5.0e-04),
    (30.0, "VARI_ELGA", "V2", 5.0781235232283e02, 5.0799297983300e02, "RELATIF", 4.0e-04),
    (40.0, "VARI_ELGA", "V2", 5.0781235232283e02, 5.0799297983300e02, "RELATIF", 4.0e-04),
    (50.0, "VARI_ELGA", "V2", 5.0781235232283e02, 5.0799297983300e02, "RELATIF", 4.0e-04),
    (60.0, "VARI_ELGA", "V2", 1.2802574044891e03, 1.2805133886100e03, "RELATIF", 3.0e-04),
    (70.0, "VARI_ELGA", "V2", 1.2802574044892e03, 1.2805133886100e03, "RELATIF", 3.0e-04),
    (80.0, "VARI_ELGA", "V2", 1.2802574044892e03, 1.2805133886100e03, "RELATIF", 3.0e-04),
    (90.0, "VARI_ELGA", "V2", 1.8809534564567e03, 1.8811296150600e03, "RELATIF", 3.0e-04),
    (10.0, "VARI_ELGA", "V3", 0.0000000000000e00, 0.0000000000000e00, "ABSOLU", 3.0e-10),
    (20.0, "VARI_ELGA", "V3", 0.0000000000000e00, 0.0000000000000e00, "ABSOLU", 3.0e-10),
    (30.0, "VARI_ELGA", "V3", 0.0000000000000e00, 0.0000000000000e00, "ABSOLU", 3.0e-10),
    (40.0, "VARI_ELGA", "V3", 0.0000000000000e00, 0.0000000000000e00, "ABSOLU", 3.0e-10),
    (50.0, "VARI_ELGA", "V3", 0.0000000000000e00, 0.0000000000000e00, "ABSOLU", 3.0e-10),
    (60.0, "VARI_ELGA", "V3", 1.1635876577368e-03, 1.1643709691400e-03, "RELATIF", 7.0e-04),
    (70.0, "VARI_ELGA", "V3", 1.1635876577370e-03, 1.1643709691400e-03, "RELATIF", 7.0e-04),
    (80.0, "VARI_ELGA", "V3", 1.1635876577370e-03, 1.1643709691400e-03, "RELATIF", 7.0e-04),
    (90.0, "VARI_ELGA", "V3", 3.0017175767576e-03, 3.0022566220700e-03, "RELATIF", 2.0e-04),
    (10.0, "VARI_ELGA", "V4", 0.0000000000000e00, 0.0000000000000e00, "ABSOLU", 3.0e-08),
    (20.0, "VARI_ELGA", "V4", 0.0000000000000e00, 0.0000000000000e00, "ABSOLU", 3.0e-08),
    (30.0, "VARI_ELGA", "V4", 7.0000000000000e-04, 7.0000000000000e-04, "ABSOLU", 3.0e-08),
    (40.0, "VARI_ELGA", "V4", 7.0000000000000e-04, 7.0000000000000e-04, "ABSOLU", 3.0e-08),
    (50.0, "VARI_ELGA", "V4", 7.0000000000000e-04, 7.0000000000000e-04, "ABSOLU", 3.0e-08),
    (60.0, "VARI_ELGA", "V4", 1.9147279648387e-03, 1.9147279648387e-03, "ABSOLU", 3.0e-08),
    (70.0, "VARI_ELGA", "V4", 1.9147279648389e-03, 1.9147279648389e-03, "ABSOLU", 3.0e-08),
    (80.0, "VARI_ELGA", "V4", 1.9147279648389e-03, 1.9147279648389e-03, "ABSOLU", 3.0e-08),
    (90.0, "VARI_ELGA", "V4", 3.2854175626796e-03, 3.2854175626796e-03, "ABSOLU", 3.0e-08),
]

for ii in range(len(REFER)):
    TEST_RESU(
        RESU=_F(
            RESULTAT=STATI,
            INST=REFER[ii][itps],
            GROUP_MA="CUBE",
            POINT=1,
            NOM_CHAM=REFER[ii][icha],
            NOM_CMP=REFER[ii][icmp],
            CRITERE=REFER[ii][icrit],
            TOLE_MACHINE=(REFER[ii][iprec], 1.0e-08),
            PRECISION=REFER[ii][iprec],
            REFERENCE="AUTRE_ASTER",
            VALE_CALC=REFER[ii][icalc],
            VALE_REFE=REFER[ii][irefe],
        )
    )

FIN()
