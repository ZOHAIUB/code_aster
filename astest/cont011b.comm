# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------
from code_aster.MacroCommands.defi_cont import DEFI_CONT

# taken from ssnp165

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

################
### MAILLAGE ###
################

MA = LIRE_MAILLAGE(FORMAT="MED")

MA = MODI_MAILLAGE(
    reuse=MA, MAILLAGE=MA, ORIE_PEAU=(_F(GROUP_MA_PEAU="SCO1"), _F(GROUP_MA_PEAU="SCO2"))
)

##############
### MODELE ###
##############

MO = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="D_PLAN"))
#################
### MATERIAUX ###
#################

E0 = 1.0e5
ET0 = 9.0e4
RH0 = (ET0 * E0) / (E0 - ET0)
BASUP = DEFI_MATERIAU(ELAS=_F(E=1.0e5, NU=0.3, RHO=2.7e-5), ECRO_NL=_F(RH=RH0, R0=10.0e100))

E1 = 1.0e3
ET1 = 9.0e2
RH1 = (ET1 * E1) / (E1 - ET1)
BAINF = DEFI_MATERIAU(ELAS=_F(E=1.0e3, NU=0.3, RHO=2.7e-5), ECRO_NL=_F(RH=RH1, R0=10.0e100))

E2 = 3.0e2
ET2 = 10
RH2 = (ET2 * E2) / (E2 - ET2)
BLOCK = DEFI_MATERIAU(ELAS=_F(E=3.0e2, NU=0.3, RHO=2.7e-5), ECRO_NL=_F(RH=RH2, R0=10.0e100))

CHMAT = AFFE_MATERIAU(
    MAILLAGE=MA,
    MODELE=MO,
    AFFE=(
        _F(GROUP_MA="BASUP", MATER=BASUP),
        _F(GROUP_MA="BAINF", MATER=BAINF),
        _F(GROUP_MA="BLOC", MATER=BLOCK),
    ),
)

########################
### CHARGEMENT ET CL ###
########################

CHA1 = AFFE_CHAR_MECA(
    MODELE=MO, DDL_IMPO=(_F(GROUP_MA="SU1", DX=0.0, DY=0.0), _F(GROUP_MA="DEPL", DX=0.0, DY=-90.0))
)

RAMPE = DEFI_FONCTION(
    NOM_PARA="INST", VALE=(0.0, 0.0, 1.0, 1.0), PROL_DROITE="LINEAIRE", PROL_GAUCHE="LINEAIRE"
)

###############
### CONTACT ###
###############

coef = E2 / 100
NGENE = DEFI_CONT(
    MODELE=MO,
    ZONE=_F(
        GROUP_MA_MAIT="SCO2",
        GROUP_MA_ESCL="SCO1",
        FROTTEMENT="OUI",
        TYPE_FROT="COULOMB",
        COULOMB=0.5,
        COEF_CONT=coef,
    ),
)

######################
### LISTE INSTANTS ###
######################

L_INST = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=1.0, NOMBRE=50),))

LINST = DEFI_LIST_INST(
    METHODE="MANUEL", DEFI_LIST=_F(LIST_INST=L_INST), ECHEC=_F(SUBD_PAS=4, SUBD_NIVEAU=6)
)

##################
### RESOLUTION ###
##################

RESU = MECA_NON_LINE(
    MODELE=MO,
    CHAM_MATER=CHMAT,
    EXCIT=(_F(CHARGE=CHA1, FONC_MULT=RAMPE)),
    CONTACT=_F(DEFINITION=NGENE, RESI_GEOM=1.0e1),
    COMPORTEMENT=_F(RELATION="VMIS_ISOT_NL", DEFORMATION="GDEF_LOG"),
    INCREMENT=_F(LIST_INST=LINST),
    NEWTON=_F(PREDICTION="TANGENTE", MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(RESI_GLOB_MAXI=1.0e-1, ITER_GLOB_MAXI=25),
)

#######################
### POST-TRAITEMENT ###
#######################

RESU = CALC_CHAMP(reuse=RESU, RESULTAT=RESU, FORCE=("FORC_NODA", "REAC_NODA"), CRITERES="SIEQ_NOEU")

RESU = CALC_CHAMP(reuse=RESU, RESULTAT=RESU, DEFORMATION="EPSL_NOEU")

# IMPR_RESU(UNITE=80, FORMAT="MED", RESU=_F(RESULTAT=RESU))

IMPR_RESU(FORMAT="MED", UNITE=80, RESU=_F(RESULTAT=RESU, NOM_CHAM="DEPL", NOM_CMP=("DX", "DY")))

##################
### VALIDATION ###
##################

TEST_RESU(
    RESU=(
        _F(
            RESULTAT=RESU,
            INST=0.40,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            GROUP_NO="PA",
            CRITERE="ABSOLU",
            VALE_CALC=0.0,
            ORDRE_GRANDEUR=1e-4,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.60,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            GROUP_NO="PA",
            CRITERE="ABSOLU",
            VALE_CALC=0.0,
            ORDRE_GRANDEUR=1e-4,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.80,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            GROUP_NO="PA",
            CRITERE="ABSOLU",
            VALE_CALC=0.0,
            ORDRE_GRANDEUR=1e-4,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.90,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            GROUP_NO="PA",
            CRITERE="ABSOLU",
            VALE_CALC=0.0,
            ORDRE_GRANDEUR=1e-4,
        ),
        _F(
            RESULTAT=RESU,
            INST=1.00,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            GROUP_NO="PA",
            CRITERE="ABSOLU",
            VALE_CALC=0.0,
            ORDRE_GRANDEUR=1e-4,
        ),
    )
)
TEST_RESU(
    RESU=(
        _F(
            RESULTAT=RESU,
            INST=0.40,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            GROUP_NO="PA",
            VALE_CALC=-2.231547963693849,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.60,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            GROUP_NO="PA",
            VALE_CALC=-0.680279055384506,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.80,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            GROUP_NO="PA",
            VALE_CALC=0.6690047595135156,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.90,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            GROUP_NO="PA",
            VALE_CALC=1.011374479509507,
        ),
        _F(
            RESULTAT=RESU,
            INST=1.00,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            GROUP_NO="PA",
            VALE_CALC=1.3408095391108985,
        ),
    )
)

TEST_RESU(
    RESU=(
        _F(
            RESULTAT=RESU,
            INST=0.30,
            NOM_CHAM="DEPL",
            NOM_CMP="LAGS_F1",
            GROUP_NO="PA",
            VALE_CALC=-17.968371527941155,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.40,
            NOM_CHAM="DEPL",
            NOM_CMP="LAGS_F1",
            GROUP_NO="PA",
            VALE_CALC=-15.293430112419717,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.50,
            NOM_CHAM="DEPL",
            NOM_CMP="LAGS_F1",
            GROUP_NO="PA",
            VALE_CALC=-9.106871923147885,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.60,
            NOM_CHAM="DEPL",
            NOM_CMP="LAGS_F1",
            GROUP_NO="PA",
            VALE_CALC=-3.1116284789143096,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.80,
            NOM_CHAM="DEPL",
            NOM_CMP="LAGS_F1",
            GROUP_NO="PA",
            VALE_CALC=0,
            CRITERE="ABSOLU",
            ORDRE_GRANDEUR=1.0e2,
        ),
        _F(
            RESULTAT=RESU,
            INST=0.90,
            NOM_CHAM="DEPL",
            NOM_CMP="LAGS_F1",
            GROUP_NO="PA",
            VALE_CALC=0,
            CRITERE="ABSOLU",
            ORDRE_GRANDEUR=1.0e1,
        ),
        _F(
            RESULTAT=RESU,
            INST=1.00,
            NOM_CHAM="DEPL",
            NOM_CMP="LAGS_F1",
            GROUP_NO="PA",
            VALE_CALC=0,
            CRITERE="ABSOLU",
            ORDRE_GRANDEUR=1.0e1,
        ),
    )
)


FIN()
