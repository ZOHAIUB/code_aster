# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(
    CODE="OUI",
    ERREUR=_F(ALARME="ALARME"),
    DEBUG=_F(SDVERI="OUI"),
    IGNORE_ALARM=("CALCULEL_85", "CALCULEL_88"),
)

MA = LIRE_MAILLAGE(FORMAT="MED", UNITE=20)

MODEL = AFFE_MODELE(
    MAILLAGE=MA, AFFE=_F(GROUP_MA="PLAQUE", PHENOMENE="MECANIQUE", MODELISATION="DKT")
)

CARA = AFFE_CARA_ELEM(MODELE=MODEL, COQUE=_F(GROUP_MA="PLAQUE", EPAIS=0.2))

# on cree une sd evol_elas avec des champs d'efforts imposes :
# -------------------------------------------------------------
# compression uniforme + effort transversal
CHEFF1 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, -1.0e6, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0e5),
    ),
)
# section totalement tendue en X (pivot A "vertical") + effort transversal
CHEFF2 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(1.0e6, 0.0, 0.0, 0.0, 0.0, 0.0, -6.0e5, 0.0),
    ),
)
# section totalement tendue en Y (pivot A "vertical") + effort transversal
CHEFF3 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 1.0e6, 0.0, 0.0, 0.0, 0.0, -2.0e4, 8.0e4),
    ),
)
# fibre supérieure tendue en Y
CHEFF4 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 0.0, 0.0, 0.0, 1.0e5, 0.0, 0.0, 0.0),
    ),
)
# fibre supérieure tendue en X
CHEFF5 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 0.0, 0.0, 1.0e5, 0.0, 0.0, 0.0, 0.0),
    ),
)

# section partiellement tendue
CHEFF7 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(1.0e5, 0.0, 0.0, 1.0e5, 0.0, 0.0, 0.0, 0.0),
    ),
)
# section totalement tendue
CHEFF8 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(2.0e6, 0.0, 0.0, 1.0e5, 0.0, 0.0, 0.0, 0.0),
    ),
)

CHEFF9 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 0.0, 0.0, 1.0e5, -75.0e3, 0.0, 0.0, 0.0),
    ),
)

# configuration 10 à l'ELS QP
CHEFF13 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(0.0, 0.0, 0.0, 0.0, -125.0e3, 0.0, 0.0, 0.0),
    ),
)
# configuration 6 à l'ELS QP
CHEFF14 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PLAQUE",
        NOM_CMP=("NXX", "NYY", "NXY", "MXX", "MYY", "MXY", "QX", "QY"),
        VALE=(-15e3, 0.0, 0.0, 3e5, 0.0, 0.0, 0.0, 0.0),
    ),
)

RESUELSQP = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_ELAS",
    AFFE=(
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF1, INST=1.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF2, INST=2.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF3, INST=3.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF4, INST=4.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF5, INST=5.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF14, INST=6.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF7, INST=7.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF8, INST=8.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF9, INST=9.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF13, INST=10.0, MODELE=MODEL, CARA_ELEM=CARA),
    ),
)

# CAS 1 - calcul du ferraillage :
# --------------------------------

RESUELSQP1 = CALC_FERRAILLAGE(
    RESULTAT=RESUELSQP,
    CARA_ELEM=CARA,
    reuse=RESUELSQP,
    CODIFICATION="EC2",
    TYPE_COMB="ELS_QP",
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            C_INF=0.04,
            C_SUP=0.04,
            FCK=35.0e6,
            FYK=500.0e6,
            WMAX_INF=0.00015,
            WMAX_SUP=0.00015,
            SIGC_ELS_QP=0.45 * 35.0e6,
            KT=0.6,
            PHI_INF_X=0.025,
            PHI_SUP_X=0.025,
            PHI_INF_Y=0.025,
            PHI_SUP_Y=0.025,
            ALPHA_E=21.0,
            UTIL_COMPR="NON",
            DNSTRA_CRIT=6.0e-3,
            ALPHA_REINF=1.0,
            ALPHA_SHEAR=1.0,
            RHO_CRIT=150.0,
            ALPHA_STIRRUPS=1.0,
            L_CRIT=1.0,
            ALPHA_CC=1.0,
            EYS=210.0e9,
            RHO_ACIER=7800,
        ),
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 1
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.23988105107220e-02,
        1.55427494016560e-03,
        3.01978467404847e02,
        1.4431917351708112,
    ],  # 2
    [
        5.51297267386495e-34,
        5.51297267386495e-34,
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.93144400887923e02,
        4.29209779750941e-01,
    ],  # 3
    [
        0.00000000000000e00,
        8.98169614902823e-08,
        0.00000000000000e00,
        4.01813406333414e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.56710731331530e02,
        3.48246069625622e-01,
    ],  # 4
    [
        0.00000000000000e00,
        4.01813406333414e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.56707228470032e02,
        3.48238285488959e-01,
    ],  # 5
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 6
    [
        0.00000000000000e00,
        3.41844350998731e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.33319296889505e02,
        2.96265104198900e-01,
    ],  # 7
    [
        8.38194267918152e-04,
        9.22013694709967e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.92274917385695e02,
        8.71722038634878e-01,
    ],  # 8
    [
        0.00000000000000e00,
        4.01813406333414e-03,
        2.01843797432500e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.35426309468707e02,
        5.23169576597126e-01,
    ],  # 9
    [
        8.98169614902823e-08,
        0.00000000000000e00,
        2.34769536085852e-02,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.15604693596319e02,
        2.03467709688071e00,
    ],  # 10
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.23988105107220e-02,
        1.55427494016560e-03,
        3.01978467404847e02,
        1.4431917351708112,
    ],  # 2
    [
        5.51297267386495e-34,
        5.51297267386495e-34,
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.93144400887923e02,
        4.29209779750941e-01,
    ],  # 3
    [
        0.00000000000000e00,
        8.98169614902823e-08,
        0.00000000000000e00,
        4.01813406333414e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.56710731331530e02,
        3.48246069625622e-01,
    ],  # 4
    [
        0.00000000000000e00,
        4.01813406333414e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.56707228470032e02,
        3.48238285488959e-01,
    ],  # 5
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 6
    [
        0.00000000000000e00,
        3.41844350998731e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.33319296889505e02,
        2.96265104198900e-01,
    ],  # 7
    [
        8.38194267918152e-04,
        9.22013694709967e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.92274917385695e02,
        8.71722038634878e-01,
    ],  # 8
    [
        0.00000000000000e00,
        4.01813406333414e-03,
        2.01843797432500e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.35426309468707e02,
        5.23169576597126e-01,
    ],  # 9
    [
        8.98169614902823e-08,
        0.00000000000000e00,
        2.34769536085852e-02,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        9.15604693596319e02,
        2.03467709688071e00,
    ],  # 10
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP1,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP1,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 2 - calcul du ferraillage avec FERR_COMP = 'OUI' :
# -------------------------------------------------------

RESUELSQP2 = CALC_FERRAILLAGE(
    RESULTAT=RESUELSQP,
    CARA_ELEM=CARA,
    reuse=RESUELSQP,
    CODIFICATION="EC2",
    TYPE_COMB="ELS_QP",
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            C_INF=0.04,
            C_SUP=0.04,
            FCK=35.0e6,
            FYK=500.0e6,
            WMAX_INF=0.00015,
            WMAX_SUP=0.00015,
            SIGC_ELS_QP=0.45 * 35.0e6,
            KT=0.6,
            PHI_INF_X=0.025,
            PHI_SUP_X=0.025,
            PHI_INF_Y=0.025,
            PHI_SUP_Y=0.025,
            ALPHA_E=21.0,
            UTIL_COMPR="NON",
            DNSTRA_CRIT=6.0e-3,
            ALPHA_REINF=1.0,
            ALPHA_SHEAR=1.0,
            RHO_CRIT=150.0,
            ALPHA_STIRRUPS=1.0,
            L_CRIT=1.0,
            ALPHA_CC=1.0,
            EYS=210.0e9,
            RHO_ACIER=7800,
        ),
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 2
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.23988105107220e-02,
        1.55427494016560e-03,
        3.01978467404847e02,
        1.4431917351708112,
    ],  # 2
    [
        5.51297267386495e-34,
        5.51297267386495e-34,
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.93144400887923e02,
        4.29209779750941e-01,
    ],  # 3
    [
        0.00000000000000e00,
        8.78097824220694e-06,
        5.27996468979819e-04,
        2.74777417143759e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.28097513127725e02,
        2.84661140283833e-01,
    ],  # 4
    [
        5.27996468979819e-04,
        2.74777417143759e-03,
        0.00000000000000e00,
        8.78097824220753e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        1.28097513127725e02,
        2.84661140283833e-01,
    ],  # 5
    [
        1.03957725707567e-02,
        8.06049419455690e-03,
        0.00000000000000e00,
        4.21836629593811e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        7.36246032401389e02,
        1.63610229422531e00,
    ],  # 6
    [
        1.59267657680356e-04,
        3.03655552756082e-03,
        0.00000000000000e00,
        4.72852962873414e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        1.24821516879926e02,
        2.77381148622059e-01,
    ],  # 7
    [
        8.38194267918152e-04,
        9.22013694709967e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.92274917385695e02,
        8.71722038634878e-01,
    ],  # 8
    [
        5.27996468979819e-04,
        2.74777417143759e-03,
        2.01843797432500e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.06474135974954e02,
        4.58831413277675e-01,
    ],  # 9
    [
        8.98169614902823e-08,
        0.00000000000000e00,
        3.62164553064024e-03,
        1.59119845469052e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        2.03304418289398e02,
        4.51787596198662e-01,
    ],  # 10
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.23988105107220e-02,
        1.55427494016560e-03,
        3.01978467404847e02,
        1.4431917351708112,
    ],  # 2
    [
        5.51297267386495e-34,
        5.51297267386495e-34,
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.93144400887923e02,
        4.29209779750941e-01,
    ],  # 3
    [
        0.00000000000000e00,
        8.78097824220694e-06,
        5.27996468979819e-04,
        2.74777417143759e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.28097513127725e02,
        2.84661140283833e-01,
    ],  # 4
    [
        5.27996468979819e-04,
        2.74777417143759e-03,
        0.00000000000000e00,
        8.78097824220753e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        1.28097513127725e02,
        2.84661140283833e-01,
    ],  # 5
    [
        1.03957725707567e-02,
        8.06049419455690e-03,
        0.00000000000000e00,
        4.21836629593811e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        7.36246032401389e02,
        1.63610229422531e00,
    ],  # 6
    [
        1.59267657680356e-04,
        3.03655552756082e-03,
        0.00000000000000e00,
        4.72852962873414e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        1.24821516879926e02,
        2.77381148622059e-01,
    ],  # 7
    [
        8.38194267918152e-04,
        9.22013694709967e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.92274917385695e02,
        8.71722038634878e-01,
    ],  # 8
    [
        5.27996468979819e-04,
        2.74777417143759e-03,
        2.01843797432500e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.06474135974954e02,
        4.58831413277675e-01,
    ],  # 9
    [
        8.98169614902823e-08,
        0.00000000000000e00,
        3.62164553064024e-03,
        1.59119845469052e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        2.03304418289398e02,
        4.51787596198662e-01,
    ],  # 10
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP2,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP2,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 3 - calcul du ferraillage avec FERR_SYME = 'OUI' :
# -----------------------------------------------

RESUELSQP3 = CALC_FERRAILLAGE(
    RESULTAT=RESUELSQP,
    CARA_ELEM=CARA,
    reuse=RESUELSQP,
    CODIFICATION="EC2",
    TYPE_COMB="ELS_QP",
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            FERR_SYME="OUI",
            SEUIL_SYME=10.0e-4,
            C_INF=0.04,
            C_SUP=0.04,
            FCK=35.0e6,
            FYK=500.0e6,
            WMAX_INF=0.00015,
            WMAX_SUP=0.00015,
            SIGC_ELS_QP=0.45 * 35.0e6,
            KT=0.6,
            PHI_INF_X=0.025,
            PHI_SUP_X=0.025,
            PHI_INF_Y=0.025,
            PHI_SUP_Y=0.025,
            ALPHA_E=21.0,
            UTIL_COMPR="NON",
            DNSTRA_CRIT=6.0e-3,
            ALPHA_REINF=1.0,
            ALPHA_SHEAR=1.0,
            RHO_CRIT=150.0,
            ALPHA_STIRRUPS=1.0,
            L_CRIT=1.0,
            ALPHA_CC=1.0,
            EYS=210.0e9,
            RHO_ACIER=7800,
        ),
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 3
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.23988105107220e-02,
        1.55427494016560e-03,
        3.01978467404847e02,
        1.4431917351708112,
    ],  # 2
    [
        5.51297267386495e-34,
        5.51297267386495e-34,
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.93144400887923e02,
        4.29209779750941e-01,
    ],  # 3
    [
        -4.52325324584167e-34,
        4.14880291749334e-06,
        0.002031667268057194,
        0.0028967608528789536,
        0.00000000000000e00,
        0.00000000000000e00,
        192.37050003029196,
        0.42749000006731547,
    ],  # 4
    [
        0.0020316672680571937,
        0.0028967608528789536,
        0.00000000000000e00,
        4.148802917493946e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        192.37050003029196,
        0.42749000006731547,
    ],  # 5
    [
        0.009716250944822376,
        0.008982917611489043,
        0.00000000000000e00,
        4.883529627252956e-08,
        0.00000000000000e00,
        0.00000000000000e00,
        729.2694782727,
        1.620598840606,
    ],  # 6
    [
        0.0023311291316368953,
        0.0031269625970570553,
        0.00000000000000e00,
        5.539734762262862e-07,
        0.00000000000000e00,
        0.00000000000000e00,
        212.8871823846369,
        0.47308262752141533,
    ],  # 7
    [
        5.91239959105850e-03,
        6.50302416683454e-03,
        0.00000000000000e00,
        6.02019102692748e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        5.07680271562846e02,
        1.12817838125077e00,
    ],  # 8
    [
        0.0019987490178628195,
        0.0028854949761179384,
        0.00209275688624369,
        0.0012165333644788459,
        0.00000000000000e00,
        0.00000000000000e00,
        319.5478355434284,
        0.7101063012076186,
    ],  # 9
    [
        8.981696149028234e-08,
        0.00000000000000e00,
        0.003625742118031796,
        0.002879224025941883,
        0.00000000000000e00,
        0.00000000000000e00,
        253.6971824764716,
        0.5637715166143813,
    ],  # 10
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
    ],  # 1
    [
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.23988105107220e-02,
        1.55427494016560e-03,
        3.01978467404847e02,
        1.4431917351708112,
    ],  # 2
    [
        5.51297267386495e-34,
        5.51297267386495e-34,
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.93144400887923e02,
        4.29209779750941e-01,
    ],  # 3
    [
        -4.52325324584167e-34,
        4.14880291749334e-06,
        0.002031667268057194,
        0.0028967608528789536,
        0.00000000000000e00,
        0.00000000000000e00,
        192.37050003029196,
        0.42749000006731547,
    ],  # 4
    [
        0.0020316672680571937,
        0.0028967608528789536,
        0.00000000000000e00,
        4.148802917493946e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        192.37050003029196,
        0.42749000006731547,
    ],  # 5
    [
        0.009716250944822376,
        0.008982917611489043,
        0.00000000000000e00,
        4.883529627252956e-08,
        0.00000000000000e00,
        0.00000000000000e00,
        729.2694782727,
        1.620598840606,
    ],  # 6
    [
        0.0023311291316368953,
        0.0031269625970570553,
        0.00000000000000e00,
        5.539734762262862e-07,
        0.00000000000000e00,
        0.00000000000000e00,
        212.8871823846369,
        0.47308262752141533,
    ],  # 7
    [
        5.91239959105850e-03,
        6.50302416683454e-03,
        0.00000000000000e00,
        6.02019102692748e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        5.07680271562846e02,
        1.12817838125077e00,
    ],  # 8
    [
        0.0019987490178628195,
        0.0028854949761179384,
        0.00209275688624369,
        0.0012165333644788459,
        0.00000000000000e00,
        0.00000000000000e00,
        319.5478355434284,
        0.7101063012076186,
    ],  # 9
    [
        8.981696149028234e-08,
        0.00000000000000e00,
        0.003625742118031796,
        0.002879224025941883,
        0.00000000000000e00,
        0.00000000000000e00,
        253.6971824764716,
        0.5637715166143813,
    ],  # 10
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP3,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP3,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 4 - calcul du ferraillage avec CODIFICATION = 'BAEL91' :
# -------------------------------------------------------------

RESUELSQP4 = CALC_FERRAILLAGE(
    RESULTAT=RESUELSQP,
    CARA_ELEM=CARA,
    reuse=RESUELSQP,
    CODIFICATION="BAEL91",
    TYPE_COMB="ELS_QP",
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="2D",
            FERR_COMP="OUI",
            C_INF=0.04,
            C_SUP=0.04,
            FCJ=35.0e6,
            FE=500.0e6,
            WMAX_INF=0.00015,
            WMAX_SUP=0.00015,
            SIGC_ELS_QP=0.45 * 35.0e6,
            KT=0.6,
            PHI_INF_X=0.025,
            PHI_SUP_X=0.025,
            PHI_INF_Y=0.025,
            PHI_SUP_Y=0.025,
            N=21.0,
            DNSTRA_CRIT=6.0e-3,
            ALPHA_REINF=1.0,
            ALPHA_SHEAR=1.0,
            RHO_CRIT=150.0,
            ALPHA_STIRRUPS=1.0,
            L_CRIT=1.0,
            ALPHA_CC=1.0,
            EYS=210.0e9,
            RHO_ACIER=7800,
        ),
    ),
)

COMP = ["DNSXI", "DNSXS", "DNSYI", "DNSYS", "DNSXT", "DNSYT", "DNSVOL", "CONSTRUC"]
# -----------------------------------------------------
# Tests pour CAS 4
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00125,
        0.00125,
        19.5,
        0.12456289079755357,
    ],  # 1
    [
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.018571577008454163,
        0.018571577008454163,
        482.8610022198083,
        2.279873234824887,
    ],  # 2
    [
        5.51297267386495e-34,
        5.51297267386495e-34,
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.002552419121338299,
        0.002552419121338299,
        232.9621391808008,
        0.6835591431756209,
    ],  # 3
    [
        0.00000000000000e00,
        8.78097824220694e-06,
        5.27996468979819e-04,
        2.74777417143759e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.28097513127725e02,
        2.84661140283833e-01,
    ],  # 4
    [
        5.27996468979819e-04,
        2.74777417143759e-03,
        0.00000000000000e00,
        8.78097824220753e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        1.28097513127725e02,
        2.84661140283833e-01,
    ],  # 5
    [
        1.03957725707567e-02,
        8.06049419455690e-03,
        0.00000000000000e00,
        4.21836629593811e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        7.36246032401389e02,
        1.63610229422531e00,
    ],  # 6
    [
        1.59267657680356e-04,
        3.03655552756082e-03,
        0.00000000000000e00,
        4.72852962873414e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        1.24821516879926e02,
        2.77381148622059e-01,
    ],  # 7
    [
        8.38194267918152e-04,
        9.22013694709967e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.92274917385695e02,
        8.71722038634878e-01,
    ],  # 8
    [
        5.27996468979819e-04,
        2.74777417143759e-03,
        2.01843797432500e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.06474135974954e02,
        4.58831413277675e-01,
    ],  # 9
    [
        8.98169614902823e-08,
        0.00000000000000e00,
        3.62164553064024e-03,
        1.59119845469052e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        2.03304418289398e02,
        4.51787596198662e-01,
    ],  # 10
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00125,
        0.00125,
        19.5,
        0.12456289079755357,
    ],  # 1
    [
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.018571577008454163,
        0.018571577008454163,
        482.8610022198083,
        2.279873234824887,
    ],  # 2
    [
        5.51297267386495e-34,
        5.51297267386495e-34,
        2.47621026779389e-03,
        2.47621026779389e-03,
        0.002552419121338299,
        0.002552419121338299,
        232.9621391808008,
        0.6835591431756209,
    ],  # 3
    [
        0.00000000000000e00,
        8.78097824220694e-06,
        5.27996468979819e-04,
        2.74777417143759e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        1.28097513127725e02,
        2.84661140283833e-01,
    ],  # 4
    [
        5.27996468979819e-04,
        2.74777417143759e-03,
        0.00000000000000e00,
        8.78097824220753e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        1.28097513127725e02,
        2.84661140283833e-01,
    ],  # 5
    [
        1.03957725707567e-02,
        8.06049419455690e-03,
        0.00000000000000e00,
        4.21836629593811e-04,
        0.00000000000000e00,
        0.00000000000000e00,
        7.36246032401389e02,
        1.63610229422531e00,
    ],  # 6
    [
        1.59267657680356e-04,
        3.03655552756082e-03,
        0.00000000000000e00,
        4.72852962873414e-06,
        0.00000000000000e00,
        0.00000000000000e00,
        1.24821516879926e02,
        2.77381148622059e-01,
    ],  # 7
    [
        8.38194267918152e-04,
        9.22013694709967e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.92274917385695e02,
        8.71722038634878e-01,
    ],  # 8
    [
        5.27996468979819e-04,
        2.74777417143759e-03,
        2.01843797432500e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.06474135974954e02,
        4.58831413277675e-01,
    ],  # 9
    [
        8.98169614902823e-08,
        0.00000000000000e00,
        3.62164553064024e-03,
        1.59119845469052e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        2.03304418289398e02,
        4.51787596198662e-01,
    ],  # 10
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP4,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP4,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

FIN()
