# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# identique à sdlx106a en remplaçant PB et PB2 par un noeud crée

DEBUT(CODE="OUI")

MAILLAG0 = LIRE_MAILLAGE(FORMAT="MED")
#
MAILLAG0 = DEFI_GROUP(
    reuse=MAILLAG0, MAILLAGE=MAILLAG0, CREA_GROUP_NO=_F(GROUP_MA=("SBASE", "SEXTER"))
)
"""
MAILLAGE=CREA_MAILLAGE(MAILLAGE=MAILLAG0,
    CREA_POI1=(
        _F(NOM_GROUP_MA='PB', GROUP_NO = 'PB', ),
        _F(NOM_GROUP_MA='PB2', GROUP_NO = 'PB2', ),
    ),
)
"""
mat1 = DEFI_MATERIAU(ELAS=_F(E=4.13e9, RHO=2420.0, AMOR_HYST=0.1, NU=0.333))

#################################################################
#           calcul de 6 modes de corps rigide                   #
# ----------------------------------------------------------------

MODELE0 = AFFE_MODELE(
    MAILLAGE=MAILLAG0, AFFE=(_F(GROUP_MA="SBASE", PHENOMENE="MECANIQUE", MODELISATION="DST"),)
)


champma0 = AFFE_MATERIAU(MAILLAGE=MAILLAG0, AFFE=(_F(GROUP_MA="SBASE", MATER=mat1),))


caraele0 = AFFE_CARA_ELEM(
    MODELE=MODELE0, COQUE=_F(GROUP_MA="SBASE", ANGL_REP=(45.0, 45.0), EPAIS=0.00001)
)

##--------------------------------------------------------------
#  chercher le noeud CDG centre de gravité

MASSESTR = POST_ELEM(
    MODELE=MODELE0, CHAM_MATER=champma0, CARA_ELEM=caraele0, MASS_INER=_F(GROUP_MA="SRADIER")
)

# si le CDG exsite dans le maillage, on peut directement créer un groupe.
# MAILLAGE = DEFI_GROUP(reuse=MAILLAG0,
#                   MAILLAGE=MAILLAG0,
#                   CREA_GROUP_NO=_F(NOM='test',
#                                    OPTION='ENV_SPHERE',
#                                    POINT=(MASSESTR['CDG_X', 1], MASSESTR['CDG_Y', 1], MASSESTR['CDG_Z', 1]),
#                                    RAYON=5.e-6, PRECISION=5.e-6, # pour la précision
#                                    ),)

# print(MASSESTR.EXTR_TABLE())
# print(MASSESTR['CDG_X', 1], MASSESTR['CDG_Y', 1], MASSESTR['CDG_Z', 1])

# créer ce noeud
coor_x = format(MASSESTR["CDG_X", 1], ".8g")
coor_y = format(MASSESTR["CDG_Y", 1], ".8g")
coor_z = format(MASSESTR["CDG_Z", 1], ".8g")

with open("noeud.mail", "w") as ftest:
    ftest.write(
        """
COOR_3D
       % NOEUD     X          Y         Z
          P1  """
        + str(coor_x)
        + str("  ")
        + str(coor_y)
        + str("  ")
        + str(coor_z)
        + str(" \n")
        + """
FINSF

POI1
      P1      P1

FINSF

GROUP_NO
      Pnew P1
FINSF

GROUP_MA
      Pnew P1
FINSF

FIN
"""
    )

mesh = CA.Mesh()
mesh.readAsterFile("noeud.mail")

# nouveau maillage en integrant le point créé - POI ----------------
MAILLAGE = ASSE_MAILLAGE(MAILLAGE_1=MAILLAG0, MAILLAGE_2=mesh, OPERATION="SUPERPOSE")

# nouveau modele
MODELEB = AFFE_MODELE(
    MAILLAGE=MAILLAGE,
    AFFE=(
        _F(GROUP_MA="SBASE", PHENOMENE="MECANIQUE", MODELISATION="DST"),
        _F(GROUP_MA="Pnew", PHENOMENE="MECANIQUE", MODELISATION="DIS_TR"),
    ),
)
champmab = AFFE_MATERIAU(MAILLAGE=MAILLAGE, AFFE=(_F(GROUP_MA="SBASE", MATER=mat1),))

cond_lib = AFFE_CHAR_MECA(
    MODELE=MODELEB,
    DDL_IMPO=(_F(GROUP_NO="Pnew", DX=0.0, DY=0.0, DZ=0.0, DRX=0.0, DRY=0.0, DRZ=0.0),),
    LIAISON_SOLIDE=(_F(GROUP_NO=("SBASE", "Pnew")),),
)

caraeleb = AFFE_CARA_ELEM(
    MODELE=MODELEB,
    COQUE=_F(GROUP_MA="SBASE", ANGL_REP=(45.0, 45.0), EPAIS=0.00001),
    DISCRET=(
        _F(
            GROUP_MA="Pnew",
            CARA="M_TR_D_N",
            VALE=(0.01, 0.01, 0.01, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0),
        ),
        _F(GROUP_MA="Pnew", CARA="K_TR_D_N", VALE=(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)),
    ),
)

rigi_elb = CALC_MATR_ELEM(
    MODELE=MODELEB, OPTION="RIGI_MECA", CHAM_MATER=champmab, CARA_ELEM=caraeleb, CHARGE=cond_lib
)

mass_elb = CALC_MATR_ELEM(
    MODELE=MODELEB, OPTION="MASS_MECA", CHAM_MATER=champmab, CARA_ELEM=caraeleb, CHARGE=cond_lib
)


nume_ddb = NUME_DDL(MATR_RIGI=rigi_elb)

rigidb = ASSE_MATRICE(MATR_ELEM=rigi_elb, NUME_DDL=nume_ddb)

masseb = ASSE_MATRICE(MATR_ELEM=mass_elb, NUME_DDL=nume_ddb)


# calcul de 6 modes de corps rigide
MODESTA1 = MODE_STATIQUE(
    MATR_RIGI=rigidb,
    MODE_STAT=_F(GROUP_NO="Pnew", AVEC_CMP=("DX", "DY", "DZ", "DRX", "DRY", "DRZ")),
)


#                         fin de partie                           #
###################################################################

# ------------------------------------------------------
MODELE = AFFE_MODELE(
    MAILLAGE=MAILLAGE,
    AFFE=(
        _F(GROUP_MA="Pnew", PHENOMENE="MECANIQUE", MODELISATION="DIS_TR"),
        _F(GROUP_MA="VOLUM", PHENOMENE="MECANIQUE", MODELISATION="3D"),
        _F(GROUP_MA="SEXTER", PHENOMENE="MECANIQUE", MODELISATION="3D_ABSO"),
    ),
)


champmat = AFFE_MATERIAU(
    MAILLAGE=MAILLAGE, AFFE=(_F(GROUP_MA="VOLUM", MATER=mat1), _F(GROUP_MA="SEXTER", MATER=mat1))
)
#
# La structure est liaisonnee a l interface SBASE
# -----------------------------------------
cond_lim = AFFE_CHAR_MECA(
    MODELE=MODELE,
    # LIAISON_SOLIDE=(_F(GROUP_NO=('SBASE')),
    LIAISON_SOLIDE=(_F(GROUP_NO=("SBASE", "Pnew")),),
)

charge1 = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="Pnew", FX=1.0e6))
charge2 = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="Pnew", FY=1.0e6))
charge3 = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="Pnew", FZ=1.0e6))
charge4 = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="Pnew", MX=1.0e6))
charge5 = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="Pnew", MY=1.0e6))
charge6 = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="Pnew", MZ=1.0e6))

caraele = AFFE_CARA_ELEM(
    MODELE=MODELE,
    DISCRET=(
        _F(
            GROUP_MA="Pnew",
            CARA="M_TR_D_N",
            VALE=(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0),
        ),
        _F(GROUP_MA="Pnew", CARA="K_TR_D_N", VALE=(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)),
        _F(GROUP_MA="Pnew", CARA="A_TR_D_N", VALE=(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)),
    ),
)

# FIN DE AFFE_CARA_ELEM  ------------
#
# Calcul des matrices et vecteurs elementaires=
# ----------------------------------------------
rigi_ele = CALC_MATR_ELEM(
    MODELE=MODELE, OPTION="RIGI_MECA", CHAM_MATER=champmat, CARA_ELEM=caraele, CHARGE=cond_lim
)

righ_ele = CALC_MATR_ELEM(
    MODELE=MODELE,
    OPTION="RIGI_MECA_HYST",
    CHAM_MATER=champmat,
    CARA_ELEM=caraele,
    RIGI_MECA=rigi_ele,
    CHARGE=cond_lim,
)

mass_ele = CALC_MATR_ELEM(
    MODELE=MODELE, OPTION="MASS_MECA", CHAM_MATER=champmat, CARA_ELEM=caraele, CHARGE=cond_lim
)


amor_ele = CALC_MATR_ELEM(
    MODELE=MODELE,
    OPTION="AMOR_MECA",
    CHAM_MATER=champmat,
    CARA_ELEM=caraele,
    RIGI_MECA=rigi_ele,
    MASS_MECA=mass_ele,
    CHARGE=cond_lim,
)

vectele1 = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmat, CARA_ELEM=caraele, CHARGE=charge1
)
vectele2 = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmat, CARA_ELEM=caraele, CHARGE=charge2
)
vectele3 = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmat, CARA_ELEM=caraele, CHARGE=charge3
)
vectele4 = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmat, CARA_ELEM=caraele, CHARGE=charge4
)
vectele5 = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmat, CARA_ELEM=caraele, CHARGE=charge5
)
vectele6 = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmat, CARA_ELEM=caraele, CHARGE=charge6
)

nume_ddl = NUME_DDL(MATR_RIGI=rigi_ele)

#
# Assemblage des matrices et vecteurs=
# -------------------------------------
rigihyst = ASSE_MATRICE(MATR_ELEM=righ_ele, NUME_DDL=nume_ddl)

masse = ASSE_MATRICE(MATR_ELEM=mass_ele, NUME_DDL=nume_ddl)

amort = ASSE_MATRICE(MATR_ELEM=amor_ele, NUME_DDL=nume_ddl)

vecas1 = ASSE_VECTEUR(VECT_ELEM=vectele1, NUME_DDL=nume_ddl)
vecas2 = ASSE_VECTEUR(VECT_ELEM=vectele2, NUME_DDL=nume_ddl)
vecas3 = ASSE_VECTEUR(VECT_ELEM=vectele3, NUME_DDL=nume_ddl)
vecas4 = ASSE_VECTEUR(VECT_ELEM=vectele4, NUME_DDL=nume_ddl)
vecas5 = ASSE_VECTEUR(VECT_ELEM=vectele5, NUME_DDL=nume_ddl)
vecas6 = ASSE_VECTEUR(VECT_ELEM=vectele6, NUME_DDL=nume_ddl)

#
# CALCUL DES REPONSES
# ---------------------------------------------
l_freq = DEFI_LIST_REEL(DEBUT=8.5, INTERVALLE=_F(JUSQU_A=25.5, PAS=17.0))

repot = DYNA_VIBRA(
    TYPE_CALCUL="HARM",
    BASE_CALCUL="PHYS",
    MODELE=MODELE,
    MATR_MASS=masse,
    MATR_RIGI=rigihyst,
    MATR_AMOR=amort,
    LIST_FREQ=l_freq,
    SOLVEUR=_F(METHODE="MUMPS"),
    EXCIT=(
        _F(VECT_ASSE=vecas1, COEF_MULT=1.0),
        _F(VECT_ASSE=vecas2, COEF_MULT=1.0),
        _F(VECT_ASSE=vecas3, COEF_MULT=1.0),
    ),
)

repor = DYNA_VIBRA(
    TYPE_CALCUL="HARM",
    BASE_CALCUL="PHYS",
    MODELE=MODELE,
    MATR_MASS=masse,
    MATR_RIGI=rigihyst,
    MATR_AMOR=amort,
    LIST_FREQ=l_freq,
    SOLVEUR=_F(METHODE="MUMPS"),
    EXCIT=(
        _F(VECT_ASSE=vecas4, COEF_MULT=1.0),
        _F(VECT_ASSE=vecas5, COEF_MULT=1.0),
        _F(VECT_ASSE=vecas6, COEF_MULT=1.0),
    ),
)


# Extraction des deplacements

U11 = RECU_FONCTION(RESULTAT=repot, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DX")

U51 = RECU_FONCTION(RESULTAT=repot, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DRY")

U22 = RECU_FONCTION(RESULTAT=repot, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DY")

U42 = RECU_FONCTION(RESULTAT=repot, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DRX")

U33 = RECU_FONCTION(RESULTAT=repot, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DZ")

U24 = RECU_FONCTION(RESULTAT=repor, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DY")

U44 = RECU_FONCTION(RESULTAT=repor, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DRX")

U15 = RECU_FONCTION(RESULTAT=repor, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DX")

U55 = RECU_FONCTION(RESULTAT=repor, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DRY")

U66 = RECU_FONCTION(RESULTAT=repor, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DRZ")


bamo = DEFI_BASE_MODALE(
    RITZ=(_F(MODE_MECA=MODESTA1, NMAX_MODE=0), _F(MODE_INTF=MODESTA1, NMAX_MODE=1999)),
    NUME_REF=nume_ddb,
)


mael = MACR_ELEM_DYNA(BASE_MODALE=bamo, MATR_RIGI=rigidb, MATR_MASS=masseb)
#

# Pour reference :
TABSOL0 = DEFI_SOL_MISS(
    TITRE="SOL HOMOGENE 800 M/S",
    MATERIAU=(
        _F(E=4.13e09, NU=0.3333, RHO=2420.0, AMOR_HYST=0.10),
        _F(E=4.13e09, NU=0.3333, RHO=2420.0, AMOR_HYST=0.10),
    ),
    COUCHE=(
        _F(EPAIS=1.0, NUME_MATE=1, RECEPTEUR="OUI"),
        _F(EPAIS=1.0, NUME_MATE=1, RECEPTEUR="OUI"),
        _F(EPAIS=1.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
        _F(EPAIS=1.0, NUME_MATE=1, RECEPTEUR="OUI"),
        _F(EPAIS=1.0, NUME_MATE=1, RECEPTEUR="OUI"),
        _F(EPAIS=1.0, NUME_MATE=1, RECEPTEUR="OUI"),
        _F(EPAIS=1.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
        _F(EPAIS=1.0, NUME_MATE=1, RECEPTEUR="OUI"),
        _F(EPAIS=10.0, NUME_MATE=1, RECEPTEUR="OUI", SOURCE="OUI"),
        _F(SUBSTRATUM="OUI", NUME_MATE=2),
    ),
    INFO=2,
)

TABSOL = DEFI_SOL_MISS(
    TITRE="SOL MOU",
    MATERIAU=(_F(E=4.13e09, NU=0.3333, RHO=2420.0, AMOR_HYST=0.10),),
    COUCHE_AUTO=_F(
        SURF="NON",
        HOMOGENE="OUI",
        EPAIS_PHYS=18.0,
        GROUP_MA="SBASE",
        NOMBRE_RECEPTEUR=4,
        GROUP_MA_INTERF="SBASE",
        MAILLAGE=MAILLAGE,
    ),
    INFO=2,
)


CALC_MISS(
    TYPE_RESU="FICHIER",
    TABLE_SOL=TABSOL,
    MACR_ELEM_DYNA=mael,
    AMOR_REDUIT=(0.05),
    GROUP_MA_INTERF="SBASE",
    UNITE_IMPR_ASTER=26,
    UNITE_RESU_IMPE=38,
    VERSION="V6.6",
    PARAMETRE=_F(
        FREQ_MIN=8.5,
        FREQ_MAX=25.5,
        FREQ_PAS=17.0,
        Z0=0.0,
        AUTO="OUI",
        OPTION_DREF="OUI",
        OPTION_RFIC="NON",
        # Valeurs en manuel :
        # DREF=4.,
        # ALGO = 'REGU',
        # OFFSET_MAX=30,
        # OFFSET_NB=200,
    ),
)


###################################### modifier pour le nouveau modele avec "teste ##############
charge1b = AFFE_CHAR_MECA(MODELE=MODELEB, FORCE_NODALE=_F(GROUP_NO="Pnew", FX=1.0e6))
charge2b = AFFE_CHAR_MECA(MODELE=MODELEB, FORCE_NODALE=_F(GROUP_NO="Pnew", FY=1.0e6))
charge3b = AFFE_CHAR_MECA(MODELE=MODELEB, FORCE_NODALE=_F(GROUP_NO="Pnew", FZ=1.0e6))
charge4b = AFFE_CHAR_MECA(MODELE=MODELEB, FORCE_NODALE=_F(GROUP_NO="Pnew", MX=1.0e6))
charge5b = AFFE_CHAR_MECA(MODELE=MODELEB, FORCE_NODALE=_F(GROUP_NO="Pnew", MY=1.0e6))
charge6b = AFFE_CHAR_MECA(MODELE=MODELEB, FORCE_NODALE=_F(GROUP_NO="Pnew", MZ=1.0e6))
# ----------------------------------------------------------------------------

vectel1b = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmab, CARA_ELEM=caraeleb, CHARGE=charge1b
)
vectel2b = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmab, CARA_ELEM=caraeleb, CHARGE=charge2b
)
vectel3b = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmab, CARA_ELEM=caraeleb, CHARGE=charge3b
)
vectel4b = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmab, CARA_ELEM=caraeleb, CHARGE=charge4b
)
vectel5b = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmab, CARA_ELEM=caraeleb, CHARGE=charge5b
)
vectel6b = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=champmab, CARA_ELEM=caraeleb, CHARGE=charge6b
)
vecas1b = ASSE_VECTEUR(VECT_ELEM=vectel1b, NUME_DDL=nume_ddb)
vecas2b = ASSE_VECTEUR(VECT_ELEM=vectel2b, NUME_DDL=nume_ddb)
vecas3b = ASSE_VECTEUR(VECT_ELEM=vectel3b, NUME_DDL=nume_ddb)
vecas4b = ASSE_VECTEUR(VECT_ELEM=vectel4b, NUME_DDL=nume_ddb)
vecas5b = ASSE_VECTEUR(VECT_ELEM=vectel5b, NUME_DDL=nume_ddb)
vecas6b = ASSE_VECTEUR(VECT_ELEM=vectel6b, NUME_DDL=nume_ddb)

nddlgen = NUME_DDL_GENE(BASE=bamo, STOCKAGE="PLEIN")

rigigen = PROJ_MATR_BASE(BASE=bamo, NUME_DDL_GENE=nddlgen, MATR_ASSE=rigidb)

massgen = PROJ_MATR_BASE(BASE=bamo, NUME_DDL_GENE=nddlgen, MATR_ASSE=masseb)

vecge1b = PROJ_VECT_BASE(BASE=bamo, NUME_DDL_GENE=nddlgen, VECT_ASSE=vecas1b, TYPE_VECT="FORC")

vecge2b = PROJ_VECT_BASE(BASE=bamo, NUME_DDL_GENE=nddlgen, VECT_ASSE=vecas2b, TYPE_VECT="FORC")

vecge3b = PROJ_VECT_BASE(BASE=bamo, NUME_DDL_GENE=nddlgen, VECT_ASSE=vecas3b, TYPE_VECT="FORC")

vecge4b = PROJ_VECT_BASE(BASE=bamo, NUME_DDL_GENE=nddlgen, VECT_ASSE=vecas4b, TYPE_VECT="FORC")

vecge5b = PROJ_VECT_BASE(BASE=bamo, NUME_DDL_GENE=nddlgen, VECT_ASSE=vecas5b, TYPE_VECT="FORC")

vecge6b = PROJ_VECT_BASE(BASE=bamo, NUME_DDL_GENE=nddlgen, VECT_ASSE=vecas6b, TYPE_VECT="FORC")

NF = 3
impe = [None] * NF
rito = [None] * NF

for k in range(1, NF):

    impe[k] = LIRE_IMPE_MISS(
        BASE=bamo,
        NUME_DDL_GENE=nddlgen,
        UNITE_RESU_IMPE=38,
        FREQ_EXTR=-8.5 + 17.0 * k,
        # TYPE='BINAIRE',
    )

    rito[k] = COMB_MATR_ASSE(
        COMB_C=(_F(MATR_ASSE=impe[k], COEF_C=1.0 + 0.0j), _F(MATR_ASSE=rigigen, COEF_C=1.0 + 0.0j)),
        SANS_CMP="LAGR",
    )

    if k == 1:
        dyget = DYNA_VIBRA(
            TYPE_CALCUL="HARM",
            BASE_CALCUL="GENE",
            MATR_MASS=massgen,
            MATR_RIGI=rito[k],
            FREQ=-8.5 + 17.0 * k,
            EXCIT=(
                _F(VECT_ASSE_GENE=vecge1b, COEF_MULT=1.0),
                _F(VECT_ASSE_GENE=vecge2b, COEF_MULT=1.0),
                _F(VECT_ASSE_GENE=vecge3b, COEF_MULT=1.0),
            ),
        )

        dyger = DYNA_VIBRA(
            TYPE_CALCUL="HARM",
            BASE_CALCUL="GENE",
            MATR_MASS=massgen,
            MATR_RIGI=rito[k],
            FREQ=-8.5 + 17.0 * k,
            EXCIT=(
                _F(VECT_ASSE_GENE=vecge4b, COEF_MULT=1.0),
                _F(VECT_ASSE_GENE=vecge5b, COEF_MULT=1.0),
                _F(VECT_ASSE_GENE=vecge6b, COEF_MULT=1.0),
            ),
        )
    else:
        dyget = DYNA_VIBRA(
            TYPE_CALCUL="HARM",
            BASE_CALCUL="GENE",
            reuse=dyget,
            RESULTAT=dyget,
            MATR_MASS=massgen,
            MATR_RIGI=rito[k],
            FREQ=-8.5 + 17.0 * k,
            EXCIT=(
                _F(VECT_ASSE_GENE=vecge1b, COEF_MULT=1.0),
                _F(VECT_ASSE_GENE=vecge2b, COEF_MULT=1.0),
                _F(VECT_ASSE_GENE=vecge3b, COEF_MULT=1.0),
            ),
        )

        dyger = DYNA_VIBRA(
            TYPE_CALCUL="HARM",
            BASE_CALCUL="GENE",
            reuse=dyger,
            RESULTAT=dyger,
            MATR_MASS=massgen,
            MATR_RIGI=rito[k],
            FREQ=-8.5 + 17.0 * k,
            EXCIT=(
                _F(VECT_ASSE_GENE=vecge4b, COEF_MULT=1.0),
                _F(VECT_ASSE_GENE=vecge5b, COEF_MULT=1.0),
                _F(VECT_ASSE_GENE=vecge6b, COEF_MULT=1.0),
            ),
        )

# Extraction des deplacements

U11b = RECU_FONCTION(RESU_GENE=dyget, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DX")

U51b = RECU_FONCTION(RESU_GENE=dyget, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DRY")

U22b = RECU_FONCTION(RESU_GENE=dyget, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DY")

U42b = RECU_FONCTION(RESU_GENE=dyget, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DRX")

U33b = RECU_FONCTION(RESU_GENE=dyget, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DZ")

U24b = RECU_FONCTION(RESU_GENE=dyger, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DY")

U44b = RECU_FONCTION(RESU_GENE=dyger, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DRX")

U15b = RECU_FONCTION(RESU_GENE=dyger, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DX")

U55b = RECU_FONCTION(RESU_GENE=dyger, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DRY")

U66b = RECU_FONCTION(RESU_GENE=dyger, NOM_CHAM="DEPL", GROUP_NO="Pnew", NOM_CMP="DRZ")


# CALCUL ASTER FULL-FEM POUR REFERENCE AUTRE_ASTER
TEST_FONCTION(
    VALEUR=(
        _F(VALE_CALC_C=(4.405562e-06 - 3.103320e-06j), VALE_PARA=8.5, FONCTION=U11),
        _F(VALE_CALC_C=(9.786317e-07 - 2.972870e-06j), VALE_PARA=25.5, FONCTION=U11),
        _F(VALE_CALC_C=(4.174931e-06 - 2.920876e-06j), VALE_PARA=8.5, FONCTION=U22),
        _F(VALE_CALC_C=(1.042063e-06 - 2.641335e-06j), VALE_PARA=25.5, FONCTION=U22),
        _F(VALE_CALC_C=(3.670733e-06 - 3.539087e-06j), VALE_PARA=8.5, FONCTION=U33),
        _F(VALE_CALC_C=(5.687622e-07 - 2.420604e-06j), VALE_PARA=25.5, FONCTION=U33),
        _F(VALE_CALC_C=(6.997733e-08 - 1.411643e-08j), VALE_PARA=8.5, FONCTION=U44),
        _F(VALE_CALC_C=(4.736895e-08 - 4.387128e-08j), VALE_PARA=25.5, FONCTION=U44),
        _F(VALE_CALC_C=(3.938570e-08 - 1.105361e-08j), VALE_PARA=8.5, FONCTION=U55),
        _F(VALE_CALC_C=(1.757004e-08 - 2.782686e-08j), VALE_PARA=25.5, FONCTION=U55),
        _F(VALE_CALC_C=(3.058106e-08 - 6.790613e-09j), VALE_PARA=8.5, FONCTION=U66),
        _F(VALE_CALC_C=(1.627885e-08 - 2.253177e-08j), VALE_PARA=25.5, FONCTION=U66),
        #
        # CALCUL ASTER-MISS3D REFERENCE AUTRE_ASTER ET EGALEMENT SOURCE_EXTERNE
        _F(
            VALE_CALC_C=(4.645135e-06 - 3.412753e-06j),
            VALE_REFE_C=(4.405562e-06 - 3.103320e-06j),
            VALE_PARA=8.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=8.0000000000000001e-2,
            FONCTION=U11b,
        ),
        _F(
            VALE_CALC_C=(1.293239e-06 - 3.050977e-06j),
            VALE_REFE_C=(9.786317e-07 - 2.972870e-06j),
            VALE_PARA=25.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=1.1e-1,
            FONCTION=U11b,
        ),
        _F(
            VALE_CALC_C=(1.293239e-06 - 3.050977e-06j),
            VALE_REFE_C=(1.2679e-06 - 3.0363699999999999e-06j),
            VALE_PARA=25.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=1.0000000000000001e-2,
            FONCTION=U11b,
        ),
        _F(
            VALE_CALC_C=(4.462425e-06 - 3.297199e-06j),
            VALE_REFE_C=(4.174931e-06 - 2.920876e-06j),
            VALE_PARA=8.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=1.0000000000000001e-1,
            FONCTION=U22b,
        ),
        _F(
            VALE_CALC_C=(4.462425e-06 - 3.297199e-06j),
            VALE_REFE_C=(4.3731200000000002e-06 - 3.2521199999999999e-06j),
            VALE_PARA=8.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=2.2000000000000001e-2,
            FONCTION=U22b,
        ),
        _F(
            VALE_CALC_C=(1.469668e-06 - 2.876367e-06j),
            VALE_REFE_C=(1.042063e-06 - 2.641335e-06j),
            VALE_PARA=25.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=18.0e-2,
            FONCTION=U22b,
        ),
        _F(
            VALE_CALC_C=(1.469668e-06 - 2.876367e-06j),
            VALE_REFE_C=(1.42056e-06 - 2.8334599999999998e-06j),
            VALE_PARA=25.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=2.2000000000000001e-2,
            FONCTION=U22b,
        ),
        _F(
            VALE_CALC_C=(4.410068e-06 - 4.272455e-06j),
            VALE_REFE_C=(3.670733e-06 - 3.539087e-06j),
            VALE_PARA=8.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=21.0e-2,
            FONCTION=U33b,
        ),
        _F(
            VALE_CALC_C=(4.410068e-06 - 4.272455e-06j),
            VALE_REFE_C=(4.3761999999999997e-06 - 4.2431799999999998e-06j),
            VALE_PARA=8.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=2.0000000000000001e-2,
            FONCTION=U33b,
        ),
        _F(
            VALE_CALC_C=(7.025091e-07 - 2.830639e-06j),
            VALE_REFE_C=(5.687622e-07 - 2.420604e-06j),
            VALE_PARA=25.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=18.0e-2,
            FONCTION=U33b,
        ),
        _F(
            VALE_CALC_C=(7.025091e-07 - 2.830639e-06j),
            VALE_REFE_C=(6.76519e-07 - 2.7819500000000001e-06j),
            VALE_PARA=25.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=2.0000000000000001e-2,
            FONCTION=U33b,
        ),
        _F(
            VALE_CALC_C=(9.296503e-08 - 2.281340e-08j),
            VALE_REFE_C=(6.997733e-08 - 1.411643e-08j),
            VALE_PARA=8.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=35.0e-2,
            FONCTION=U44b,
        ),
        _F(
            VALE_CALC_C=(9.296503e-08 - 2.281340e-08j),
            VALE_REFE_C=(8.6984700000000005e-08 - 2.1394700000000001e-08j),
            VALE_PARA=8.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=7.0000000000000001e-2,
            FONCTION=U44b,
        ),
        _F(
            VALE_CALC_C=(6.415414e-08 - 5.661873e-08j),
            VALE_REFE_C=(4.736895e-08 - 4.387128e-08j),
            VALE_PARA=25.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=35.0e-2,
            FONCTION=U44b,
        ),
        _F(
            VALE_CALC_C=(6.415414e-08 - 5.661873e-08j),
            VALE_REFE_C=(6.0249699999999997e-08 - 5.3456300000000002e-08j),
            VALE_PARA=25.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=7.0000000000000001e-2,
            FONCTION=U44b,
        ),
        _F(
            VALE_CALC_C=(4.909687e-08 - 1.504732e-08j),
            VALE_REFE_C=(3.938570e-08 - 1.105361e-08j),
            VALE_PARA=8.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=26.0e-2,
            FONCTION=U55b,
        ),
        _F(
            VALE_CALC_C=(4.909687e-08 - 1.504732e-08j),
            VALE_REFE_C=(4.7512799999999999e-08 - 1.46293e-08j),
            VALE_PARA=8.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=4.0000000000000001e-2,
            FONCTION=U55b,
        ),
        _F(
            VALE_CALC_C=(2.166812e-08 - 3.324385e-08j),
            VALE_REFE_C=(1.757004e-08 - 2.782686e-08j),
            VALE_PARA=25.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=21.0e-2,
            FONCTION=U55b,
        ),
        _F(
            VALE_CALC_C=(2.166812e-08 - 3.324385e-08j),
            VALE_REFE_C=(2.0890399999999999e-08 - 3.2082899999999998e-08j),
            VALE_PARA=25.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=4.0000000000000001e-2,
            FONCTION=U55b,
        ),
        _F(
            VALE_CALC_C=(3.272202e-08 - 7.396247e-09j),
            VALE_REFE_C=(3.058106e-08 - 6.790613e-09j),
            VALE_PARA=8.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=8.0e-2,
            FONCTION=U66b,
        ),
        _F(
            VALE_CALC_C=(3.272202e-08 - 7.396247e-09j),
            VALE_REFE_C=(3.2398100000000002e-08 - 7.3298799999999999e-09j),
            VALE_PARA=8.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=1.5000000000000001e-2,
            FONCTION=U66b,
        ),
        _F(
            VALE_CALC_C=(1.941809e-08 - 2.238548e-08j),
            VALE_REFE_C=(1.627885e-08 - 2.253177e-08j),
            VALE_PARA=25.5,
            REFERENCE="AUTRE_ASTER",
            PRECISION=12.0e-2,
            FONCTION=U66b,
        ),
        _F(
            VALE_CALC_C=(1.941809e-08 - 2.238548e-08j),
            VALE_REFE_C=(1.9198300000000001e-08 - 2.22916e-08j),
            VALE_PARA=25.5,
            REFERENCE="SOURCE_EXTERNE",
            PRECISION=1.0000000000000001e-2,
            FONCTION=U66b,
        ),
    )
)

FIN()
