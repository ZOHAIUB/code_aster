# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

MAILLAGE = LIRE_MAILLAGE(FORMAT="ASTER")

MAILLAGE = DEFI_GROUP(reuse=MAILLAGE, MAILLAGE=MAILLAGE, CREA_GROUP_MA=_F(NOM="TOUT", TOUT="OUI"))

#

MODELE = AFFE_MODELE(
    MAILLAGE=MAILLAGE, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="POU_D_E")
)

#

MAT = DEFI_MATERIAU(ELAS=_F(E=1.658e11, RHO=1.3404106e04, AMOR_ALPHA=1.0e-3, AMOR_BETA=0.0, NU=0.3))

#

CHAMPMAT = AFFE_MATERIAU(MAILLAGE=MAILLAGE, AFFE=_F(TOUT="OUI", MATER=MAT))

#

CARA_ELE = AFFE_CARA_ELEM(
    MODELE=MODELE,
    POUTRE=_F(
        GROUP_MA="TOUT",
        SECTION="GENERALE",
        CARA=("A", "IZ", "IY", "JX"),
        VALE=(3.4390e-03, 1.3770e-05, 1.3770e-05, 2.7540e-05),
    ),
)

#
# LA STRUCTURE EST ENCASTREE A SA BASE
# -----------------------------------------------

COND_LIM = AFFE_CHAR_MECA(
    MODELE=MODELE, DDL_IMPO=_F(GROUP_NO="A", DX=0.0, DY=0.0, DZ=0.0, DRX=0.0, DRY=0.0, DRZ=0.0)
)

#
# ------------------------------#
#  CALCUL DES MATRICES         #
# ------------------------------#
#

RIGI_ELE = CALC_MATR_ELEM(
    MODELE=MODELE, OPTION="RIGI_MECA", CHAM_MATER=CHAMPMAT, CARA_ELEM=CARA_ELE, CHARGE=COND_LIM
)

MASS_ELE = CALC_MATR_ELEM(
    MODELE=MODELE, OPTION="MASS_MECA", CHAM_MATER=CHAMPMAT, CARA_ELEM=CARA_ELE, CHARGE=COND_LIM
)

AMOR_ELE = CALC_MATR_ELEM(
    MODELE=MODELE,
    OPTION="AMOR_MECA",
    RIGI_MECA=RIGI_ELE,
    MASS_MECA=MASS_ELE,
    CHAM_MATER=CHAMPMAT,
    CARA_ELEM=CARA_ELE,
    CHARGE=COND_LIM,
)

#

NUMEDDL = NUME_DDL(MATR_RIGI=RIGI_ELE)

#

RIGIDITE = ASSE_MATRICE(MATR_ELEM=RIGI_ELE, NUME_DDL=NUMEDDL)

MASSE = ASSE_MATRICE(MATR_ELEM=MASS_ELE, NUME_DDL=NUMEDDL)

AMORTIS = ASSE_MATRICE(MATR_ELEM=AMOR_ELE, NUME_DDL=NUMEDDL)

#

FONC = DEFI_CONSTANTE(VALE=1.0)

#
# -------------------------------#
# TRACTION : SANS AMORTISSEMENT #
# -------------------------------#
#

CHA_F = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="B", FX=3.0e3))

#

V_F_ELE = CALC_VECT_ELEM(OPTION="CHAR_MECA", CHAM_MATER=CHAMPMAT, CARA_ELEM=CARA_ELE, CHARGE=CHA_F)

#

VECAS_F = ASSE_VECTEUR(VECT_ELEM=V_F_ELE, NUME_DDL=NUMEDDL)

#

DYNA_F = DYNA_VIBRA(
    TYPE_CALCUL="HARM",
    BASE_CALCUL="PHYS",
    CHAM_MATER=CHAMPMAT,
    CARA_ELEM=CARA_ELE,
    MATR_MASS=MASSE,
    MATR_RIGI=RIGIDITE,
    FREQ=10.0,
    EXCIT=_F(VECT_ASSE=VECAS_F, FONC_MULT=FONC),
)

#

DYNA_F = CALC_CHAMP(reuse=DYNA_F, RESULTAT=DYNA_F, CONTRAINTE=("EFGE_ELNO"))

#
TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=3000.0 + 0.0e00j,
            VALE_REFE_C=(3000 + 0j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_F,
            NOM_CHAM="EFGE_ELNO",
            NOM_CMP="N",
            GROUP_MA="M18",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=5.3181379412487e-05 + 0.0e00j,
            VALE_REFE_C=(5.3180000000000002e-05 + 0j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_F,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=0.0e00 + 3.3414846174008e-03j,
            VALE_REFE_C=0.0033409999999999998j,
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_F,
            NOM_CHAM="VITE",
            NOM_CMP="DX",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=-0.20995167052220 + 0.0e00j,
            VALE_REFE_C=(-0.2099 + 0j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_F,
            NOM_CHAM="ACCE",
            NOM_CMP="DX",
        ),
    )
)

#
# -------------------------------#
# FLEXION  : SANS AMORTISSEMENT #
# -------------------------------#
#

CHA_FL = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="B", FY=3.0e3))

#

V_FL_ELE = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=CHAMPMAT, CARA_ELEM=CARA_ELE, CHARGE=CHA_FL
)

#

VECAS_FL = ASSE_VECTEUR(VECT_ELEM=V_FL_ELE, NUME_DDL=NUMEDDL)

#

DYNA_FL = DYNA_VIBRA(
    TYPE_CALCUL="HARM",
    BASE_CALCUL="PHYS",
    CHAM_MATER=CHAMPMAT,
    CARA_ELEM=CARA_ELE,
    MATR_MASS=MASSE,
    MATR_RIGI=RIGIDITE,
    FREQ=10.0,
    EXCIT=_F(VECT_ASSE=VECAS_FL, FONC_MULT=FONC),
)

#

DYNA_FL = CALC_CHAMP(reuse=DYNA_FL, RESULTAT=DYNA_FL, CONTRAINTE=("EFGE_ELNO"))

#
TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=2999.9999999999 + 0.0e00j,
            VALE_REFE_C=(3000 + 0j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_FL,
            NOM_CHAM="EFGE_ELNO",
            NOM_CMP="VY",
            GROUP_MA="M18",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=-0.021164715868371 + 0.0e00j,
            VALE_REFE_C=(-0.021164715868368 + 0j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_FL,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=0.0e00 - 1.3298183177478j,
            VALE_REFE_C=-1.3298183177476j,
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_FL,
            NOM_CHAM="VITE",
            NOM_CMP="DY",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=83.554949152912 + 0.0e00j,
            VALE_REFE_C=(83.554949152901003 + 0j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_FL,
            NOM_CHAM="ACCE",
            NOM_CMP="DY",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=-6.6710946072566e-03 + 0.0e00j,
            VALE_REFE_C=(-0.0066710946072559996 + 0j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_FL,
            NOM_CHAM="DEPL",
            NOM_CMP="DRZ",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=0.0e00 - 0.41915723619120j,
            VALE_REFE_C=-0.41915723619116002j,
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_FL,
            NOM_CHAM="VITE",
            NOM_CMP="DRZ",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=26.336425878345 + 0.0e00j,
            VALE_REFE_C=(26.336425878343 + 0j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_FL,
            NOM_CHAM="ACCE",
            NOM_CMP="DRZ",
        ),
    )
)

#
# -------------------------------#
# TRACTION : AVEC AMORTISSEMENT #
# -------------------------------#
#

CHA_AF = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="B", FX=3.0e3))

#

V_AF_ELE = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=CHAMPMAT, CARA_ELEM=CARA_ELE, CHARGE=CHA_AF
)

#

VECAS_AF = ASSE_VECTEUR(VECT_ELEM=V_AF_ELE, NUME_DDL=NUMEDDL)

#

DYNA_AF = DYNA_VIBRA(
    TYPE_CALCUL="HARM",
    BASE_CALCUL="PHYS",
    CHAM_MATER=CHAMPMAT,
    CARA_ELEM=CARA_ELE,
    MATR_MASS=MASSE,
    MATR_RIGI=RIGIDITE,
    MATR_AMOR=AMORTIS,
    FREQ=10.0,
    EXCIT=_F(VECT_ASSE=VECAS_AF, FONC_MULT=FONC),
)

#

DYNA_AF = CALC_CHAMP(reuse=DYNA_AF, RESULTAT=DYNA_AF, CONTRAINTE=("EFGE_ELNO"))

#
TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=2988.1822618652 - 187.91817940873j,
            VALE_REFE_C=(2987.9000000000001 - 189.69999999999999j),
            REFERENCE="ANALYTIQUE",
            PRECISION=6.9999999999999999e-4,
            RESULTAT=DYNA_AF,
            NOM_CHAM="EFGE_ELNO",
            NOM_CMP="N",
            GROUP_MA="M18",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=5.2967725682528e-05 - 3.3640002053896e-06j,
            VALE_REFE_C=(5.2960000000000001e-05 - 3.3629999999999998e-06j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AF,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=2.1136636663853e-04 + 3.3280603576318e-03j,
            VALE_REFE_C=(0.00021130000000000001 + 0.0033270000000000001j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AF,
            NOM_CHAM="VITE",
            NOM_CMP="DX",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=-0.20910819940479 + 0.013280540492951j,
            VALE_REFE_C=(-0.20910000000000001 + 0.013270000000000001j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AF,
            NOM_CHAM="ACCE",
            NOM_CMP="DX",
        ),
    )
)

#
# -------------------------------#
# FLEXION  : AVEC AMORTISSEMENT #
# -------------------------------#
#

CHA_AFL = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="B", FY=3.0e3))

#

V_AFL_E = CALC_VECT_ELEM(
    OPTION="CHAR_MECA", CHAM_MATER=CHAMPMAT, CARA_ELEM=CARA_ELE, CHARGE=CHA_AFL
)

#

VEC_AFL = ASSE_VECTEUR(VECT_ELEM=V_AFL_E, NUME_DDL=NUMEDDL)

#

DYNA_AFL = DYNA_VIBRA(
    TYPE_CALCUL="HARM",
    BASE_CALCUL="PHYS",
    CHAM_MATER=CHAMPMAT,
    CARA_ELEM=CARA_ELE,
    MATR_MASS=MASSE,
    MATR_RIGI=RIGIDITE,
    MATR_AMOR=AMORTIS,
    FREQ=10.0,
    EXCIT=_F(VECT_ASSE=VEC_AFL, FONC_MULT=FONC),
)

#

DYNA_AFL = CALC_CHAMP(reuse=DYNA_AFL, RESULTAT=DYNA_AFL, CONTRAINTE=("EFGE_ELNO"))

DYNA_AFL = CALC_CHAMP(reuse=DYNA_AFL, RESULTAT=DYNA_AFL, CONTRAINTE="EFGE_NOEU")
#
TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=2986.8951093368 - 124.41983057228j,
            VALE_REFE_C=(2986.8951093362002 - 124.4198305724j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AFL,
            NOM_CHAM="EFGE_NOEU",
            NOM_CMP="VY",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="A",
            VALE_CALC_C=9639.7865167441 + 673.70390082877j,
            VALE_REFE_C=(9639.7865167429009 + 673.70390082880999j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AFL,
            NOM_CHAM="EFGE_NOEU",
            NOM_CMP="MFZ",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=-0.021018274341129 - 1.8232283449982e-03j,
            VALE_REFE_C=(-0.021018274341124001 - 0.0018232283449978999j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AFL,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=0.11455681548926 - 1.3206171252245j,
            VALE_REFE_C=(0.11455681548924 - 1.3206171252242001j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AFL,
            NOM_CHAM="VITE",
            NOM_CMP="DY",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=82.976821176204 + 7.197816999194j,
            VALE_REFE_C=(82.976821176185993 + 7.1978169991928j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AFL,
            NOM_CHAM="ACCE",
            NOM_CMP="DY",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=-6.6070701790276e-03 - 9.5228433787346e-04j,
            VALE_REFE_C=(-0.0066070701790265996 - 0.00095228433787341996j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AFL,
            NOM_CHAM="DEPL",
            NOM_CMP="DRZ",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=0.059833789599838 - 0.41513446272371j,
            VALE_REFE_C=(0.059833789599834999 - 0.41513446272364002j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AFL,
            NOM_CHAM="VITE",
            NOM_CMP="DRZ",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=26.083667566895 + 3.7594678768658j,
            VALE_REFE_C=(26.083667566890998 + 3.7594678768656j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=DYNA_AFL,
            NOM_CHAM="ACCE",
            NOM_CMP="DRZ",
        ),
    )
)

# Validation de VECT_3D à 6 composantes pour un champ aux noeuds complexe (translation et rotation)
# Les valeurs de référence ont été calculées par deux appels différents avant suppression du
# mot-clé NOM_CMP.

# RESU01TRANS = MODI_REPERE(
# RESULTAT=DYNA_AFL,
# NUME_ORDRE=1,
# MODI_CHAM=(_F(NOM_CHAM="ACCE", NOM_CMP=("DX", "DY", "DZ"), TYPE_CHAM="VECT_3D"),),
# REPERE="UTILISATEUR",
# AFFE=_F(VECT_X=(1.0, 1.0, 1.0), VECT_Y=(-1.0, 1.0, 0.0), TOUT="OUI"),
# INFO=1,
# )

# RESU01ROT = MODI_REPERE(
# RESULTAT=DYNA_AFL,
# NUME_ORDRE=1,
# MODI_CHAM=(_F(NOM_CHAM="ACCE", NOM_CMP=("DRX", "DRY", "DRZ"), TYPE_CHAM="VECT_3D"),),
# REPERE="UTILISATEUR",
# AFFE=_F(VECT_X=(1.0, 1.0, 1.0), VECT_Y=(-1.0, 1.0, 0.0), TOUT="OUI"),
# INFO=1,
# )

RESU01TOUT = MODI_REPERE(
    RESULTAT=DYNA_AFL,
    NUME_ORDRE=1,
    MODI_CHAM=(_F(NOM_CHAM="ACCE", TYPE_CHAM="VECT_3D"),),
    REPERE="UTILISATEUR",
    AFFE=_F(VECT_X=(1.0, 1.0, 1.0), VECT_Y=(-1.0, 1.0, 0.0), TOUT="OUI"),
    INFO=1,
)
# IMPR_RESU(UNITE=6, FORMAT='RESULTAT', RESU=_F(RESULTAT=DYNA_AFL, NOM_CHAM='ACCE', NUME_ORDRE=1, GROUP_NO='B'))
# IMPR_RESU(UNITE=6, FORMAT='RESULTAT', RESU=_F(RESULTAT=RESU01TOUT, NOM_CHAM='ACCE', NUME_ORDRE=1, GROUP_NO='B'))


TEST_RESU(
    RESU=(
        # _F(
        # NUME_ORDRE=1,
        # GROUP_NO="B",
        # VALE_CALC_C=4.79066900425732e01 + 4.15566158206141e00j,
        # RESULTAT=RESU01TRANS,
        # NOM_CHAM="ACCE",
        # NOM_CMP="DX",
        # ),
        # _F(
        # NUME_ORDRE=1,
        # GROUP_NO="B",
        # VALE_CALC_C=5.86734729349880e01 + 5.08962520986876e00j,
        # RESULTAT=RESU01TRANS,
        # NOM_CHAM="ACCE",
        # NOM_CMP="DY",
        # ),
        # _F(
        # NUME_ORDRE=1,
        # GROUP_NO="B",
        # VALE_CALC_C=-3.38751453933056e01 - 2.93849648499204e00j,
        # RESULTAT=RESU01TRANS,
        # NOM_CHAM="ACCE",
        # NOM_CMP="DZ",
        # ),
        # _F(
        # NUME_ORDRE=1,
        # GROUP_NO="B",
        # VALE_CALC_C=1.50594124911973e01 + 2.17052979071808e00j,
        # RESULTAT=RESU01ROT,
        # NOM_CHAM="ACCE",
        # NOM_CMP="DRX",
        # ),
        # _F(
        # NUME_ORDRE=1,
        # GROUP_NO="B",
        # VALE_CALC_C=2.12972253864220e01 + 3.06959266756835e00j,
        # RESULTAT=RESU01ROT,
        # NOM_CHAM="ACCE",
        # NOM_CMP="DRZ",
        # ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=4.79066900425732e01 + 4.15566158206141e00j,
            VALE_REFE_C=(4.79066900425732e01 + 4.15566158206141e00j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=RESU01TOUT,
            NOM_CHAM="ACCE",
            NOM_CMP="DX",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=5.86734729349880e01 + 5.08962520986876e00j,
            VALE_REFE_C=(5.86734729349880e01 + 5.08962520986876e00j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=RESU01TOUT,
            NOM_CHAM="ACCE",
            NOM_CMP="DY",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=-3.38751453933056e01 - 2.93849648499204e00j,
            VALE_REFE_C=(-3.38751453933056e01 - 2.93849648499204e00j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=RESU01TOUT,
            NOM_CHAM="ACCE",
            NOM_CMP="DZ",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=1.50594124911973e01 + 2.17052979071808e00j,
            VALE_REFE_C=(1.50594124911973e01 + 2.17052979071808e00j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=RESU01TOUT,
            NOM_CHAM="ACCE",
            NOM_CMP="DRX",
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="B",
            VALE_CALC_C=2.12972253864220e01 + 3.06959266756835e00j,
            VALE_REFE_C=(2.12972253864220e01 + 3.06959266756835e00j),
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0000000000000001e-4,
            RESULTAT=RESU01TOUT,
            NOM_CHAM="ACCE",
            NOM_CMP="DRZ",
        ),
    )
)


FIN()
#
#
#
