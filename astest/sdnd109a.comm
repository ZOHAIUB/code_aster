# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------
#
DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="NON"))
# SDVERI='NON' car la verification est trop couteuse en CPU
import numpy as NU

mail = LIRE_MAILLAGE(UNITE=20, FORMAT="ASTER")

modele = AFFE_MODELE(
    MAILLAGE=mail, AFFE=_F(GROUP_MA=("GAC", "RESSORT"), PHENOMENE="MECANIQUE", MODELISATION="DIS_T")
)

Pesanteur = 10.0
Raidxyz = 2.0
Masse = 15.0
#
Kress = 500.0
Tfin = 10.0
#
carael = AFFE_CARA_ELEM(
    MODELE=modele,
    DISCRET=(
        _F(GROUP_MA="RESSORT", REPERE="LOCAL", CARA="K_T_D_L", VALE=(Kress, Kress, Kress)),
        _F(GROUP_MA="RESSORT", CARA="M_T_D_L", VALE=(0.0,)),
        _F(GROUP_MA="RESSORT", CARA="A_T_D_L", VALE=(0.0, 0.0, 0.0)),
        _F(GROUP_MA="GAC", REPERE="LOCAL", CARA="K_T_D_L", VALE=(Raidxyz, Raidxyz, Raidxyz)),
        _F(GROUP_MA="GAC", CARA="M_T_D_L", VALE=(Masse,)),
        _F(GROUP_MA="GAC", CARA="A_T_D_L", VALE=(0.0, 0.0, 0.0)),
    ),
)
charge = AFFE_CHAR_MECA(
    MODELE=modele,
    PESANTEUR=_F(GROUP_MA="GAC", GRAVITE=Pesanteur, DIRECTION=(1.0, 0.0, 0.0)),
    DDL_IMPO=(_F(GROUP_NO="PT2", DX=0.0, DY=0.0, DZ=0.0), _F(GROUP_NO="PT3", DY=0.0, DZ=0.0)),
)
FDeplT = FORMULE(
    VALE="0.25*sin(2.0*pi*INST)+0.10*sin(2.0*pi*1.5*INST)+0.10*sin(2.0*pi*3.0*INST)",
    NOM_PARA="INST",
)
pas = 1.0 / (4.0 * 10.0)
lsignal = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=Tfin, PAS=pas),))
DeplT = CALC_FONC_INTERP(
    FONCTION=FDeplT,
    LIST_PARA=lsignal,
    NOM_PARA="INST",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)
CLdepl = AFFE_CHAR_MECA_F(MODELE=modele, DDL_IMPO=(_F(GROUP_NO="PT3", DX=DeplT),))
#
ldepla = NU.array([0.00, 2.00, 5.00, 7.000, 9.500, 13.000, 16.000, 200.000]) / 10.0
lforce = NU.array([4.00, 4.00, 4.50, 4.000, 3.750, 3.500, 3.000, 3.000]) * 100.0
# Raideur constante
lraide = NU.array([2.00, 2.00, 2.00, 2.000, 2.000, 2.000, 2.000, 2.000]) * 1000.0
# Amortissement nul
lamort = NU.array([1.00, 1.00, 1.00, 0.800, 0.800, 0.700, 0.600, 0.600]) * 0.0

fctfx = DEFI_FONCTION(NOM_PARA="DX", ABSCISSE=ldepla, ORDONNEE=lforce)
fctrd = DEFI_FONCTION(NOM_PARA="DX", ABSCISSE=ldepla, ORDONNEE=lraide)
fctam = DEFI_FONCTION(NOM_PARA="DX", ABSCISSE=ldepla, ORDONNEE=lamort)

grilleac = DEFI_MATERIAU(
    INFO=2,
    DIS_CHOC_ENDO=_F(
        FX=fctfx, RIGI_NOR=fctrd, AMOR_NOR=fctam, DIST_1=0.0, DIST_2=0.0, CRIT_AMOR="INCLUS"
    ),
)

chmat = AFFE_MATERIAU(MAILLAGE=mail, AFFE=_F(GROUP_MA="GAC", MATER=grilleac))
#
# --------------------------------------------------------------------
pas1 = 0.005
l_inst1 = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=Tfin, PAS=pas1),))

resu1 = DYNA_NON_LINE(
    MODELE=modele,
    CHAM_MATER=chmat,
    CARA_ELEM=carael,
    EXCIT=(_F(CHARGE=charge), _F(CHARGE=CLdepl)),
    COMPORTEMENT=(_F(GROUP_MA="GAC", RELATION="CHOC_ENDO"),),
    INCREMENT=_F(LIST_INST=l_inst1),
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK", FORMULATION="DEPLACEMENT"),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0e-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE="TANGENTE", REAC_ITER=1),
    ARCHIVAGE=_F(LIST_INST=l_inst1),
)

# --------------------------------------------------------------------
pas2 = 0.010
l_inst2 = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=Tfin, PAS=pas2),))

resu2 = DYNA_NON_LINE(
    MODELE=modele,
    CHAM_MATER=chmat,
    CARA_ELEM=carael,
    EXCIT=(_F(CHARGE=charge), _F(CHARGE=CLdepl)),
    COMPORTEMENT=(_F(GROUP_MA="GAC", RELATION="CHOC_ENDO"),),
    INCREMENT=_F(LIST_INST=l_inst2),
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK", FORMULATION="DEPLACEMENT"),
    CONVERGENCE=_F(RESI_REFE_RELA=5.0e-02, EFFORT_REFE=1.0),
    NEWTON=_F(REAC_INCR=1, MATRICE="TANGENTE", REAC_ITER=1),
    ARCHIVAGE=_F(LIST_INST=l_inst2),
)
#
DEPL11 = RECU_FONCTION(RESULTAT=resu1, NOM_CHAM="DEPL", NOM_CMP="DX", GROUP_NO="PT1")
FORC_1 = RECU_FONCTION(RESULTAT=resu1, NOM_CHAM="SIEF_ELGA", NOM_CMP="N", GROUP_MA="GAC", POINT=1)
PCUM_1 = RECU_FONCTION(RESULTAT=resu1, NOM_CHAM="VARI_ELGA", NOM_CMP="V1", GROUP_MA="GAC", POINT=1)
#
DEPL12 = RECU_FONCTION(RESULTAT=resu2, NOM_CHAM="DEPL", NOM_CMP="DX", GROUP_NO="PT1")
FORC_2 = RECU_FONCTION(RESULTAT=resu2, NOM_CHAM="SIEF_ELGA", NOM_CMP="N", GROUP_MA="GAC", POINT=1)
PCUM_2 = RECU_FONCTION(RESULTAT=resu2, NOM_CHAM="VARI_ELGA", NOM_CMP="V1", GROUP_MA="GAC", POINT=1)
#
# INST             DEPL              FORC              PCUM
Resultat1 = [
    1.1000000000e-01,
    8.6804086791e-02,
    0.0000000000e00,
    0.0000000000e00,
    1.4000000000e-01,
    1.4623320513e-01,
    -9.2478605109e01,
    0.0000000000e00,
    2.0000000000e-01,
    2.8109617676e-01,
    -3.6220454837e02,
    0.0000000000e00,
    2.1000000000e-01,
    3.0093325097e-01,
    -4.0017057038e02,
    8.5406320348e-04,
    3.0000000000e-01,
    3.8742136768e-01,
    -4.1455851223e02,
    8.0148208981e-02,
    3.7000000000e-01,
    3.3011145621e-01,
    -2.9993868931e02,
    8.0148208981e-02,
    4.5000000000e-01,
    1.8891923468e-01,
    -1.7554246239e01,
    8.0148208981e-02,
    4.6000000000e-01,
    1.7104489887e-01,
    -6.5085354029e-03,
    8.0148208981e-02,
    1.0300000000e00,
    1.6687779128e-01,
    0.0000000000e00,
    8.0148208981e-02,
    1.1000000000e00,
    3.3492321556e-01,
    -3.0954401130e02,
    8.0148208981e-02,
    1.1800000000e00,
    4.2990164611e-01,
    -4.2164577360e02,
    1.1907575838e-01,
    1.2200000000e00,
    4.1087254411e-01,
    -3.8330625900e02,
    1.1921641369e-01,
    1.3000000000e00,
    2.6446583434e-01,
    -9.0492839449e01,
    1.1921641369e-01,
    1.3300000000e00,
    1.9878204410e-01,
    0.0000000000e00,
    1.1921641369e-01,
    1.6800000000e00,
    2.1472072225e-01,
    0.0000000000e00,
    1.1921641369e-01,
    1.7000000000e00,
    2.2822583702e-01,
    -1.8017673094e01,
    1.1921641369e-01,
    1.7700000000e00,
    2.5266588353e-01,
    -6.6897766117e01,
    1.1921641369e-01,
    1.8600000000e00,
    2.1010493293e-01,
    0.0000000000e00,
    1.1921641369e-01,
    2.2300000000e00,
    2.1302580779e-01,
    -7.7739440823e-11,
    1.1921641369e-01,
    2.2400000000e00,
    2.4098621851e-01,
    -4.3541046324e01,
    1.1921641369e-01,
    2.3900000000e00,
    5.1196589391e-01,
    -4.3517594577e02,
    1.9437863936e-01,
    2.5100000000e00,
    3.1329034728e-01,
    -3.7824852521e01,
    1.9437863936e-01,
    2.5200000000e00,
    2.8530777299e-01,
    -1.7853341651e-02,
    1.9437863936e-01,
    3.1200000000e00,
    2.7603826595e-01,
    -1.7853341723e-02,
    1.9437863936e-01,
    3.1400000000e00,
    3.6581764812e-01,
    -1.4290427642e02,
    1.9437863936e-01,
    3.1500000000e00,
    4.1004441256e-01,
    -2.3135780531e02,
    1.9437863936e-01,
    3.1600000000e00,
    4.5281158630e-01,
    -3.1689215279e02,
    1.9437863936e-01,
    3.1700000000e00,
    4.9337354156e-01,
    -3.9801606330e02,
    1.9437863936e-01,
    3.1800000000e00,
    5.3103602070e-01,
    -4.3853275809e02,
    2.1178277110e-01,
    3.1900000000e00,
    5.6536345690e-01,
    -4.4425399746e02,
    2.4324958762e-01,
    3.2000000000e00,
    5.9615759997e-01,
    -4.4938635464e02,
    2.7147755210e-01,
    3.3800000000e00,
    5.3763560359e-01,
    -8.6881452275e01,
    3.9420800690e-01,
    3.4000000000e00,
    4.8543145871e-01,
    -2.2975981064e-02,
    3.9420800690e-01,
    4.2100000000e00,
    4.5546734090e-01,
    -2.2975981064e-02,
    3.9420800690e-01,
    4.2300000000e00,
    5.4531925357e-01,
    -1.0224314325e02,
    3.9420800690e-01,
    4.2700000000e00,
    7.1049649775e-01,
    -4.2240413010e02,
    3.9930475765e-01,
    4.4600000000e00,
    7.3563612727e-01,
    -8.6124131603e01,
    5.9258438643e-01,
    4.4800000000e00,
    6.7287970007e-01,
    -1.8539437763e-02,
    5.9258438643e-01,
    5.2100000000e00,
    6.4508109838e-01,
    -1.8539437763e-02,
    5.9258438643e-01,
    5.2300000000e00,
    7.6266659519e-01,
    -1.4017466973e02,
    5.9258438643e-01,
    5.2600000000e00,
    9.2009354795e-01,
    -3.8800496654e02,
    6.2609619078e-01,
    5.4500000000e00,
    1.0145432781e00,
    -7.3120032681e01,
    8.7798838791e-01,
    5.4700000000e00,
    9.5005871391e-01,
    -1.5977759018e-02,
    8.7798838791e-01,
    6.2800000000e00,
    9.4779843234e-01,
    -1.5977759444e-02,
    8.7798838791e-01,
    6.3000000000e00,
    1.1033456116e00,
    -2.5074310169e02,
    8.7798838791e-01,
    6.3100000000e00,
    1.1762945648e00,
    -3.6601400644e02,
    8.9330188874e-01,
    6.5000000000e00,
    1.5305805751e00,
    -7.3125544059e01,
    1.3940321302e00,
    6.5100000000e00,
    1.4916690122e00,
    -2.8845113639e-02,
    1.3940321302e00,
    7.3400000000e00,
    1.4351057390e00,
    -2.8845113639e-02,
    1.3940321302e00,
    7.3500000000e00,
    1.5216068822e00,
    -5.5170557295e01,
    1.3940321302e00,
    7.3600000000e00,
    1.6044021828e00,
    -2.2076115854e02,
    1.3940321302e00,
    7.3700000000e00,
    1.6822973712e00,
    -3.0297171681e02,
    1.4308220395e00,
    7.4900000000e00,
    2.1205806654e00,
    -2.9558322596e02,
    1.8727995791e00,
    7.5400000000e00,
    1.9986408571e00,
    -5.1703609250e01,
    1.8727995791e00,
    7.5500000000e00,
    1.9541232692e00,
    -1.7174243603e-02,
    1.8727995791e00,
    8.3900000000e00,
    1.8981562963e00,
    -1.7174243603e-02,
    1.8727995791e00,
    8.4000000000e00,
    2.0203461446e00,
    -9.5112880413e01,
    1.8727995791e00,
    8.4100000000e00,
    2.1366916210e00,
    -3.0003606237e02,
    1.8866834646e00,
    8.5300000000e00,
    2.8369314713e00,
    -2.9941330947e02,
    2.5872346914e00,
    8.5700000000e00,
    2.7362761295e00,
    -9.8102625836e01,
    2.5872346914e00,
    8.5800000000e00,
    2.6855491105e00,
    -1.5589909480e-02,
    2.5872346914e00,
    9.4700000000e00,
    2.6661614690e00,
    -1.5589909480e-02,
    2.5872346914e00,
    9.4800000000e00,
    2.7820586453e00,
    -1.8967737122e02,
    2.5872346914e00,
    9.4900000000e00,
    2.8890128500e00,
    -3.0004858800e02,
    2.6390032876e00,
    9.5800000000e00,
    3.3493773102e00,
    -2.9977903182e02,
    3.0995025260e00,
    9.5900000000e00,
    3.3396371971e00,
    -2.8029880562e02,
    3.0995025260e00,
    9.6000000000e00,
    3.3173744189e00,
    -2.3577324910e02,
    3.0995025260e00,
    9.6100000000e00,
    3.2829019167e00,
    -1.6682824472e02,
    3.0995025260e00,
    9.6200000000e00,
    3.2367532487e00,
    -7.4530908667e01,
    3.0995025260e00,
]
Instant = Resultat1[0::4]
Deplace = Resultat1[1::4]
Force = Resultat1[2::4]
Pcumul = Resultat1[3::4]
motclef = {}
motclef["VALEUR"] = []
for ii in range(len(Instant)):
    # Pour Force
    if abs(Force[ii]) > 1.0:
        motclef["VALEUR"].append(
            _F(FONCTION=FORC_1, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Force[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=FORC_1,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Force[ii],
                CRITERE="ABSOLU",
            )
        )
    # Pour Pcumul
    if abs(Pcumul[ii]) > 0.001:
        motclef["VALEUR"].append(
            _F(FONCTION=PCUM_1, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Pcumul[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=PCUM_1,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Pcumul[ii],
                CRITERE="ABSOLU",
            )
        )
    # Pour Deplace
    if abs(Deplace[ii]) > 0.001:
        motclef["VALEUR"].append(
            _F(FONCTION=DEPL11, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Deplace[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=DEPL11,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Deplace[ii],
                CRITERE="ABSOLU",
            )
        )
TEST_FONCTION(**motclef)
#
# INST             DEPL              FORC              PCUM
Resultat2 = [
    1.1000000000e-01,
    8.6799114482e-02,
    -1.3895122385e-14,
    0.0000000000e00,
    1.4000000000e-01,
    1.4609621068e-01,
    -9.2188349155e01,
    0.0000000000e00,
    2.0000000000e-01,
    2.8067943323e-01,
    -3.6135479426e02,
    0.0000000000e00,
    2.1000000000e-01,
    3.0049537840e-01,
    -4.0011725101e02,
    4.3471678692e-04,
    3.0000000000e-01,
    3.8711165937e-01,
    -4.1455329784e02,
    7.9832974344e-02,
    3.7000000000e-01,
    3.3010646140e-01,
    -3.0054290190e02,
    7.9832974344e-02,
    4.5000000000e-01,
    1.8911013882e-01,
    -1.8550256742e01,
    7.9832974344e-02,
    4.6000000000e-01,
    1.7120355848e-01,
    -1.5793210536e-02,
    7.9832974344e-02,
    1.0300000000e00,
    1.6678437980e-01,
    -1.5793210536e-02,
    7.9832974344e-02,
    1.1000000000e00,
    3.3471728814e-01,
    -3.0979157523e02,
    7.9832974344e-02,
    1.1800000000e00,
    4.2967581272e-01,
    -4.2164084063e02,
    1.1886686621e-01,
    1.2200000000e00,
    4.1074059179e-01,
    -3.8377039879e02,
    1.1886686621e-01,
    1.3000000000e00,
    2.6463978216e-01,
    -9.1568779527e01,
    1.1886686621e-01,
    1.3300000000e00,
    1.9898329524e-01,
    -3.7624660804e-02,
    1.1886686621e-01,
    1.6800000000e00,
    2.1393079958e-01,
    -3.7624660804e-02,
    1.1886686621e-01,
    1.7000000000e00,
    2.2744364526e-01,
    -1.7192460394e01,
    1.1886686621e-01,
    1.7700000000e00,
    2.5214885032e-01,
    -6.6602870502e01,
    1.1886686621e-01,
    1.8600000000e00,
    2.1025630586e-01,
    -4.7206352601e-02,
    1.1886686621e-01,
    2.2300000000e00,
    2.1387475564e-01,
    -4.7206352618e-02,
    1.1886686621e-01,
    2.2400000000e00,
    2.4172441896e-01,
    -4.5772477932e01,
    1.1886686621e-01,
    2.3900000000e00,
    5.1049955636e-01,
    -4.3514446642e02,
    1.9295600937e-01,
    2.5100000000e00,
    3.1153613860e-01,
    -3.7217630894e01,
    1.9295600937e-01,
    2.5200000000e00,
    2.8359939455e-01,
    -5.1696594179e-02,
    1.9295600937e-01,
    3.1200000000e00,
    2.7693582623e-01,
    -5.1696594309e-02,
    1.9295600937e-01,
    3.1400000000e00,
    3.6637187989e-01,
    -1.4688865296e02,
    1.9295600937e-01,
    3.1500000000e00,
    4.1036405312e-01,
    -2.3487299941e02,
    1.9295600937e-01,
    3.1600000000e00,
    4.5287457066e-01,
    -3.1989403451e02,
    1.9295600937e-01,
    3.1700000000e00,
    4.9316412957e-01,
    -4.0047315232e02,
    1.9295600937e-01,
    3.1800000000e00,
    5.3058991905e-01,
    -4.3848948528e02,
    2.1137363237e-01,
    3.1900000000e00,
    5.6472337096e-01,
    -4.4417839393e02,
    2.4266262995e-01,
    3.2000000000e00,
    5.9532812489e-01,
    -4.4927918625e02,
    2.7071698772e-01,
    3.3800000000e00,
    5.3458229029e-01,
    -8.6493725607e01,
    3.9136388344e-01,
    3.4000000000e00,
    4.8231528250e-01,
    -5.4368133339e-02,
    3.9136388344e-01,
    4.2100000000e00,
    4.5665249618e-01,
    -9.0525086410e-11,
    3.9136388344e-01,
    4.2300000000e00,
    5.4597277785e-01,
    -1.0921765715e02,
    3.9136388344e-01,
    4.2700000000e00,
    7.0955416918e-01,
    -4.2262831583e02,
    3.9823994543e-01,
    4.4600000000e00,
    7.2946998013e-01,
    -8.3534445925e01,
    5.8770269134e-01,
    4.4800000000e00,
    6.6673065933e-01,
    -3.2995176716e-04,
    5.8770269134e-01,
    5.2100000000e00,
    6.4730309611e-01,
    -3.2995201622e-04,
    5.8770269134e-01,
    5.2300000000e00,
    7.6400458210e-01,
    -1.5261113175e02,
    5.8770269134e-01,
    5.2600000000e00,
    9.1954683814e-01,
    -3.8805873969e02,
    6.2552114341e-01,
    5.4500000000e00,
    1.0055427756e00,
    -6.8439377412e01,
    8.7132676203e-01,
    5.4700000000e00,
    9.4103682670e-01,
    -8.0324172074e-03,
    8.7132676203e-01,
    6.2800000000e00,
    9.4695360930e-01,
    -8.0324181754e-03,
    8.7132676203e-01,
    6.3000000000e00,
    1.1011016528e00,
    -2.5956190146e02,
    8.7132676203e-01,
    6.3100000000e00,
    1.1733003876e00,
    -3.6621676676e02,
    8.9019806418e-01,
    6.5000000000e00,
    1.5181674391e00,
    -7.1154301970e01,
    1.3825963481e00,
    6.5100000000e00,
    1.4791435783e00,
    -2.3307686509e-02,
    1.3825963481e00,
    7.3400000000e00,
    1.4346585268e00,
    -2.3307687354e-02,
    1.3825963481e00,
    7.3500000000e00,
    1.5203664552e00,
    -7.5574601345e01,
    1.3825963481e00,
    7.3600000000e00,
    1.6021844471e00,
    -2.3921058500e02,
    1.3825963481e00,
    7.3700000000e00,
    1.6791154593e00,
    -3.0353351301e02,
    1.4273658964e00,
    7.4900000000e00,
    2.1082327505e00,
    -2.9445559672e02,
    1.8610221457e00,
    7.5400000000e00,
    1.9845071617e00,
    -4.7004419001e01,
    1.8610221457e00,
    7.5500000000e00,
    1.9398379894e00,
    -2.8980585340e-02,
    1.8610221457e00,
    8.3900000000e00,
    1.8969417662e00,
    -2.8980586883e-02,
    1.8610221457e00,
    8.4000000000e00,
    2.0181684541e00,
    -1.1432090710e02,
    1.8610221457e00,
    8.4100000000e00,
    2.1333957569e00,
    -3.0003507221e02,
    1.8833923660e00,
    8.5300000000e00,
    2.8231709534e00,
    -3.0003507221e02,
    2.5731675625e00,
    8.5700000000e00,
    2.7206213015e00,
    -9.4935768381e01,
    2.5731675625e00,
    8.5800000000e00,
    2.6696343654e00,
    -2.3137016714e-02,
    2.5731675625e00,
    9.4700000000e00,
    2.6617478634e00,
    -2.3137019986e-02,
    2.5731675625e00,
    9.4800000000e00,
    2.7766562088e00,
    -2.0699397604e02,
    2.5731675625e00,
    9.4900000000e00,
    2.8826751018e00,
    -3.0001724009e02,
    2.6326748235e00,
    9.5800000000e00,
    3.3370642603e00,
    -3.0001724009e02,
    3.0870639820e00,
    9.5900000000e00,
    3.3268854295e00,
    -2.7965957841e02,
    3.0870639820e00,
    9.6000000000e00,
    3.3042563614e00,
    -2.3440144223e02,
    3.0870639820e00,
    9.6100000000e00,
    3.2694972049e00,
    -1.6488312933e02,
    3.0870639820e00,
    9.6200000000e00,
    3.2231434202e00,
    -7.2175559846e01,
    3.0870639820e00,
]
Instant = Resultat2[0::4]
Deplace = Resultat2[1::4]
Force = Resultat2[2::4]
Pcumul = Resultat2[3::4]
motclef = {}
motclef["VALEUR"] = []
for ii in range(len(Instant)):
    # Pour Force
    if abs(Force[ii]) > 1.0:
        motclef["VALEUR"].append(
            _F(FONCTION=FORC_2, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Force[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=FORC_2,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Force[ii],
                CRITERE="ABSOLU",
            )
        )
    # Pour Pcumul
    if abs(Pcumul[ii]) > 0.001:
        motclef["VALEUR"].append(
            _F(FONCTION=PCUM_2, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Pcumul[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=PCUM_2,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Pcumul[ii],
                CRITERE="ABSOLU",
            )
        )
    # Pour Deplace
    if abs(Deplace[ii]) > 0.001:
        motclef["VALEUR"].append(
            _F(FONCTION=DEPL12, NOM_PARA="INST", VALE_PARA=Instant[ii], VALE_CALC=Deplace[ii])
        )
    else:
        motclef["VALEUR"].append(
            _F(
                FONCTION=DEPL12,
                NOM_PARA="INST",
                VALE_PARA=Instant[ii],
                VALE_CALC=Deplace[ii],
                CRITERE="ABSOLU",
            )
        )
TEST_FONCTION(**motclef)
"""
# Pour l'impression des courbes
XInstant=DEFI_LIST_REEL(VALE=Instant)
# LIST_PARA=XInstant,
#
UXAN_1=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',GROUP_MA='M1',POINT=1)
DEPL31=RECU_FONCTION(RESULTAT=resu1, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_1=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',GROUP_MA='M1',POINT=1)
#
UXAN_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V2',GROUP_MA='M1',POINT=1)
DEPL32=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='DEPL',      NOM_CMP='DX',GROUP_NO='PT3',)
VITE_2=RECU_FONCTION(RESULTAT=resu2, NOM_CHAM='VARI_ELGA', NOM_CMP='V3',GROUP_MA='M1',POINT=1)
#
fic_courbe = './REPE_OUT/sdnd109a_filtre_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_1, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_1, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
#
fic_courbe = './REPE_OUT/sdnd109a_filtre_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12, LIST_PARA=XInstant,),
        _F(FONCTION=FORC_2, LIST_PARA=XInstant,),
        _F(FONCTION=PCUM_2, LIST_PARA=XInstant,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)

fic_courbe = './REPE_OUT/sdnd109a_%04d.dat' % (int(pas1*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL11,),
        _F(FONCTION=FORC_1,),
        _F(FONCTION=PCUM_1,),
        _F(FONCTION=VITE_1,),
        _F(FONCTION=UXAN_1,),
        _F(FONCTION=DEPL31,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
#
fic_courbe = './REPE_OUT/sdnd109a_%04d.dat' % (int(pas2*1000))
unite = DEFI_FICHIER(FICHIER = fic_courbe, ACTION='ASSOCIER', TYPE='ASCII',ACCES='NEW')
IMPR_FONCTION(UNITE=unite, FORMAT='TABLEAU', SEPARATEUR=',', FORMAT_R='E17.10',
    COURBE=(
        _F(FONCTION=DEPL12,),
        _F(FONCTION=FORC_2,),
        _F(FONCTION=PCUM_2,),
        _F(FONCTION=VITE_2,),
        _F(FONCTION=UXAN_2,),
        _F(FONCTION=DEPL32,),
    ),
)
DEFI_FICHIER(UNITE = unite, ACTION='LIBERER',)
"""
FIN()
