# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2024 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

POURSUITE(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))

n = 2.32

p_r = 1.979e4

mat = DEFI_MATERIAU(
    ELAS=_F(ALPHA=0.0, E=1e8, NU=0.3, RHO=rho),
    MOHR_COULOMB=_F(ANGDIL=phi, PHI=phi, COHESION=c),
    COMP_THM="LIQU_GAZ",
    THM_INIT=_F(PORO=0.2, PRE1=0.0, PRE2=1.0, PRES_VAPE=2300.0, TEMP=300.0),
    THM_LIQU=_F(RHO=1e3, UN_SUR_K=0.0, VISC=VISC, D_VISC_TEMP=ZERO),
    THM_GAZ=_F(MASS_MOL=0.03, VISC=VISC, D_VISC_TEMP=ZERO),
    THM_DIFFU=_F(
        R_GAZ=8.315,
        RHO=1e3,
        BIOT_COEF=1.0,
        PESA_X=0.0,
        PESA_Y=-g,
        PESA_Z=0.0,
        PERM_IN=K,
        VG_N=n,
        VG_PR=p_r,
        VG_SR=0.25,
        VG_SMAX=0.999,
        VG_SATUR=0.999,
    ),
)

CHMAT = AFFE_MATERIAU(MAILLAGE=mesh, AFFE=(_F(MATER=mat, TOUT="OUI")))

# =================================
#  CALCUL D_PLAN_HH
# =================================

meshquad = CREA_MAILLAGE(MAILLAGE=mesh, LINE_QUAD=_F(TOUT="OUI"))

CHMAT_S = AFFE_MATERIAU(MAILLAGE=meshquad, AFFE=_F(MATER=mat, TOUT="OUI"))

mod_S = AFFE_MODELE(
    AFFE=_F(MODELISATION=("D_PLAN_HHS",), PHENOMENE="MECANIQUE", TOUT="OUI"), MAILLAGE=meshquad
)

LTr = DEFI_LIST_REEL(VALE=[0.0, 1.0])
LT = DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST=LTr), ECHEC=_F(EVENEMENT="ERREUR", ACTION="DECOUPE"))

f_pres = DEFI_FONCTION(
    VALE=(9.0, -rho_w * g, 10.0, 0.0), NOM_PARA="Y", PROL_GAUCHE="LINEAIRE", PROL_DROITE="LINEAIRE"
)

BC = AFFE_CHAR_CINE_F(MODELE=mod_S, MECA_IMPO=_F(GROUP_MA=("left", "right"), PRE1=f_pres, PRE2=ONE))

IMPER = AFFE_CHAR_MECA(FLUX_THM_REP=_F(FLUN_HYDR1=0.0, GROUP_MA=("bottom",)), MODELE=mod_S)

CHGEO = CREA_CHAMP(
    MAILLAGE=meshquad, NOM_CHAM="GEOMETRIE", OPERATION="EXTR", TYPE_CHAM="NOEU_GEOM_R"
)

DEPL_F = CREA_CHAMP(
    AFFE=_F(NOM_CMP=("X1", "X2"), TOUT="OUI", VALE_F=(f_pres, ONE)),
    MAILLAGE=meshquad,
    OPERATION="AFFE",
    TYPE_CHAM="NOEU_NEUT_F",
)

DEPL_VAL = CREA_CHAMP(CHAM_F=DEPL_F, CHAM_PARA=(CHGEO,), OPERATION="EVAL", TYPE_CHAM="NOEU_NEUT_R")

DEPL0 = CREA_CHAMP(
    ASSE=_F(CHAM_GD=DEPL_VAL, NOM_CMP=("X1", "X2"), NOM_CMP_RESU=("PRE1", "PRE2"), TOUT="OUI"),
    MAILLAGE=meshquad,
    OPERATION="ASSE",
    TYPE_CHAM="NOEU_DEPL_R",
)

RESEEP = STAT_NON_LINE(
    CHAM_MATER=CHMAT_S,
    COMPORTEMENT=_F(RELATION="KIT_HH", RELATION_KIT=("LIQU_GAZ", "HYDR_VGC")),
    CONVERGENCE=_F(RESI_GLOB_MAXI=1e-10),
    ETAT_INIT=_F(DEPL=DEPL0),
    EXCIT=(_F(CHARGE=IMPER), _F(CHARGE=BC)),
    INCREMENT=_F(LIST_INST=LT),
    MODELE=mod_S,
)

RESEEP = CALC_CHAMP(reuse=RESEEP, RESULTAT=RESEEP, VARI_INTERNE="VARI_NOEU")

REproj = PROJ_CHAMP(METHODE="COLLOCATION", RESULTAT=RESEEP, MODELE_1=mod_S, MODELE_2=MODE1)

# ========================================================================
#       ANALYSE DE STABILITE
# ========================================================================

# projection
TAB_FS_1 = CALC_STAB_PENTE(
    METHODE_STAB="LEM",
    METHODE_LEM="BISHOP",
    CHAM_MATER=CHMAT,
    GROUP_MA="range_pente",
    NB_TRANCHE=15,
    SUCCION="OUI",
    CHAM_PRES=_F(
        RESULTAT=REproj, INST=REproj.LIST_VARI_ACCES()["INST"][-1], ALGO_PRES="PROJECTION"
    ),
    X1_MINI=5.35,
    X1_MAXI=5.35,
    X2_MINI=31.7,
    X2_MAXI=31.7,
    NB_POINT_1=1,
    NB_POINT_2=1,
    Y_MINI=9.0,
    Y_MAXI=9.0,
    RAFF_MAIL=_F(NB_RAFF_MAXI=0),
)

# inverse distance weighted interpolation
TAB_FS_2 = CALC_STAB_PENTE(
    METHODE_STAB="LEM",
    METHODE_LEM="BISHOP",
    CHAM_MATER=CHMAT,
    GROUP_MA="range_pente",
    NB_TRANCHE=15,
    SUCCION="OUI",
    CHAM_PRES=_F(
        RESULTAT=REproj, NUME_ORDRE=REproj.LIST_VARI_ACCES()["NUME_ORDRE"][-1], ALGO_PRES="INVERSE"
    ),
    X1_MINI=5.35,
    X1_MAXI=5.35,
    X2_MINI=31.7,
    X2_MAXI=31.7,
    NB_POINT_1=1,
    NB_POINT_2=1,
    Y_MINI=9.0,
    Y_MAXI=9.0,
    RAFF_MAIL=_F(NB_RAFF_MAXI=0),
)

# VERIFICATION
TEST_TABLE(
    FILTRE=_F(NOM_PARA="NUME_RAFF", VALE_I=0),
    NOM_PARA="FS",
    TABLE=TAB_FS_1,
    VALE_CALC=(1.2467550610377252,),
    VALE_REFE=(1.250),
    REFERENCE="SOURCE_EXTERNE",
    PRECISION=1e-2,
)
TEST_TABLE(
    FILTRE=_F(NOM_PARA="NUME_RAFF", VALE_I=0),
    NOM_PARA="FS",
    TABLE=TAB_FS_2,
    VALE_CALC=(1.2488453294526247,),
    VALE_REFE=(1.250),
    REFERENCE="SOURCE_EXTERNE",
    PRECISION=1e-2,
)

FIN()
