# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(
    CODE="OUI",
    ERREUR=_F(ALARME="ALARME"),
    DEBUG=_F(SDVERI="OUI"),
    IGNORE_ALARM=("CALCULEL7_29", "CALCULEL7_14", "CALCULEL_88"),
)

MA = LIRE_MAILLAGE(FORMAT="MED", UNITE=20)

MODEL = AFFE_MODELE(
    MAILLAGE=MA, AFFE=_F(GROUP_MA="PoutreAB", PHENOMENE="MECANIQUE", MODELISATION="POU_D_E")
)

CARA = AFFE_CARA_ELEM(
    MODELE=MODEL,
    POUTRE=_F(CARA=("HY", "HZ"), GROUP_MA=("PoutreAB",), SECTION="RECTANGLE", VALE=(0.5, 0.3)),
)

# on cree une sd evol_elas avec des champs d'efforts imposes :
# -------------------------------------------------------------
# compression uniforme + effort transversal
CHEFF1 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(-1.0e6, 0.0, 1.0e5, 0.0, 0.0, 0.0),
    ),
)

# section totalement tendue (pivot A "vertical") + effort transversal
CHEFF2 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(1.0e6, 0.0, -1.0e5, 0.0, 0.0, 0.0),
    ),
)

# section totalement tendue (pivot A "vertical") + torsion
CHEFF3 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(1.0e6, 0.0, -1.0e5, 1.0e4, 0.0, 0.0),
    ),
)

# fibre inférieure tendue en Z
CHEFF4 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, 0.0, 1.0e5),
    ),
)

# fibre supérieure tendue en Y
CHEFF5 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, -1.0e5, 0.0),
    ),
)

# section partiellement tendue
CHEFF6 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(1.0e5, 0.0, 0.0, 0.0, 0.0, -1.0e5),
    ),
)

# section partiellement tendue
CHEFF7 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(1.0e5, 0.0, 0.0, 0.0, -1.0e5, 0.0),
    ),
)

# section totalement tendue
CHEFF8 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(2.0e6, 0.0, 0.0, 0.0, 0.0, -1.0e5),
    ),
)

# flexion déviée
CHEFF9 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, -15.0e4, 1.0e5),
    ),
)

# flexion déviée composée
CHEFF10 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(-3.0e6, 0.0, 0.0, 0.0, -15.0e4, 1.0e5),
    ),
)

CHEFF11 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, 0.0, -150e3),
    ),
)

# pivot B
CHEFF12 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, 0.0, -26e4),
    ),
)

# vrai pivot C avec compression totale dune facette sur la section entière
CHEFF13 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(0.0, 0.0, 0.0, 0.0, 0.0, -38e4),
    ),
)

CHEFF14 = CREA_CHAMP(
    MAILLAGE=MA,
    OPERATION="AFFE",
    TYPE_CHAM="CART_SIEF_R",
    AFFE=_F(
        GROUP_MA="PoutreAB",
        NOM_CMP=("N", "VY", "VZ", "MT", "MFY", "MFZ"),
        VALE=(-45.0e5, 1.0e5, 0.0, 0.0, 0.0, 38.0e4),
    ),
)


RESUELSQP = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_ELAS",
    AFFE=(
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF1, INST=1.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF2, INST=2.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF3, INST=3.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF4, INST=4.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF5, INST=5.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF6, INST=6.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF7, INST=7.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF8, INST=8.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF9, INST=9.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF10, INST=10.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF11, INST=11.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF12, INST=12.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF13, INST=13.0, MODELE=MODEL, CARA_ELEM=CARA),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=CHEFF14, INST=14.0, MODELE=MODEL, CARA_ELEM=CARA),
    ),
)

# CAS 1 - calcul du ferraillage :
# --------------------------------

RESUELSQP1 = CALC_FERRAILLAGE(
    RESULTAT=RESUELSQP,
    CARA_ELEM=CARA,
    reuse=RESUELSQP,
    CODIFICATION="EC2",
    TYPE_COMB="ELS_QP",
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="1D",
            C_SUP_Y=0.04,
            C_INF_Y=0.04,
            C_SUP_Z=0.04,
            C_INF_Z=0.04,
            FCK=35.0e6,
            FYK=500.0e6,
            SIGC_ELS_QP=0.45 * 35.0e6,
            ALPHA_E=15.0,
            KT=0.4,
            WMAX_INF_Y=0.00015,
            WMAX_SUP_Y=0.00015,
            WMAX_INF_Z=0.00015,
            WMAX_SUP_Z=0.00015,
            PHI_INF_Y=0.025,
            PHI_SUP_Y=0.025,
            PHI_INF_Z=0.025,
            PHI_SUP_Z=0.025,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
        ),
    ),
)

COMP = ["AYS", "AYI", "AZS", "AZI", "AST", "ATOT", "DNSVOL", "CONSTRUC"]

# -----------------------------------------------------
# Tests pour CAS 1
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00034185595777330144,
        0.00000000000000e00,
        8.888254902105837,
        0.040498535797543776,
    ],  # 1
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        0.0012697728433819476,
        8.23930172419133e-03,
        461.4577835858799,
        1.1025228443080908,
    ],  # 2
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        1.58233231252212e-03,
        8.23930172419133e-03,
        4.69584329783524e02,
        1.13955072275223e00,
    ],  # 3
    [
        1.69989136215101e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.69989136215101e-03,
        8.83943508318527e01,
        1.96431890737451e-01,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.25245208276000e-03,
        0.00000000000000e00,
        2.25245208276000e-03,
        1.17127508303520e02,
        2.60283351785601e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.87941937456627e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.87941937456627e-03,
        9.77298074774458e01,
        2.17177349949880e-01,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.47654181116022e-03,
        0.00000000000000e00,
        2.47654181116022e-03,
        1.28780174180332e02,
        2.86178164845181e-01,
    ],  # 7
    [
        4.77200671149912e-03,
        7.75451090618606e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.25265176176852e-02,
        6.51378916119629e02,
        1.44750870248807e00,
    ],  # 8
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 9
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 10
    [
        0.00000000000000e00,
        2.12017803159338e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.12017803159338e-03,
        1.10249257642856e02,
        2.44998350317457e-01,
    ],  # 11
    [
        0.00000000000000e00,
        6.23920878574590e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.23920878574590e-03,
        3.24438856858787e02,
        7.20975237463971e-01,
    ],  # 12
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 13
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.00019322293265447467,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00034185595777330144,
        0.00000000000000e00,
        8.888254902105837,
        0.040498535797543776,
    ],  # 1
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        0.0012697728433819476,
        8.23930172419133e-03,
        461.4577835858799,
        1.1025228443080908,
    ],  # 2
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        1.58233231252212e-03,
        8.23930172419133e-03,
        4.69584329783524e02,
        1.13955072275223e00,
    ],  # 3
    [
        1.69989136215101e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.69989136215101e-03,
        8.83943508318527e01,
        1.96431890737451e-01,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.25245208276000e-03,
        0.00000000000000e00,
        2.25245208276000e-03,
        1.17127508303520e02,
        2.60283351785601e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.87941937456627e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.87941937456627e-03,
        9.77298074774458e01,
        2.17177349949880e-01,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.47654181116022e-03,
        0.00000000000000e00,
        2.47654181116022e-03,
        1.28780174180332e02,
        2.86178164845181e-01,
    ],  # 7
    [
        4.77200671149912e-03,
        7.75451090618606e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.25265176176852e-02,
        6.51378916119629e02,
        1.44750870248807e00,
    ],  # 8
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 9
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 10
    [
        0.00000000000000e00,
        2.12017803159338e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.12017803159338e-03,
        1.10249257642856e02,
        2.44998350317457e-01,
    ],  # 11
    [
        0.00000000000000e00,
        6.23920878574590e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.23920878574590e-03,
        3.24438856858787e02,
        7.20975237463971e-01,
    ],  # 12
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 13
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.00019322293265447467,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP1,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP1,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 2 - calcul du ferraillage avec FERR_COMP = 'OUI':
# ------------------------------------------------------

RESUELSQP2 = CALC_FERRAILLAGE(
    RESULTAT=RESUELSQP,
    CARA_ELEM=CARA,
    reuse=RESUELSQP,
    CODIFICATION="EC2",
    TYPE_COMB="ELS_QP",
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="1D",
            FERR_COMP="OUI",
            C_SUP_Y=0.04,
            C_INF_Y=0.04,
            C_SUP_Z=0.04,
            C_INF_Z=0.04,
            FCK=35.0e6,
            FYK=500.0e6,
            SIGC_ELS_QP=0.45 * 35.0e6,
            ALPHA_E=15.0,
            KT=0.4,
            WMAX_INF_Y=0.00015,
            WMAX_SUP_Y=0.00015,
            WMAX_INF_Z=0.00015,
            WMAX_SUP_Z=0.00015,
            PHI_INF_Y=0.025,
            PHI_SUP_Y=0.025,
            PHI_INF_Z=0.025,
            PHI_SUP_Z=0.025,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
        ),
    ),
)


# -----------------------------------------------------
# Tests pour CAS 2
# -----------------------------------------------------

D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00034185595777330144,
        0.00000000000000e00,
        8.888254902105837,
        0.040498535797543776,
    ],  # 1
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        0.0012697728433819476,
        8.23930172419133e-03,
        461.4577835858799,
        1.1025228443080908,
    ],  # 2
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        1.58233231252212e-03,
        8.23930172419133e-03,
        4.69584329783524e02,
        1.13955072275223e00,
    ],  # 3
    [
        1.69989136215101e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.69989136215101e-03,
        8.83943508318527e01,
        1.96431890737451e-01,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.25245208276000e-03,
        0.00000000000000e00,
        2.25245208276000e-03,
        1.17127508303520e02,
        2.60283351785601e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.87941937456627e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.87941937456627e-03,
        9.77298074774458e01,
        2.17177349949880e-01,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.47654181116022e-03,
        0.00000000000000e00,
        2.47654181116022e-03,
        1.28780174180332e02,
        2.86178164845181e-01,
    ],  # 7
    [
        4.77200671149912e-03,
        7.75451090618606e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.25265176176852e-02,
        6.51378916119629e02,
        1.44750870248807e00,
    ],  # 8
    [
        0.005334987288317658,
        0.0,
        0.00305116954134314,
        0.009988747096069743,
        0.0,
        0.01837490392573054,
        955.495004137988,
        2.123322231417751,
    ],  # 9
    [
        0.0006048035159989928,
        0.004175599182413706,
        0.00903277390172192,
        0.00000000000000e00,
        0.00000000000000e00,
        0.013813176600134619,
        718.2851832070002,
        1.596189296015556,
    ],  # 10
    [
        0.00000000000000e00,
        2.12017803159338e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.12017803159338e-03,
        1.10249257642856e02,
        2.44998350317457e-01,
    ],  # 11
    [
        4.64187142987713e-04,
        3.37316729961550e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.83735444260321e-03,
        1.99542431015367e02,
        4.43427624478594e-01,
    ],  # 12
    [
        2.02832856609490e-03,
        4.42123845274504e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.44956701883994e-03,
        3.35377484979677e02,
        7.45283299954837e-01,
    ],  # 13
    [
        6.94129503653314e-04,
        8.35348954396573e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00019322293265447467,
        9.04761904761905e-03,
        475.49998672520684,
        1.068393122257779,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00034185595777330144,
        0.00000000000000e00,
        8.888254902105837,
        0.040498535797543776,
    ],  # 1
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        0.0012697728433819476,
        8.23930172419133e-03,
        461.4577835858799,
        1.1025228443080908,
    ],  # 2
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        1.58233231252212e-03,
        8.23930172419133e-03,
        4.69584329783524e02,
        1.13955072275223e00,
    ],  # 3
    [
        1.69989136215101e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.69989136215101e-03,
        8.83943508318527e01,
        1.96431890737451e-01,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.25245208276000e-03,
        0.00000000000000e00,
        2.25245208276000e-03,
        1.17127508303520e02,
        2.60283351785601e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.87941937456627e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.87941937456627e-03,
        9.77298074774458e01,
        2.17177349949880e-01,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.47654181116022e-03,
        0.00000000000000e00,
        2.47654181116022e-03,
        1.28780174180332e02,
        2.86178164845181e-01,
    ],  # 7
    [
        4.77200671149912e-03,
        7.75451090618606e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.25265176176852e-02,
        6.51378916119629e02,
        1.44750870248807e00,
    ],  # 8
    [
        0.005334987288317658,
        0.0,
        0.00305116954134314,
        0.009988747096069743,
        0.0,
        0.01837490392573054,
        955.495004137988,
        2.123322231417751,
    ],  # 9
    [
        0.0006048035159989928,
        0.004175599182413706,
        0.00903277390172192,
        0.00000000000000e00,
        0.00000000000000e00,
        0.013813176600134619,
        718.2851832070002,
        1.596189296015556,
    ],  # 10
    [
        0.00000000000000e00,
        2.12017803159338e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.12017803159338e-03,
        1.10249257642856e02,
        2.44998350317457e-01,
    ],  # 11
    [
        4.64187142987713e-04,
        3.37316729961550e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.83735444260321e-03,
        1.99542431015367e02,
        4.43427624478594e-01,
    ],  # 12
    [
        2.02832856609490e-03,
        4.42123845274504e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.44956701883994e-03,
        3.35377484979677e02,
        7.45283299954837e-01,
    ],  # 13
    [
        6.94129503653314e-04,
        8.35348954396573e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00019322293265447467,
        9.04761904761905e-03,
        475.49998672520684,
        1.068393122257779,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP2,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP2,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 3 - calcul du ferraillage avec FERR_SYME = 'OUI':
# ------------------------------------------------------

RESUELSQP3 = CALC_FERRAILLAGE(
    RESULTAT=RESUELSQP,
    CARA_ELEM=CARA,
    reuse=RESUELSQP,
    CODIFICATION="EC2",
    TYPE_COMB="ELS_QP",
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="1D",
            FERR_COMP="OUI",
            FERR_SYME="OUI",
            SEUIL_SYME=5.0e-4,
            C_SUP_Y=0.04,
            C_INF_Y=0.04,
            C_SUP_Z=0.04,
            C_INF_Z=0.04,
            FCK=35.0e6,
            FYK=500.0e6,
            SIGC_ELS_QP=0.45 * 35.0e6,
            ALPHA_E=15.0,
            KT=0.4,
            WMAX_INF_Y=0.00015,
            WMAX_SUP_Y=0.00015,
            WMAX_INF_Z=0.00015,
            WMAX_SUP_Z=0.00015,
            PHI_INF_Y=0.025,
            PHI_SUP_Y=0.025,
            PHI_INF_Z=0.025,
            PHI_SUP_Z=0.025,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
        ),
    ),
)


# -----------------------------------------------------
# Tests pour CAS 3
# -----------------------------------------------------

D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00034185595777330144,
        0.00000000000000e00,
        8.888254902105837,
        0.040498535797543776,
    ],  # 1
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        0.0012697728433819476,
        8.23930172419133e-03,
        461.4577835858799,
        1.1025228443080908,
    ],  # 2
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        1.58233231252212e-03,
        8.23930172419133e-03,
        4.69584329783524e02,
        1.13955072275223e00,
    ],  # 3
    [
        1.65918393790572e-03,
        1.24368589829905e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.90286983620478e-03,
        1.50949231482649e02,
        3.35442736628108e-01,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        1.75921460236148e-03,
        2.25797756488678e-03,
        0.00000000000000e00,
        4.01719216724826e-03,
        2.08893992696909e02,
        4.64208872659799e-01,
    ],  # 5
    [
        1.48575587224299e-03,
        1.83292061443279e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.31867648667578e-03,
        1.72571177307141e02,
        3.83491505126979e-01,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        1.99825433544100e-03,
        2.47056619282592e-03,
        0.00000000000000e00,
        4.46882052826693e-03,
        2.32378667469880e02,
        5.16397038821956e-01,
    ],  # 7
    [
        6.20367716436658e-03,
        6.39922785759118e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.26029050219578e-02,
        6.55351061141803e02,
        1.45633569142623e00,
    ],  # 8
    [
        0.003319028668690884,
        0.002903530629084214,
        0.006277290310071294,
        0.00655541561283335,
        0.0,
        0.01905526522067974,
        990.8737914753465,
        2.2019417588341033,
    ],  # 9
    [
        0.004267525713904039,
        0.00472608457397307,
        0.009634853647992799,
        0.009206684929964635,
        0.0,
        0.02783514886583454,
        1447.427741023396,
        3.2165060911631023,
    ],  # 10
    [
        1.69169430760079e-03,
        2.10928978367577e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.80098409127656e-03,
        1.97651172746381e02,
        4.39224828325291e-01,
    ],  # 11
    [
        2.93031354898959e-03,
        3.25572798638657e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.18604153537616e-03,
        3.21674159839560e02,
        7.14831466310134e-01,
    ],  # 12
    [
        4.12270402733495e-03,
        4.41494692713414e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        8.53765095446908e-03,
        4.43957849632392e02,
        9.86572999183094e-01,
    ],  # 13
    [
        9.55887988841231e-03,
        1.00198556545631e-02,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00019322293265447467,
        1.95787355429754e-02,
        1023.1180444837354,
        2.2853221394989536,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00034185595777330144,
        0.00000000000000e00,
        8.888254902105837,
        0.040498535797543776,
    ],  # 1
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        0.0012697728433819476,
        8.23930172419133e-03,
        461.4577835858799,
        1.1025228443080908,
    ],  # 2
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        1.58233231252212e-03,
        8.23930172419133e-03,
        4.69584329783524e02,
        1.13955072275223e00,
    ],  # 3
    [
        1.65918393790572e-03,
        1.24368589829905e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.90286983620478e-03,
        1.50949231482649e02,
        3.35442736628108e-01,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        1.75921460236148e-03,
        2.25797756488678e-03,
        0.00000000000000e00,
        4.01719216724826e-03,
        2.08893992696909e02,
        4.64208872659799e-01,
    ],  # 5
    [
        1.48575587224299e-03,
        1.83292061443279e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.31867648667578e-03,
        1.72571177307141e02,
        3.83491505126979e-01,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        1.99825433544100e-03,
        2.47056619282592e-03,
        0.00000000000000e00,
        4.46882052826693e-03,
        2.32378667469880e02,
        5.16397038821956e-01,
    ],  # 7
    [
        6.20367716436658e-03,
        6.39922785759118e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.26029050219578e-02,
        6.55351061141803e02,
        1.45633569142623e00,
    ],  # 8
    [
        0.003319028668690884,
        0.002903530629084214,
        0.006277290310071294,
        0.00655541561283335,
        0.0,
        0.01905526522067974,
        990.8737914753465,
        2.2019417588341033,
    ],  # 9
    [
        0.004267525713904039,
        0.00472608457397307,
        0.009634853647992799,
        0.009206684929964635,
        0.0,
        0.02783514886583454,
        1447.427741023396,
        3.2165060911631023,
    ],  # 10
    [
        1.69169430760079e-03,
        2.10928978367577e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        3.80098409127656e-03,
        1.97651172746381e02,
        4.39224828325291e-01,
    ],  # 11
    [
        2.93031354898959e-03,
        3.25572798638657e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.18604153537616e-03,
        3.21674159839560e02,
        7.14831466310134e-01,
    ],  # 12
    [
        4.12270402733495e-03,
        4.41494692713414e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        8.53765095446908e-03,
        4.43957849632392e02,
        9.86572999183094e-01,
    ],  # 13
    [
        9.55887988841231e-03,
        1.00198556545631e-02,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00019322293265447467,
        1.95787355429754e-02,
        1023.1180444837354,
        2.2853221394989536,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP3,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP3,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

# CAS 4 - calcul du ferraillage avec CODIFICATION = 'BAEL91':
# ------------------------------------------------------------

RESUELSQP4 = CALC_FERRAILLAGE(
    RESULTAT=RESUELSQP,
    CARA_ELEM=CARA,
    reuse=RESUELSQP,
    CODIFICATION="BAEL91",
    TYPE_COMB="ELS_QP",
    UNITE_CONTRAINTE="Pa",
    INST=(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0),
    AFFE=(
        _F(
            TOUT="OUI",
            TYPE_STRUCTURE="1D",
            C_SUP_Y=0.04,
            C_INF_Y=0.04,
            C_SUP_Z=0.04,
            C_INF_Z=0.04,
            FCJ=35.0e6,
            FE=500.0e6,
            SIGC_ELS_QP=0.45 * 35.0e6,
            N=15.0,
            KT=0.4,
            WMAX_INF_Y=0.00015,
            WMAX_SUP_Y=0.00015,
            WMAX_INF_Z=0.00015,
            WMAX_SUP_Z=0.00015,
            PHI_INF_Y=0.025,
            PHI_SUP_Y=0.025,
            PHI_INF_Z=0.025,
            PHI_SUP_Z=0.025,
            RHO_ACIER=7800.0,
            EYS=210.0e9,
        ),
    ),
)


# -----------------------------------------------------
# Tests pour CAS 4
# -----------------------------------------------------
D_ref = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.0015384615384615385,
        0.00000000000000e00,
        40.0,
        0.18225641025641023,
    ],  # 1
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        0.005714385365258184,
        8.23930172419133e-03,
        577.0177091546622,
        1.629061274399696,
    ],  # 2
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        0.00641769433328996,
        8.23930172419133e-03,
        595.3037423234882,
        1.712379943479193,
    ],  # 3
    [
        1.69989136215101e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.69989136215101e-03,
        8.83943508318527e01,
        1.96431890737451e-01,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.25245208276000e-03,
        0.00000000000000e00,
        2.25245208276000e-03,
        1.17127508303520e02,
        2.60283351785601e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.87941937456627e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.87941937456627e-03,
        9.77298074774458e01,
        2.17177349949880e-01,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.47654181116022e-03,
        0.00000000000000e00,
        2.47654181116022e-03,
        1.28780174180332e02,
        2.86178164845181e-01,
    ],  # 7
    [
        4.77200671149912e-03,
        7.75451090618606e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.25265176176852e-02,
        6.51378916119629e02,
        1.44750870248807e00,
    ],  # 8
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 9
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 10
    [
        0.00000000000000e00,
        2.12017803159338e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.12017803159338e-03,
        1.10249257642856e02,
        2.44998350317457e-01,
    ],  # 11
    [
        0.00000000000000e00,
        6.23920878574590e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.23920878574590e-03,
        3.24438856858787e02,
        7.20975237463971e-01,
    ],  # 12
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 13
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0014492753623188404,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 14
]

D_calc = [
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.0015384615384615385,
        0.00000000000000e00,
        40.0,
        0.18225641025641023,
    ],  # 1
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        0.005714385365258184,
        8.23930172419133e-03,
        577.0177091546622,
        1.629061274399696,
    ],  # 2
    [
        2.26247561838676e-03,
        2.26247561838676e-03,
        1.85717524370891e-03,
        1.85717524370891e-03,
        0.00641769433328996,
        8.23930172419133e-03,
        595.3037423234882,
        1.712379943479193,
    ],  # 3
    [
        1.69989136215101e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.69989136215101e-03,
        8.83943508318527e01,
        1.96431890737451e-01,
    ],  # 4
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.25245208276000e-03,
        0.00000000000000e00,
        2.25245208276000e-03,
        1.17127508303520e02,
        2.60283351785601e-01,
    ],  # 5
    [
        0.00000000000000e00,
        1.87941937456627e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.87941937456627e-03,
        9.77298074774458e01,
        2.17177349949880e-01,
    ],  # 6
    [
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.47654181116022e-03,
        0.00000000000000e00,
        2.47654181116022e-03,
        1.28780174180332e02,
        2.86178164845181e-01,
    ],  # 7
    [
        4.77200671149912e-03,
        7.75451090618606e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        1.25265176176852e-02,
        6.51378916119629e02,
        1.44750870248807e00,
    ],  # 8
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 9
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 10
    [
        0.00000000000000e00,
        2.12017803159338e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        2.12017803159338e-03,
        1.10249257642856e02,
        2.44998350317457e-01,
    ],  # 11
    [
        0.00000000000000e00,
        6.23920878574590e-03,
        0.00000000000000e00,
        0.00000000000000e00,
        0.00000000000000e00,
        6.23920878574590e-03,
        3.24438856858787e02,
        7.20975237463971e-01,
    ],  # 12
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 13
    [
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
        0.0014492753623188404,
        -1.00000000000000e00,
        -1.00000000000000e00,
        -1.00000000000000e00,
    ],  # 14
]

for j in range(len(D_ref)):
    for i, ncmp in enumerate(COMP):
        if D_ref[j][i] == 0:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP4,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    VALE_CALC=D_calc[j][i],
                    REFERENCE="ANALYTIQUE",
                    ORDRE_GRANDEUR=1.0e-3,
                    CRITERE="ABSOLU",
                )
            )
        else:
            TEST_RESU(
                RESU=_F(
                    RESULTAT=RESUELSQP4,
                    INST=j + 1.0,
                    NOM_CHAM="FERR_ELEM",
                    NOM_CMP=ncmp,
                    GROUP_MA="M1",
                    LEGENDE="ELS_QP",
                    VALE_REFE=D_ref[j][i],
                    REFERENCE="ANALYTIQUE",
                    PRECISION=1e-4,
                    VALE_CALC=D_calc[j][i],
                )
            )

FIN()
