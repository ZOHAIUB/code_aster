# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))

rho = [1.9e3, 1.9e3, 1.7e3]

c = [15e3, 25e3, 4e3]

phi = [45, 15, 30]

rho_w = 1e3

g = 9.81

mesh = LIRE_MAILLAGE(UNITE=20)

MODE1 = AFFE_MODELE(
    MAILLAGE=mesh, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="D_PLAN")
)
mat = [None for i in range(3)]
nom_zone = ["lower", "mid", "upper"]
kw_affe_mate = []
for i in range(3):

    mat[i] = DEFI_MATERIAU(
        ELAS=_F(ALPHA=0.0, E=1e8, NU=0.3, RHO=rho[i]),
        MOHR_COULOMB=_F(ANGDIL=phi[i], PHI=phi[i], COHESION=c[i]),
    )
    kw_affe_mate.append(_F(MATER=mat[i], GROUP_MA=nom_zone[i]))

CHMAT = AFFE_MATERIAU(MAILLAGE=mesh, AFFE=kw_affe_mate)

# ========================================================================
#       ANALYSE DE STABILITE
# ========================================================================

TABINIT = LIRE_TABLE(UNITE=33)

TAB_KC = CALC_STAB_PENTE(
    CHAM_MATER=CHMAT,
    METHODE_STAB="LEM",
    METHODE_LEM="SPENCER",
    GROUP_MA="range_pente",
    X1_MINI=35.0,
    X1_MAXI=35.0,
    X2_MINI=120.0,
    X2_MAXI=120.0,
    ACCE=_F(CALC_KC="OUI"),
    ALGO_EFWA=_F(A=0.0, A_INIT=0.0, A_FINAL=0.0, N=1, MG=0, M=1, ITER_MAXI=1, ETAT_INIT=TABINIT),
    RAFF_MAIL=_F(NB_RAFF_MAXI=3),
    INFO_TABLE=2,
    INIT_ALEA=7000,
)

# TEST DE NON_REGRESSION
TEST_TABLE(
    FILTRE=_F(NOM_PARA="NUME_RAFF", VALE_I=0),
    NOM_PARA="KC",
    TABLE=TAB_KC,
    VALE_CALC=(0.17268896670181597,),
)

# VERIFICATION
TEST_TABLE(
    FILTRE=_F(NOM_PARA="NUME_RAFF", VALE_I=3),
    NOM_PARA="KC",
    TABLE=TAB_KC,
    VALE_CALC=(0.16094677307399347,),
    VALE_REFE=(0.161),
    REFERENCE="SOURCE_EXTERNE",
    PRECISION=1e-2,
)


FIN()
