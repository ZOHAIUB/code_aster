# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

m = 1.0
beta = 1.0

DEBUT(
    CODE="OUI",
    ERREUR=_F(ALARME="ALARME"),
    IGNORE_ALARM="FONCT0_62",  # abscisses re-ordonnees dues a table enrichie (reuse)
    DEBUG=_F(SDVERI="NON"),  # ok sdveri mais temps x5
)

MA0 = LIRE_MAILLAGE(FORMAT="ASTER")

MA = CREA_MAILLAGE(
    MAILLAGE=MA0,
    CREA_POI1=(
        _F(NOM_GROUP_MA="MASSES", GROUP_NO="MASSES"),
        _F(NOM_GROUP_MA="N2", GROUP_NO="N2"),
        _F(NOM_GROUP_MA="N3", GROUP_NO="N3"),
    ),
)

MO = AFFE_MODELE(
    MAILLAGE=MA,
    AFFE=(
        _F(GROUP_MA="LIAI", PHENOMENE="MECANIQUE", MODELISATION="DIS_T"),
        _F(GROUP_MA="MASSES", PHENOMENE="MECANIQUE", MODELISATION="DIS_T"),
    ),
)

CARA_ELE = AFFE_CARA_ELEM(
    MODELE=MO,
    DISCRET=(
        _F(GROUP_MA=("N2", "N3"), CARA="M_T_D_N", VALE=m),
        _F(GROUP_MA=("N2", "N3"), CARA="K_T_D_N", VALE=(0.0, 0.0, 0.0)),
        _F(GROUP_MA="RAID1", CARA="K_T_D_L", VALE=(0.0, 0.0, 1.0), REPERE="GLOBAL"),
        _F(GROUP_MA="RAID2", CARA="K_T_D_L", VALE=(0.0, 0.0, beta), REPERE="GLOBAL"),
    ),
)

CDL = AFFE_CHAR_CINE(
    MODELE=MO,
    MECA_IMPO=(_F(GROUP_NO="N1", DX=0.0, DY=0.0, DZ=0.0), _F(GROUP_NO="TOUT", DY=0.0, DX=0.0)),
)

Ke = CALC_MATR_ELEM(OPTION="RIGI_MECA", MODELE=MO, CARA_ELEM=CARA_ELE)

Me = CALC_MATR_ELEM(OPTION="MASS_MECA", MODELE=MO, CARA_ELEM=CARA_ELE)

NUM = NUME_DDL(MATR_RIGI=Ke)

K = ASSE_MATRICE(MATR_ELEM=Ke, NUME_DDL=NUM, CHAR_CINE=CDL)

M = ASSE_MATRICE(MATR_ELEM=Me, NUME_DDL=NUM, CHAR_CINE=CDL)

hu = 33
hf = 151
nbranch = 12
ndiscr = 10

MODES = CALC_MODES(
    MATR_RIGI=K,
    CALC_FREQ=_F(FREQ=(0.01, 10.0)),
    OPTION="BANDE",
    SOLVEUR=_F(METHODE="MUMPS"),
    MATR_MASS=M,
    SOLVEUR_MODAL=_F(METHODE="SORENSEN"),
)

MNL = MODE_NON_LINE(
    MATR_RIGI=K,
    MATR_MASS=M,
    RESOLUTION=_F(
        METHODE="EHMAN",
        NB_HARM_LINE=hu,
        NB_HARM_NONL=hf,
        NB_PAS_MAN=ndiscr,
        NB_BRANCHE=nbranch,
        NB_ORDRE_MAN=20,
        PREC_MAN=1.0e-14,
        PREC_NEWTON=1.0e-09,
        ITER_NEWTON_MAXI=15,
    ),
    ETAT_INIT=_F(MODE_LINE=MODES, NUME_ORDRE=2, DIR_EVOLUTION=1),
    CHOC=(
        _F(
            GROUP_NO="N2",
            OBSTACLE="BI_PLAN",
            NOM_CMP="DZ",
            JEU=1.0,
            RIGI_NOR=30.0,
            PARA_REGUL=0.005,
        ),
    ),
    INFO=1,
)

# IMPR_TABLE(TABLE=MNL)

MNL = MODE_NON_LINE(
    reuse=MNL,
    MATR_RIGI=K,
    MATR_MASS=M,
    RESOLUTION=_F(
        METHODE="EHMAN",
        NB_HARM_LINE=hu,
        NB_HARM_NONL=hf,
        NB_PAS_MAN=ndiscr,
        NB_BRANCHE=1,
        NB_ORDRE_MAN=20,
        PREC_MAN=1.0e-14,  # conseil PREC_MAN << NEWTON
        PREC_NEWTON=1.0e-09,
        ITER_NEWTON_MAXI=15,
    ),
    ETAT_INIT=_F(MODE_NON_LINE=MNL, NUME_ORDRE=12, DIR_EVOLUTION=1),
    INFO=1,
)

# IMPR_TABLE(TABLE=MNL)

TTTS = CALC_STABILITE(MODE_NON_LINE=MNL, FILTRE=_F(NUME_ORDRE=(9, 10, 11)))  # PRECISION = 1.e-3,

# IMPR_TABLE(TABLE=TTTS)

MODE_20 = REST_MODE_NONL(MODE_NON_LINE=TTTS, TYPE_RESU="MODE_MECA", NUME_ORDRE=10)

ENRGC = RECU_FONCTION(TABLE=MNL, PARA_X="FREQUENCE", PARA_Y="ENERGIE", INTERPOL=("LOG",))
FREQC = RECU_FONCTION(TABLE=MNL, PARA_Y="FREQUENCE", PARA_X="ENERGIE", INTERPOL=("LIN",))

# valeurs calculees sur machine locale
fs = 0.25790528513017497
es = 1.19768


TEST_FONCTION(
    VALEUR=_F(
        VALE_PARA=fs,
        VALE_CALC=1.197654438808,
        TOLE_MACHINE=2.0e-04,  # valeur tres sensible en fonction de la machine
        REFERENCE="AUTRE_ASTER",
        VALE_REFE=es,
        FONCTION=ENRGC,
    )
)

TEST_FONCTION(
    VALEUR=_F(
        VALE_PARA=es,
        VALE_CALC=0.25790530633207,
        VALE_REFE=fs,
        REFERENCE="AUTRE_ASTER",
        FONCTION=FREQC,
    )
)
FIN()
