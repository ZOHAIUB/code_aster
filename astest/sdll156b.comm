# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

# maillage, modele, caraelem

maillage = LIRE_MAILLAGE()

modele = AFFE_MODELE(
    MAILLAGE=maillage,
    AFFE=(
        _F(MODELISATION="POU_D_T", PHENOMENE="MECANIQUE", GROUP_MA="RUN"),
        _F(MODELISATION="POU_D_T", PHENOMENE="MECANIQUE", GROUP_MA="BRANCH"),
    ),
)

acier = DEFI_MATERIAU(
    ELAS=_F(E=2.0e11, RHO=7800, ALPHA=1.2e-5, NU=0.3),
    POST_ROCHE=_F(RAMB_OSGO_FACT=0.01, RAMB_OSGO_EXPO=2),
)


t_ini = CREA_CHAMP(
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    MODELE=modele,
    AFFE=_F(TOUT="OUI", NOM_CMP="TEMP", VALE=20),
)

t_final = CREA_CHAMP(
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    MODELE=modele,
    AFFE=_F(TOUT="OUI", NOM_CMP="TEMP", VALE=120.0),
)

resu_temp = CREA_RESU(
    TYPE_RESU="EVOL_THER",
    OPERATION="AFFE",
    AFFE=(
        _F(NOM_CHAM="TEMP", CHAM_GD=t_ini, INST=0.0),
        _F(NOM_CHAM="TEMP", CHAM_GD=t_final, INST=1.0),
    ),
)


ch_mater = AFFE_MATERIAU(
    MAILLAGE=maillage,
    AFFE_VARC=_F(TOUT="OUI", NOM_VARC="TEMP", EVOL=resu_temp, VALE_REF=20.0),
    AFFE=_F(TOUT="OUI", MATER=acier),
)

cara_elem = AFFE_CARA_ELEM(
    MODELE=modele,
    INFO=2,
    POUTRE=_F(GROUP_MA="TUYAU", SECTION="CERCLE", CARA=("R", "EP"), VALE=(0.01, 0.005)),
)


poids_propre = LIRE_RESU(
    TYPE_RESU="EVOL_ELAS",
    FORMAT="MED",
    UNITE=81,
    MODELE=modele,
    TOUT_ORDRE="OUI",
    FORMAT_MED=(
        # _F(NOM_RESU='poids_propre', NOM_CHAM=('DEPL','EFGE_ELNO','SIEF_ELGA',),),)
        _F(NOM_RESU="poids_propre", NOM_CHAM=("EFGE_ELNO")),
    ),
)

deplacement_impose = LIRE_RESU(
    TYPE_RESU="EVOL_ELAS",
    FORMAT="MED",
    UNITE=81,
    MODELE=modele,
    TOUT_ORDRE="OUI",
    FORMAT_MED=(
        # _F(NOM_RESU='deplacement_impose', NOM_CHAM=('DEPL','EFGE_ELNO','SIEF_ELGA',),),)
        _F(NOM_RESU="deplacement_impose", NOM_CHAM=("EFGE_ELNO",)),
    ),
)


dilatation_thermique = LIRE_RESU(
    TYPE_RESU="EVOL_ELAS",
    FORMAT="MED",
    UNITE=81,
    MODELE=modele,
    TOUT_ORDRE="OUI",
    FORMAT_MED=(
        # _F(NOM_RESU='dilatation_thermique', NOM_CHAM=('DEPL','EFGE_ELNO','SIEF_ELGA',),),)
        _F(NOM_RESU="dilatation_thermique", NOM_CHAM=("EFGE_ELNO",)),
    ),
)

resu_dyna = LIRE_RESU(
    TYPE_RESU="DYNA_TRANS",
    FORMAT="MED",
    UNITE=81,
    MODELE=modele,
    TOUT_ORDRE="OUI",
    FORMAT_MED=(_F(NOM_RESU="resu_dyna", NOM_CHAM=("EFGE_ELNO",)),),
)

resu_corr = LIRE_RESU(
    TYPE_RESU="DYNA_TRANS",
    FORMAT="MED",
    UNITE=81,
    MODELE=modele,
    TOUT_ORDRE="OUI",
    FORMAT_MED=(_F(NOM_RESU="resu_corr", NOM_CHAM=("EFGE_ELNO",)),),
)
# appel Ã  POST_ROCHE

resuPostRoche = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA_TRAN=(
        _F(
            TYPE_CHAR="SISM_INER_TRAN",
            RESULTAT=resu_dyna,
            RESU_CORR=resu_corr,
            INST=(1, 2),
            # NUME_ORDRE=(1,2),
            # TOUT_ORDRE='OUI',
        ),
        _F(TYPE_CHAR="POIDS", RESULTAT=poids_propre, NUME_ORDRE=1),
        _F(TYPE_CHAR="DILAT_THERM", RESULTAT=dilatation_thermique, NUME_ORDRE=1),
        _F(TYPE_CHAR="DEPLACEMENT", RESULTAT=deplacement_impose, NUME_ORDRE=1),
    ),
    PRESSION=(_F(GROUP_MA="TUYAU", VALE=1e6),),
)

# Tests cas de calcul
# 4- seisme inertiel (S)
# 5- seisme inertiel + pression (SP)
# 6- seisme inertiel + pression + poids propre (SPG)
# 7- seisme inertiel + deplacement (SD)

# 4- seisme inertiel (S)
resuPostRoche_S = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA_TRAN=(
        _F(
            TYPE_CHAR="SISM_INER_TRAN",
            RESULTAT=resu_dyna,
            RESU_CORR=resu_corr,
            INST=(1, 2),
            # NUME_ORDRE=(1,2),
            # TOUT_ORDRE='OUI',
        ),
    ),
)

# 5- seisme inertiel + pression (SP)
resuPostRoche_SP = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA_TRAN=(
        _F(
            TYPE_CHAR="SISM_INER_TRAN",
            RESULTAT=resu_dyna,
            RESU_CORR=resu_corr,
            INST=(1, 2),
            # NUME_ORDRE=(1,2),
            # TOUT_ORDRE='OUI',
        ),
    ),
    PRESSION=(_F(GROUP_MA="TUYAU", VALE=1e6),),
)


# 6- seisme inertiel + pression + poids propre (SPG)
resuPostRoche_SPG = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA_TRAN=(
        _F(
            TYPE_CHAR="SISM_INER_TRAN",
            RESULTAT=resu_dyna,
            RESU_CORR=resu_corr,
            INST=(1, 2),
            # NUME_ORDRE=(1,2),
            # TOUT_ORDRE='OUI',
        ),
        _F(TYPE_CHAR="POIDS", RESULTAT=poids_propre, NUME_ORDRE=1),
    ),
    PRESSION=(_F(GROUP_MA="TUYAU", VALE=1e6),),
)

# 7- seisme inertiel + deplacement (SD)
resuPostRoche_SD = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA_TRAN=(
        _F(
            TYPE_CHAR="SISM_INER_TRAN",
            RESULTAT=resu_dyna,
            RESU_CORR=resu_corr,
            INST=(1, 2),
            # NUME_ORDRE=(1,2),
            # TOUT_ORDRE='OUI',
        ),
        _F(TYPE_CHAR="DEPLACEMENT", RESULTAT=deplacement_impose, NUME_ORDRE=1),
    ),
)

FIN()
