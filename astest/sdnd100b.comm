# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# CAS_TEST__:SDND100B
#   FICHIER DE COMMANDE ASTER DU CAS-TEST DE FROTTEMENT A 1 DDL
#   LIAISON CHOC A DEUX NOEUDS

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

#

M = 1.0

K = 1.0e04

G = 10.0

U0 = 0.85e-03

COULOMB = 0.1

ANG = cos(pi / 4.0)

#

POUTRE = LIRE_MAILLAGE(FORMAT="ASTER")

POUTRE = DEFI_GROUP(reuse=POUTRE, MAILLAGE=POUTRE, CREA_GROUP_MA=_F(NOM="TOUT", TOUT="OUI"))

#

MODELE = AFFE_MODELE(
    MAILLAGE=POUTRE, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="DIS_T")
)

#
CHAMPCAR = AFFE_CARA_ELEM(
    MODELE=MODELE,
    DISCRET=(
        _F(GROUP_MA="TOUT", CARA="K_T_D_N", VALE=(K, K, K)),
        _F(GROUP_MA="TOUT", CARA="M_T_D_N", VALE=M),
    ),
)

#
mANG = -ANG
CHARGE = AFFE_CHAR_MECA(
    MODELE=MODELE,
    DDL_IMPO=(_F(TOUT="OUI", DZ=0.0), _F(GROUP_NO="NO2", DX=0.0, DY=0.0)),
    LIAISON_DDL=_F(GROUP_NO=("NO1", "NO1"), DDL=("DX", "DY"), COEF_MULT=(ANG, mANG), COEF_IMPO=0.0),
)

#
FORCE = AFFE_CHAR_MECA(MODELE=MODELE, FORCE_NODALE=_F(GROUP_NO="NO1", FX=1.0))

#
RIGIELEM = CALC_MATR_ELEM(MODELE=MODELE, CHARGE=CHARGE, CARA_ELEM=CHAMPCAR, OPTION="RIGI_MECA")

#
MASSELEM = CALC_MATR_ELEM(MODELE=MODELE, CHARGE=CHARGE, CARA_ELEM=CHAMPCAR, OPTION="MASS_MECA")

#
VECTELEM = CALC_VECT_ELEM(CHARGE=CHARGE, OPTION="CHAR_MECA")

VECTEL1 = CALC_VECT_ELEM(CHARGE=FORCE, OPTION="CHAR_MECA")

#
#
NUMEROTA = NUME_DDL(MATR_RIGI=RIGIELEM)

#
MATRRIGI = ASSE_MATRICE(MATR_ELEM=RIGIELEM, NUME_DDL=NUMEROTA)

#
MATRMASS = ASSE_MATRICE(MATR_ELEM=MASSELEM, NUME_DDL=NUMEROTA)

#
VECTASS = ASSE_VECTEUR(VECT_ELEM=VECTEL1, NUME_DDL=NUMEROTA)

#
MODES = CALC_MODES(
    MATR_RIGI=MATRRIGI,
    OPTION="PROCHE",
    SOLVEUR=_F(METHODE="MULT_FRONT"),
    CALC_FREQ=_F(NMAX_FREQ=1, FREQ=(15.0,)),
    MATR_MASS=MATRMASS,
)


#

U1 = U0 * ANG

DEPLPHYS = CREA_CHAMP(
    OPERATION="AFFE",
    PROL_ZERO="OUI",
    TYPE_CHAM="NOEU_DEPL_R",
    MAILLAGE=POUTRE,
    CHAM_NO=VECTASS,
    AFFE=_F(TOUT="OUI", NOM_CMP=("DX", "DY"), VALE=(U1, U1)),
)

#
PROJ_BASE(
    BASE=MODES,
    STOCKAGE="DIAG",
    MATR_ASSE_GENE=(
        _F(MATRICE=CO("MASSEGEN"), MATR_ASSE=MATRMASS),
        _F(MATRICE=CO("RIGIDGEN"), MATR_ASSE=MATRRIGI),
    ),
    VECT_ASSE_GENE=_F(VECTEUR=CO("DEPINI"), TYPE_VECT="DEPL", VECT_ASSE=DEPLPHYS),
)

#
#
PLANZ = DEFI_OBSTACLE(TYPE="BI_PLAN_Z")

PLANY = DEFI_OBSTACLE(TYPE="BI_PLAN_Y")

#

W0 = (K / M) ** 0.5

C = COULOMB * M * G / K

T1 = pi / W0

R1 = ((2.0 * C) - U0) * ANG

T2 = 2.0 * pi / W0

R2 = (U0 - (4.0 * C)) * ANG

T3 = 3.0 * pi / W0

R3 = ((6.0 * C) - U0) * ANG

T4 = 4.0 * pi / W0

R4 = (U0 - (8.0 * C)) * ANG
#
DYNAMODA = DYNA_VIBRA(
    TYPE_CALCUL="TRAN",
    BASE_CALCUL="GENE",
    SCHEMA_TEMPS=_F(SCHEMA="DEVOGE", TOLERANCE=1.0e-8, PAS_MAXI=0.0005),
    MATR_MASS=MASSEGEN,
    MATR_RIGI=RIGIDGEN,
    AMOR_MODAL=_F(AMOR_REDUIT=0.0),
    ETAT_INIT=_F(DEPL=DEPINI),
    INCREMENT=_F(INST_INIT=0.0, INST_FIN=0.3, PAS=0.0001),
    COMPORTEMENT=_F(
        RELATION="DIS_CHOC",
        GROUP_NO_1="NO1",
        GROUP_NO_2="NO2",
        INTITULE="LIAISON",
        OBSTACLE=PLANZ,
        NORM_OBST=(0.0, 1.0, 0.0),
        DIST_1=0.250,
        DIST_2=0.250,
        RIGI_NOR=20.0,
        RIGI_TAN=400000.0,
        FROTTEMENT="COULOMB",
        COULOMB=COULOMB,
    ),
    ARCHIVAGE=_F(INST=(T1, T2, T3, T4)),
    VERI_CHOC=_F(STOP_CRITERE="NON"),
)

#

LISTEIMP = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=0.299, PAS=5.0e-4))


DYNATRA1 = REST_GENE_PHYS(
    RESU_GENE=DYNAMODA, NOM_CHAM="DEPL", INTERPOL="LIN", INST=(T1, T2, T3, T4)
)

TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            RESULTAT=DYNATRA1,
            NOM_CHAM="DEPL",
            GROUP_NO="NO1",
            NOM_CMP="DY",
            VALE_REFE=-4.596e-4,
            VALE_CALC=-0.000459619406756,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            NUME_ORDRE=2,
            RESULTAT=DYNATRA1,
            NOM_CHAM="DEPL",
            GROUP_NO="NO1",
            NOM_CMP="DY",
            VALE_REFE=3.182e-4,
            VALE_CALC=0.000318205928467,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            NUME_ORDRE=3,
            RESULTAT=DYNATRA1,
            NOM_CHAM="DEPL",
            GROUP_NO="NO1",
            NOM_CMP="DY",
            VALE_REFE=-1.768e-4,
            VALE_CALC=-0.00017679343909,
            REFERENCE="ANALYTIQUE",
            PRECISION=1.0e-3,
        ),
        _F(
            NUME_ORDRE=4,
            RESULTAT=DYNATRA1,
            NOM_CHAM="DEPL",
            GROUP_NO="NO1",
            NOM_CMP="DY",
            VALE_REFE=3.536e-05,
            VALE_CALC=3.54014299343e-05,
            REFERENCE="ANALYTIQUE",
            PRECISION=5.0e-3,
        ),
    )
)
#
FIN()
#
