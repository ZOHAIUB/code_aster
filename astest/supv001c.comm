# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# person_in_charge: mathieu.courtois at edf.fr

from code_aster.Cata.DataStructure import CO as typCO
from code_aster.Cata.DataStructure import table_sdaster
from code_aster.Cata.Syntax import MACRO, SIMP
from code_aster.Commands import *
from code_aster.Supervis import UserMacro


DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), IMPR_MACRO="OUI")


def ma_macro_ops(self, TABLE=None, **kwargs):
    """Corps de la macro de test."""
    from code_aster.Commands import CREA_TABLE

    # on crée une table que l'on retourne soit sous le mot-clé TABLE,
    # soit en concept principal.
    tabout = CREA_TABLE(LISTE=_F(PARA="NUME", LISTE_I=list(range(5))))
    if TABLE is None:
        return tabout
    self.register_result(tabout, TABLE or self.sd)
    return None


def ma_macro_prod(self, TABLE=None, **kwargs):
    """Déclaration des concepts de sortie"""
    if kwargs.get("__all__"):
        return ([None, table_sdaster], [None, table_sdaster])

    if TABLE:
        self.type_sdprod(TABLE, table_sdaster)
        return None
    return table_sdaster


MA_MACRO_cata = MACRO(
    nom="MA_MACRO", op=ma_macro_ops, sd_prod=ma_macro_prod, TABLE=SIMP(statut="f", typ=typCO)
)

MA_MACRO = UserMacro("MA_MACRO", MA_MACRO_cata, ma_macro_ops)


MA_MACRO(TABLE=CO("tabd"))
tabg = MA_MACRO()

IMPR_TABLE(TABLE=tabd, UNITE=6)

DETRUIRE(NOM=tabd)

IMPR_TABLE(TABLE=tabg, UNITE=6)

DETRUIRE(NOM=tabg)

FIN()
