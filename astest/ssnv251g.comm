# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------


# CAS_TEST__: TRACTION BIAXIALE
# ----------------------------------------------------------------------
# GEOMETRIE           : ELEMENT VOLUME
# MODELISATION        : D_PLAN_HHO
# MAILLAGE            : MED (ISSU DE SALOME)
# CL ET CHARGEMENT    : TRACTION BIAXIALE
# LOI D'ENDOMMAGEMENT : GTN LOCAL
# ----------------------------------------------------------------------
# GROUPES DE NOEUDS: AXE, SPECIMEN, LATERAL, FIXE, SYME, TOP, DEPL, FIXE2
# GROUPES DE MAILLES:  TOP, SYME, LATERAL, AXE, SPECIMEN
# ----------------------------------------------------------------------
#
DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))

import math
import numpy as np

# -------------------------------------------------------------------------
# PARAMETRES
# -------------------------------------------------------------------------
# NOMBRE DU PAS DE CALCUL
nb_pas = 1000

# NOMBRE DU PAS D'ARCHIVAGE
nb_arch = 100

# INSTANT DE FIN <= DERNIER INSTANT
inst_fin = 1

# DERNIER INSTANT
inst_total = 1

# DEPLACEMENT EN HAUT
depl = 0.008
deplx = depl
deply = depl

# -------------------------------------------------------------------------
# OBJET ASTER
# -------------------------------------------------------------------------

# LECTURE DU MAILLAGE
MAIL0 = LIRE_MAILLAGE(FORMAT="MED", UNITE=20)

MAIL = CREA_MAILLAGE(MAILLAGE=MAIL0, MODI_HHO=_F(TOUT="OUI"))


# AFFECTATION DU MODELE
MODE = AFFE_MODELE(
    MAILLAGE=MAIL,
    AFFE=_F(TOUT="OUI", MODELISATION="D_PLAN_HHO", FORMULATION="LINEAIRE", PHENOMENE="MECANIQUE"),
)

# MODELISATION DU MATERIAU
# LES PARAMETRES UTILISES CI-DESSOUS VIENNENT DE LA THESE DE YI ZHANG(2016)

# On en profite pour tester le passage par ECRO_NL_FO, meme si les fonctions sont constantes
F_R0 = DEFI_CONSTANTE(VALE=488.361123569)
F_RH = DEFI_CONSTANTE(VALE=0.0)
F_R1 = DEFI_CONSTANTE(VALE=57.1333673502)
F_G1 = DEFI_CONSTANTE(VALE=8613.0)
F_R2 = DEFI_CONSTANTE(VALE=238.731127339)
F_G2 = DEFI_CONSTANTE(VALE=10.386585592)
F_RK = DEFI_CONSTANTE(VALE=0.0)
F_P0 = DEFI_CONSTANTE(VALE=0.0)
F_GM = DEFI_CONSTANTE(VALE=1.0)


ACIER = DEFI_MATERIAU(
    ELAS=_F(E=190000.0, NU=0.3),
    ECRO_NL_FO=_F(
        R0=F_R0,
        RH=F_RH,
        R1=F_R1,
        GAMMA_1=F_G1,
        R2=F_R2,
        GAMMA_2=F_G2,
        RK=F_RK,
        P0=F_P0,
        GAMMA_M=F_GM,
    ),
    GTN=_F(
        Q1=1.5,
        Q2=1.07,
        PORO_INIT=1.0e-2,
        COAL_PORO=0.05,
        COAL_ACCE=3,
        NUCL_GAUSS_PORO=0.0,
        NUCL_GAUSS_PLAS=0.6,
        NUCL_GAUSS_DEV=0.01,
    ),
)

# AFFECTATION DES MATERIAUX
MATE = AFFE_MATERIAU(MAILLAGE=MAIL, AFFE=_F(GROUP_MA="SPECIMEN", MATER=ACIER))

# CONDITIONS AUX LIMITES ET CHARGEMENTS
DEFX = DEFI_FONCTION(NOM_PARA="X", VALE=(0, 0, 0.05, deplx))

DEFY = DEFI_FONCTION(NOM_PARA="Y", VALE=(0, 0, 0.05, deply))

CHAR = AFFE_CHAR_CINE_F(MODELE=MODE, MECA_IMPO=(_F(GROUP_MA="SPECIMEN", DX=DEFX, DY=DEFY),))


# LISTE DES INSTANTS DE CALCUL
REEL_CAL = DEFI_LIST_REEL(DEBUT=0, INTERVALLE=_F(JUSQU_A=inst_total, NOMBRE=nb_pas))

INST_CAL = DEFI_LIST_INST(DEFI_LIST=_F(LIST_INST=REEL_CAL), METHODE="AUTO")

REEL_ARC = DEFI_LIST_REEL(DEBUT=0, INTERVALLE=_F(JUSQU_A=inst_total, NOMBRE=nb_arch))

FONC = DEFI_FONCTION(NOM_PARA="INST", VALE=(0.0, 0.0, inst_total, 1.0), PROL_DROITE="LINEAIRE")


# CALCUL NON LINEAIRE
RESU = STAT_NON_LINE(
    MODELE=MODE,
    CHAM_MATER=MATE,
    EXCIT=(_F(CHARGE=CHAR, FONC_MULT=FONC),),
    COMPORTEMENT=_F(GROUP_MA="SPECIMEN", RELATION="GTN", PARM_THETA=0.5, DEFORMATION="GDEF_LOG"),
    INCREMENT=_F(LIST_INST=INST_CAL, INST_FIN=inst_fin),
    CONVERGENCE=_F(ITER_GLOB_MAXI=20, RESI_GLOB_MAXI=1.0e-3),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    SOLVEUR=_F(METHODE="MUMPS", PCENT_PIVOT=20),
    ARCHIVAGE=_F(LIST_INST=REEL_ARC),
)

# TEST SUR SIYY
TEST_RESU(
    RESU=(
        _F(
            RESULTAT=RESU,
            INST=0.50,
            NOM_CHAM="SIEF_ELGA",
            NOM_CMP="SIYY",
            TYPE_TEST="MAX",
            VALE_CALC=327.48502513262474,
            REFERENCE="SOURCE_EXTERNE",
            VALE_REFE=3.282971e02,
            PRECISION=0.01,
        ),
    )
)

TEST_RESU(
    RESU=(
        _F(
            RESULTAT=RESU,
            INST=0.70,
            NOM_CHAM="SIEF_ELGA",
            NOM_CMP="SIYY",
            TYPE_TEST="MAX",
            VALE_CALC=154.55185428109522,
            REFERENCE="SOURCE_EXTERNE",
            VALE_REFE=1.550777e02,
            PRECISION=0.01,
        ),
    )
)

# TEST SUR VARIABLE D'ECROUISSAGE V1
TEST_RESU(
    RESU=(
        _F(
            RESULTAT=RESU,
            INST=0.50,
            NOM_CHAM="VARI_ELGA",
            NOM_CMP="V1",
            TYPE_TEST="MAX",
            VALE_CALC=0.18957410768087016,
            REFERENCE="SOURCE_EXTERNE",
            VALE_REFE=1.906764e-01,
            PRECISION=0.01,
        ),
    )
)
TEST_RESU(
    RESU=(
        _F(
            RESULTAT=RESU,
            INST=0.70,
            NOM_CHAM="VARI_ELGA",
            NOM_CMP="V1",
            TYPE_TEST="MAX",
            VALE_CALC=0.21178194498250122,
            REFERENCE="SOURCE_EXTERNE",
            VALE_REFE=2.131176e-01,
            PRECISION=0.01,
        ),
    )
)

# TEST SUR POROSITE V2
TEST_RESU(
    RESU=(
        _F(
            RESULTAT=RESU,
            INST=0.50,
            NOM_CHAM="VARI_ELGA",
            NOM_CMP="V2",
            TYPE_TEST="MAX",
            VALE_CALC=0.1494624178416676,
            REFERENCE="SOURCE_EXTERNE",
            VALE_REFE=1.494371e-01,
            PRECISION=0.01,
        ),
    )
)
TEST_RESU(
    RESU=(
        _F(
            RESULTAT=RESU,
            INST=0.70,
            NOM_CHAM="VARI_ELGA",
            NOM_CMP="V2",
            TYPE_TEST="MAX",
            VALE_CALC=0.1985859042226403,
            REFERENCE="SOURCE_EXTERNE",
            VALE_REFE=1.985565e-01,
            PRECISION=0.01,
        ),
    )
)
FIN()
