# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------
#
# VALIDATION DE LA BONNE PRISE EN COMPTE DES VARIABLES DE COMMANDE
# EN ELASTIQUE
#
# - Modélisation B : Validation de la prise en compte de TEMP, HYDR,
#   SECH et EPSA*6 en ELAS_ORTH (via nmorth) avec STAT_NON_LINE
#
# --------------------------------------------------------------------

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

EL = DEFI_CONSTANTE(VALE=10.0)
ET = DEFI_CONSTANTE(VALE=10.0)
EN = DEFI_CONSTANTE(VALE=10.0)
GLT = DEFI_CONSTANTE(VALE=5.0)
GTN = DEFI_CONSTANTE(VALE=5.0)
GLN = DEFI_CONSTANTE(VALE=5.0)
NULT = DEFI_CONSTANTE(VALE=0.0)
NULN = DEFI_CONSTANTE(VALE=0.0)
NUTN = DEFI_CONSTANTE(VALE=0.0)
ALPHAL = DEFI_CONSTANTE(VALE=1.0)
ALPHAT = DEFI_CONSTANTE(VALE=2.0)
ALPHAN = DEFI_CONSTANTE(VALE=3.0)

MAIL = LIRE_MAILLAGE(FORMAT="ASTER")

MAIL = DEFI_GROUP(
    reuse=MAIL, MAILLAGE=MAIL, CREA_GROUP_MA=(_F(NOM="TOUT", TOUT="OUI", TYPE_MAILLE="3D"),)
)

MAT = DEFI_MATERIAU(
    ELAS_ORTH_FO=_F(
        E_L=EL,
        E_T=ET,
        E_N=EN,
        G_LT=GLT,
        G_TN=GTN,
        G_LN=GLN,
        NU_LT=NULT,
        NU_LN=NULN,
        NU_TN=NUTN,
        ALPHA_L=ALPHAL,
        ALPHA_T=ALPHAT,
        ALPHA_N=ALPHAN,
        TEMP_DEF_ALPHA=20.0,
        B_ENDOGE=1.5,
        K_DESSIC=3.5,
    )
)

MOD = AFFE_MODELE(
    MAILLAGE=MAIL, AFFE=(_F(GROUP_MA="TOUT", PHENOMENE="MECANIQUE", MODELISATION="3D"),)
)

BLOC = AFFE_CHAR_CINE(
    MODELE=MOD,
    MECA_IMPO=(
        _F(DX=0.0, DY=0.0, DZ=0.0, GROUP_NO=("ORIG",)),
        _F(DY=0.0, DZ=0.0, GROUP_MA=("S34",)),
        _F(DY=0.0, GROUP_NO=("NO7",)),
    ),
)

LINST = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=1.0, NOMBRE=1),))


# - Test de la bonne prise en compte de la déformation thermique (TEMP)

# --- Angles permettant d'avoir des composantes de cisaillement
#     non nulles pour la déformation

ang1 = 45.0
ang2 = 0.0
ang3 = 0.0

tref = 20.0
tempi = tref
tempf = 3 * tref


ELEMPRO1 = AFFE_CARA_ELEM(MASSIF=_F(ANGL_EULER=(ang1, ang2, ang3), GROUP_MA="TOUT"), MODELE=MOD)

TEMPI = CREA_CHAMP(
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    MODELE=MOD,
    AFFE=_F(GROUP_MA="TOUT", NOM_CMP="TEMP", VALE=tempi),
)

TEMPF = CREA_CHAMP(
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    MODELE=MOD,
    AFFE=_F(GROUP_MA="TOUT", NOM_CMP="TEMP", VALE=tempf),
)

CHTEMP = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_THER",
    AFFE=(
        _F(NOM_CHAM="TEMP", CHAM_GD=TEMPI, INST=0.0),
        _F(NOM_CHAM="TEMP", CHAM_GD=TEMPF, INST=1.0),
    ),
)

CHMATT = AFFE_MATERIAU(
    MAILLAGE=MAIL,
    AFFE=_F(GROUP_MA="TOUT", MATER=MAT),
    AFFE_VARC=(_F(GROUP_MA="TOUT", EVOL=CHTEMP, NOM_VARC="TEMP", NOM_CHAM="TEMP", VALE_REF=tref),),
)

UTEMP = STAT_NON_LINE(
    CHAM_MATER=CHMATT,
    COMPORTEMENT=(_F(RELATION="ELAS"),),
    CARA_ELEM=ELEMPRO1,
    EXCIT=_F(CHARGE=BLOC),
    INCREMENT=_F(LIST_INST=LINST),
    MODELE=MOD,
)

epsl11 = 1.0 * (tempf - tempi)
epsl22 = 2.0 * (tempf - tempi)
epsl33 = 3.0 * (tempf - tempi)

epsg11 = (epsl11 + epsl22) / 2.0
epsg12 = (epsl11 - epsl22) / 2.0
epsg33 = epsl33

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        GROUP_NO="NO1",
        REFERENCE="ANALYTIQUE",
        RESULTAT=UTEMP,
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        VALE_CALC=2 * epsg12,
        VALE_REFE=2 * epsg12,
        CRITERE="RELATIF",
        PRECISION=0.001,
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        GROUP_NO="NO4",
        REFERENCE="ANALYTIQUE",
        RESULTAT=UTEMP,
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        VALE_CALC=epsg11,
        VALE_REFE=epsg11,
        CRITERE="RELATIF",
        PRECISION=0.001,
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        GROUP_NO="NO7",
        REFERENCE="ANALYTIQUE",
        RESULTAT=UTEMP,
        NOM_CHAM="DEPL",
        NOM_CMP="DZ",
        VALE_CALC=epsg33,
        VALE_REFE=epsg33,
        CRITERE="RELATIF",
        PRECISION=0.001,
    )
)

# - Test de la bonne prise en compte du retrait endogène (HYDR)

ang1 = 75.2
ang2 = 12.3
ang3 = 46.5

ELEMPRO2 = AFFE_CARA_ELEM(MASSIF=_F(ANGL_EULER=(ang1, ang2, ang3), GROUP_MA="TOUT"), MODELE=MOD)

HYDRI = CREA_CHAMP(
    TYPE_CHAM="NOEU_HYDR_R",
    OPERATION="AFFE",
    MODELE=MOD,
    AFFE=_F(GROUP_MA="TOUT", NOM_CMP="HYDR", VALE=0.0),
)

HYDRF = CREA_CHAMP(
    TYPE_CHAM="NOEU_HYDR_R",
    OPERATION="AFFE",
    MODELE=MOD,
    AFFE=_F(GROUP_MA="TOUT", NOM_CMP="HYDR", VALE=2.0),
)

CHHYDR = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_THER",
    AFFE=(
        _F(NOM_CHAM="HYDR_NOEU", CHAM_GD=HYDRI, INST=0.0),
        _F(NOM_CHAM="HYDR_NOEU", CHAM_GD=HYDRF, INST=1.0),
    ),
)

CHMATH = AFFE_MATERIAU(
    MAILLAGE=MAIL,
    AFFE=_F(GROUP_MA="TOUT", MATER=MAT),
    AFFE_VARC=(_F(GROUP_MA="TOUT", EVOL=CHHYDR, NOM_VARC="HYDR", NOM_CHAM="HYDR_NOEU"),),
)

UHYDR = STAT_NON_LINE(
    CHAM_MATER=CHMATH,
    COMPORTEMENT=(_F(RELATION="ELAS"),),
    CARA_ELEM=ELEMPRO2,
    EXCIT=_F(CHARGE=BLOC),
    INCREMENT=_F(LIST_INST=LINST),
    MODELE=MOD,
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        GROUP_NO="NO4",
        REFERENCE="ANALYTIQUE",
        RESULTAT=UHYDR,
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        VALE_CALC=-3.0,
        VALE_REFE=-3.0,
        CRITERE="RELATIF",
        PRECISION=0.001,
    )
)

# - Test de la bonne prise en compte du retrait de dessication (SECH)

sechref = 2.0
sechi = sechref
sechf = 3 * sechref

SECHI = CREA_CHAMP(
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    MODELE=MOD,
    AFFE=_F(GROUP_MA="TOUT", NOM_CMP="SECH", VALE=sechi),
)

SECHF = CREA_CHAMP(
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    MODELE=MOD,
    AFFE=_F(GROUP_MA="TOUT", NOM_CMP="SECH", VALE=sechf),
)

CHSECH = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_SECH",
    AFFE=(
        _F(NOM_CHAM="SECH", CHAM_GD=SECHI, INST=0.0),
        _F(NOM_CHAM="SECH", CHAM_GD=SECHF, INST=1.0),
    ),
)

CHMATS = AFFE_MATERIAU(
    MAILLAGE=MAIL,
    AFFE=_F(GROUP_MA="TOUT", MATER=MAT),
    AFFE_VARC=(
        _F(GROUP_MA="TOUT", EVOL=CHSECH, NOM_VARC="SECH", NOM_CHAM="SECH", VALE_REF=sechref),
    ),
)

USECH = STAT_NON_LINE(
    CHAM_MATER=CHMATS,
    COMPORTEMENT=(_F(RELATION="ELAS"),),
    CARA_ELEM=ELEMPRO2,
    EXCIT=_F(CHARGE=BLOC),
    INCREMENT=_F(LIST_INST=LINST),
    MODELE=MOD,
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        GROUP_NO="NO4",
        REFERENCE="ANALYTIQUE",
        RESULTAT=USECH,
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        VALE_CALC=14.0,
        VALE_REFE=14.0,
        CRITERE="RELATIF",
        PRECISION=0.001,
    )
)

# - Test de la bonne prise en compte des déformations anélastiques EPSA*6

EPS0 = CREA_CHAMP(
    TYPE_CHAM="ELNO_EPSI_R",
    OPERATION="AFFE",
    MODELE=MOD,
    AFFE=(
        _F(TOUT="OUI", NOM_CMP=("EPXX", "EPYY", "EPZZ"), VALE=(0.0, 0.0, 0.0)),
        _F(TOUT="OUI", NOM_CMP=("EPXY", "EPXZ", "EPYZ"), VALE=(0.0, 0.0, 0.0)),
    ),
)

EPSXXIMP = CREA_CHAMP(
    TYPE_CHAM="ELNO_EPSI_R",
    OPERATION="AFFE",
    MODELE=MOD,
    AFFE=(
        _F(TOUT="OUI", NOM_CMP=("EPXX", "EPYY", "EPZZ"), VALE=(7.0, 0.0, 0.0)),
        _F(TOUT="OUI", NOM_CMP=("EPXY", "EPXZ", "EPYZ"), VALE=(0.0, 0.0, 0.0)),
    ),
)

EPSXYIMP = CREA_CHAMP(
    TYPE_CHAM="ELNO_EPSI_R",
    OPERATION="AFFE",
    MODELE=MOD,
    AFFE=(
        _F(TOUT="OUI", NOM_CMP=("EPXX", "EPYY", "EPZZ"), VALE=(0.0, 0.0, 0.0)),
        _F(TOUT="OUI", NOM_CMP=("EPXY", "EPXZ", "EPYZ"), VALE=(12.0, 0.0, 0.0)),
    ),
)

# --- Test pour EPSAXX

EPSA1 = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_VARC",
    AFFE=(
        _F(NOM_CHAM="EPSA_ELNO", CHAM_GD=EPS0, INST=0.0),
        _F(NOM_CHAM="EPSA_ELNO", CHAM_GD=EPSXXIMP, INST=1.0),
    ),
)

CHMAT1 = AFFE_MATERIAU(
    MAILLAGE=MAIL,
    AFFE=_F(GROUP_MA="TOUT", MATER=MAT),
    AFFE_VARC=_F(TOUT="OUI", EVOL=EPSA1, NOM_VARC="EPSA", NOM_CHAM="EPSA_ELNO"),
)

UEPSA1 = STAT_NON_LINE(
    CHAM_MATER=CHMAT1,
    COMPORTEMENT=(_F(RELATION="ELAS"),),
    CARA_ELEM=ELEMPRO2,
    EXCIT=_F(CHARGE=BLOC),
    INCREMENT=_F(LIST_INST=LINST),
    MODELE=MOD,
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        GROUP_NO="NO4",
        REFERENCE="ANALYTIQUE",
        RESULTAT=UEPSA1,
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        VALE_CALC=7.0,
        VALE_REFE=7.0,
        CRITERE="RELATIF",
        PRECISION=0.001,
    )
)

# --- Test pour EPSAXY

EPSA2 = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="EVOL_VARC",
    AFFE=(
        _F(NOM_CHAM="EPSA_ELNO", CHAM_GD=EPS0, INST=0.0),
        _F(NOM_CHAM="EPSA_ELNO", CHAM_GD=EPSXYIMP, INST=1.0),
    ),
)

CHMAT2 = AFFE_MATERIAU(
    MAILLAGE=MAIL,
    AFFE=_F(GROUP_MA="TOUT", MATER=MAT),
    AFFE_VARC=_F(TOUT="OUI", EVOL=EPSA2, NOM_VARC="EPSA", NOM_CHAM="EPSA_ELNO"),
)

UEPSA2 = STAT_NON_LINE(
    CHAM_MATER=CHMAT2,
    COMPORTEMENT=(_F(RELATION="ELAS"),),
    CARA_ELEM=ELEMPRO2,
    EXCIT=_F(CHARGE=BLOC),
    INCREMENT=_F(LIST_INST=LINST),
    MODELE=MOD,
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        GROUP_NO="NO1",
        REFERENCE="ANALYTIQUE",
        RESULTAT=UEPSA2,
        NOM_CHAM="DEPL",
        NOM_CMP="DX",
        VALE_CALC=2 * 12.0,
        VALE_REFE=2 * 12.0,
        CRITERE="RELATIF",
        PRECISION=0.001,
    )
)

FIN()
