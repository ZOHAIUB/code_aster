# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# MODELISATION B : RELAXATION DES ACIERS VIA MODI_ETCC_REPRISE

DEBUT(CODE="OUI")
# <CALCULEL3_47> AVEC CALC_PRECONT, ON PASSE CONSCIEMMENT DE LDC 'SANS'
# A UNE AUTRE LOI DE COMPORTEMENT

# -----------------------------------------------------------#
# -----------------------------------------------------------#
# VALIDATION DU CALCUL DES TENSIONS PAR METHODE ETCC        #
# AVEC PRISE EN COMPTE DES PERTES ELASTIQUES                #
# ET DES PERTES PAR RELAXATION  DES ACIERS                  #
#  METHODE EXACTE (MOT-CLE MODI_CABLE_ETCC)
# -----------------------------------------------------------#
# UNITES
# LONGUEUR     [M]
# FORCE        [N]
# PRESSION     [PA]
# -----------------------------------------------------------#
# -----------------------------------------------------------#

#######################################################################
################################## DEFINITION DES PARAMETRES ##########
#######################################################################

# PARAMETRES DES MATERIAUX
# Béton
E_bet = 30000.0e6
NU_bet = 0.13
ALPHA_b = 0.00001

# Câbles
E_cab = 191500.0e6
NU_cab = 0.3
S_cab = 3 * 0.002641

f_prg = 1814.0e6
f0 = 0.82 * f_prg
# Taux de tension 1487.E6
T0 = f0 * S_cab

mu_h = 0.17
phi_h = 0.0015
phi = 0.0015 / mu_h

g_cab = 0.008

# RELAXATION ACIER
rh1000 = 2.5
nbhrelax = 65 * 365.25 * 24

# DEFINITION DES INSTANTS DE CALCUL

tps = DEFI_LIST_REEL(VALE=(0, 1.0, 2.0, 3.0))

########################################################################
################################## DEFINITION DU MODELE ################
########################################################################

# LECTURE DU MAILLAGE

mail1 = LIRE_MAILLAGE(FORMAT="ASTER")


#  Creation des groupes
mail1 = DEFI_GROUP(
    reuse=mail1,
    MAILLAGE=mail1,
    CREA_GROUP_MA=(
        _F(NOM="CAB_ODD", UNION=("CAB1", "CAB3", "CAB5", "CAB7", "CAB9")),
        _F(NOM="CAB_EVEN", UNION=("CAB2", "CAB4", "CAB6", "CAB8", "CAB10")),
        _F(
            NOM="CABLES",
            UNION=("CAB1", "CAB3", "CAB5", "CAB7", "CAB9", "CAB2", "CAB4", "CAB6", "CAB8", "CAB10"),
        ),
    ),
    CREA_GROUP_NO=(_F(TOUT_GROUP_MA="OUI"),),
)


# DEFINITION DES MATERIAUX
bet = DEFI_MATERIAU(ELAS=_F(E=E_bet, NU=NU_bet, ALPHA=ALPHA_b), ETCC_BETON=_F())

aci_h = DEFI_MATERIAU(
    ELAS=_F(E=E_cab, NU=NU_cab),
    ETCC_ACIER=_F(RELAX_1000=rh1000, F_PRG=f_prg, COEF_FROT=mu_h, PERT_LIGNE=phi),
)

# DEFINING MECHANICAL PROBLEM AND MODELISATION
# Defines the type of equation to solve and the type of elements used for the modelisation of the mesh

mod = AFFE_MODELE(
    MAILLAGE=mail1,
    AFFE=(
        _F(GROUP_MA=("FUT",), PHENOMENE="MECANIQUE", MODELISATION="3D"),
        _F(GROUP_MA=("CABLES",), PHENOMENE="MECANIQUE", MODELISATION="BARRE"),
    ),
)

# ATTRIBUTING GEOMETRICAL CHARACTERISTICS AND RELATED PROPERTIES TO GROUPS OF ELEMENTS

cara = AFFE_CARA_ELEM(
    MODELE=mod, BARRE=(_F(GROUP_MA=("CABLES",), SECTION="GENERALE", CARA="A", VALE=S_cab),)
)

# ATTRIBUTING MATERIAL PROPERTIES TO GROUPS OF ELEMENTS
mat = AFFE_MATERIAU(
    MAILLAGE=mail1,
    MODELE=mod,
    AFFE=(_F(GROUP_MA="FUT", MATER=bet), _F(GROUP_MA="CABLES", MATER=aci_h)),
)

########################################################################################################
################################## DEFINITION DES CABLES ##########################################
########################################################################################################
# DEFINITION DES CABLES (SANS RELAXATION)
cab_odd0 = DEFI_CABLE_BP(
    MODELE=mod,
    CHAM_MATER=mat,
    CARA_ELEM=cara,
    GROUP_MA_BETON="FUT",
    DEFI_CABLE=(
        _F(GROUP_MA="CAB1", GROUP_NO_ANCRAGE=("CAB1_I", "CAB1_F")),
        _F(GROUP_MA="CAB3", GROUP_NO_ANCRAGE=("CAB3_I", "CAB3_F")),
        _F(GROUP_MA="CAB5", GROUP_NO_ANCRAGE=("CAB5_I", "CAB5_F")),
        _F(GROUP_MA="CAB7", GROUP_NO_ANCRAGE=("CAB7_I", "CAB7_F")),
        _F(GROUP_MA="CAB9", GROUP_NO_ANCRAGE=("CAB9_I", "CAB9_F")),
    ),
    TYPE_ANCRAGE=("ACTIF", "ACTIF"),
    TENSION_INIT=T0,
    RECUL_ANCRAGE=g_cab,
)

cab_eve0 = DEFI_CABLE_BP(
    MODELE=mod,
    CHAM_MATER=mat,
    CARA_ELEM=cara,
    GROUP_MA_BETON="FUT",
    DEFI_CABLE=(
        _F(GROUP_MA="CAB2", GROUP_NO_ANCRAGE=("CAB2_I", "CAB2_F")),
        _F(GROUP_MA="CAB4", GROUP_NO_ANCRAGE=("CAB4_I", "CAB4_F")),
        _F(GROUP_MA="CAB6", GROUP_NO_ANCRAGE=("CAB6_I", "CAB6_F")),
        _F(GROUP_MA="CAB8", GROUP_NO_ANCRAGE=("CAB8_I", "CAB8_F")),
        _F(GROUP_MA="CAB10", GROUP_NO_ANCRAGE=("CAB10_I", "CAB10_F")),
    ),
    TYPE_ANCRAGE=("ACTIF", "ACTIF"),
    TENSION_INIT=T0,
    RECUL_ANCRAGE=g_cab,
)


########################################################################################################
################################## DEFINITION DES CHARGEMENTS ##########################################
########################################################################################################
# DEFINITION LIAISONS CINEMATIQUES DES CABLES

ch_odd0 = AFFE_CHAR_MECA(
    MODELE=mod, RELA_CINE_BP=_F(CABLE_BP=cab_odd0, SIGM_BPEL="NON", RELA_CINE="OUI")
)
ch_eve0 = AFFE_CHAR_MECA(
    MODELE=mod, RELA_CINE_BP=_F(CABLE_BP=cab_eve0, SIGM_BPEL="NON", RELA_CINE="OUI")
)


# DEFINITION DES CONDITIONS LIMITES
clim = AFFE_CHAR_MECA(
    MODELE=mod,
    DDL_IMPO=(_F(GROUP_NO=("ND_BASE", "PMY"), DX=0), _F(GROUP_NO=("INF",), DZ=0)),
    LIAISON_DDL=(
        _F(GROUP_NO=("ND_BASE", "PMY"), DDL=("DY", "DY"), COEF_MULT=(1.0, 1.0), COEF_IMPO=0.0),
    ),
)

########################################################################################################
############################################# CALCUL ###################################################
########################################################################################################

#  ETAPE 1: MISE EN TENSION CABLES IMPAIRS
res0 = CALC_PRECONT(
    MODELE=mod,
    CHAM_MATER=mat,
    CARA_ELEM=cara,
    COMPORTEMENT=_F(RELATION="ELAS"),
    EXCIT=_F(CHARGE=clim),
    CABLE_BP=(cab_odd0,),
    CABLE_BP_INACTIF=(cab_eve0,),
    INCREMENT=_F(LIST_INST=tps, INST_FIN=1.0),
)

#  ETAPE 2: MISE EN TENSION CABLES PAIRS
res0 = CALC_PRECONT(
    reuse=res0,
    ETAT_INIT=_F(EVOL_NOLI=res0),
    MODELE=mod,
    CHAM_MATER=mat,
    CARA_ELEM=cara,
    COMPORTEMENT=_F(RELATION="ELAS"),
    EXCIT=(
        _F(CHARGE=clim),
        _F(CHARGE=ch_odd0),
    ),  #  les liaisons cinématiques des câbles déjà mis en tension doivent être inclues comme chargement
    CABLE_BP=cab_eve0,
    INCREMENT=_F(LIST_INST=tps, INST_FIN=2.0),
)


#############################################################
## RECUPERATION DES EFFORTS DANS LES CABLES
#############################################################

# Calcul des contraintes et déformations dans les éléments
res0 = CALC_CHAMP(reuse=res0, RESULTAT=res0, INST=2.0, CONTRAINTE=("SIEF_ELNO",))

########################################################################################################
################################## EXTRACTION DES TENSIONS DANS LES CABLES ######################################
########################################################################################################

tensc1 = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB1",
        GROUP_MA="CAB1",
        OPERATION="EXTRACTION",
        INST=2.0,
    )
)

tensc2 = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB2",
        GROUP_MA="CAB2",
        OPERATION="EXTRACTION",
        INST=2.0,
    )
)

tensc3 = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB3",
        GROUP_MA="CAB3",
        OPERATION="EXTRACTION",
        INST=2.0,
    )
)

tensc4 = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB4",
        GROUP_MA="CAB4",
        OPERATION="EXTRACTION",
        INST=2.0,
    )
)

tensc5 = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB5",
        GROUP_MA="CAB5",
        OPERATION="EXTRACTION",
        INST=2.0,
    )
)

tensc6 = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB6",
        GROUP_MA="CAB6",
        OPERATION="EXTRACTION",
        INST=2.0,
    )
)

tensc7 = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB7",
        GROUP_MA="CAB7",
        OPERATION="EXTRACTION",
        INST=2.0,
    )
)

tensc8 = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB8",
        GROUP_MA="CAB8",
        OPERATION="EXTRACTION",
        INST=2.0,
    )
)

tensc9 = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB9",
        GROUP_MA="CAB9",
        OPERATION="EXTRACTION",
        INST=2.0,
    )
)

tensc10 = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB10",
        GROUP_MA="CAB10",
        OPERATION="EXTRACTION",
        INST=2.0,
    )
)

#################################################################
#  PHASE 2 : CALCUL AVEC PRISE EN COMPTE DE LA RELAXATION
#################################################################

# DEFINITION DES CABLES (AVEC RELAXATION)
cab_odd = DEFI_CABLE_BP(
    MODELE=mod,
    CHAM_MATER=mat,
    CARA_ELEM=cara,
    GROUP_MA_BETON="FUT",
    TYPE_RELAX="ETCC_REPRISE",
    MODI_CABLE_ETCC=(
        _F(GROUP_MA="CAB1", GROUP_NO_ANCRAGE=("CAB1_I", "CAB1_F"), TENSION=tensc1),
        _F(GROUP_MA="CAB3", GROUP_NO_ANCRAGE=("CAB3_I", "CAB3_F"), TENSION=tensc3),
        _F(GROUP_MA="CAB5", GROUP_NO_ANCRAGE=("CAB5_I", "CAB5_F"), TENSION=tensc5),
        _F(GROUP_MA="CAB7", GROUP_NO_ANCRAGE=("CAB7_I", "CAB7_F"), TENSION=tensc7),
        _F(GROUP_MA="CAB9", GROUP_NO_ANCRAGE=("CAB9_I", "CAB9_F"), TENSION=tensc9),
    ),
    TYPE_ANCRAGE=("ACTIF", "ACTIF"),
    TENSION_INIT=T0,
    RECUL_ANCRAGE=g_cab,
    NBH_RELAX=nbhrelax,
)

cab_eve = DEFI_CABLE_BP(
    MODELE=mod,
    CHAM_MATER=mat,
    CARA_ELEM=cara,
    GROUP_MA_BETON="FUT",
    TYPE_RELAX="ETCC_REPRISE",
    MODI_CABLE_ETCC=(
        _F(GROUP_MA="CAB2", GROUP_NO_ANCRAGE=("CAB2_I", "CAB2_F"), TENSION=tensc2),
        _F(GROUP_MA="CAB4", GROUP_NO_ANCRAGE=("CAB4_I", "CAB4_F"), TENSION=tensc4),
        _F(GROUP_MA="CAB6", GROUP_NO_ANCRAGE=("CAB6_I", "CAB6_F"), TENSION=tensc6),
        _F(GROUP_MA="CAB8", GROUP_NO_ANCRAGE=("CAB8_I", "CAB8_F"), TENSION=tensc8),
        _F(GROUP_MA="CAB10", GROUP_NO_ANCRAGE=("CAB10_I", "CAB10_F"), TENSION=tensc10),
    ),
    TYPE_ANCRAGE=("ACTIF", "ACTIF"),
    TENSION_INIT=T0,
    RECUL_ANCRAGE=g_cab,
    NBH_RELAX=nbhrelax,
)

tab_odd = RECU_TABLE(CO=cab_odd, NOM_TABLE="CABLE_BP")
tab_eve = RECU_TABLE(CO=cab_eve, NOM_TABLE="CABLE_BP")
# IMPR_TABLE(TABLE=tab_odd,UNITE=8)
# IMPR_TABLE(TABLE=tab_eve,UNITE=8)

#  ETAPE 3 : PRISE EN COMPTE DE LA RELAXATION
res0 = CALC_PRECONT(
    reuse=res0,
    ETAT_INIT=_F(EVOL_NOLI=res0),
    MODELE=mod,
    CHAM_MATER=mat,
    CARA_ELEM=cara,
    COMPORTEMENT=_F(RELATION="ELAS"),
    EXCIT=(_F(CHARGE=clim),),
    CABLE_BP=(cab_eve, cab_odd),
    INCREMENT=_F(LIST_INST=tps, INST_FIN=3.0),
)

res0 = CALC_CHAMP(reuse=res0, RESULTAT=res0, INST=3.0, CONTRAINTE=("SIEF_ELNO",))

tensc9f = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB9",
        GROUP_MA="CAB9",
        OPERATION="EXTRACTION",
        INST=3.0,
    )
)

tensc10f = POST_RELEVE_T(
    ACTION=_F(
        RESULTAT=res0,
        INTITULE="N",
        NOM_CHAM="SIEF_ELNO",
        NOM_CMP="N",
        GROUP_NO="CAB10",
        GROUP_MA="CAB10",
        OPERATION="EXTRACTION",
        INST=3.0,
    )
)

###################################################
#       TEST DES RESULTATS                    ####
###################################################


# VERIFICATION DES VALEURS OBTENUES
# A L'EXTREMITE DES CABLES IMPAIRS

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="ANALYTIQUE",
    PRECISION=0.6e-2,
    VALE_CALC=9335689.6642,
    VALE_REFE=9.289e06,
    NOM_PARA="TENSION",
    TABLE=tab_odd,
    FILTRE=(_F(NOM_PARA="NOM_CABLE", VALE_K="CAB9"), _F(NOM_PARA="ABSC_CURV", VALE=0.0)),
)

# A LA LIMITE DU RECUL D'ANCRAGE
# (ATTENTION ABSC_CURV PAS PARFAITEMENT COINCIDENTE)
TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="ANALYTIQUE",
    PRECISION=0.5e-2,
    VALE_CALC=10122688.336,
    VALE_REFE=10.085e06,
    NOM_PARA="TENSION",
    TABLE=tab_odd,
    FILTRE=(_F(NOM_PARA="NOM_CABLE", VALE_K="CAB9"), _F(NOM_PARA="ABSC_CURV", VALE=9.200)),
)
# AU MILIEU DU CABLE
# (AVEC PERTES ELASTIQUES)
TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="ANALYTIQUE",
    PRECISION=0.5e-2,
    VALE_CALC=6223992.85721,
    VALE_REFE=6.210e06,
    NOM_PARA="TENSION",
    TABLE=tab_odd,
    FILTRE=(_F(NOM_PARA="NOM_CABLE", VALE_K="CAB9"), _F(NOM_PARA="ABSC_CURV", VALE=64.403)),
)

# VERIFICATION DES VALEURS OBTENUES
# A L'EXTREMITE DU CABLE

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="ANALYTIQUE",
    PRECISION=0.5e-2,
    VALE_CALC=9.3065000682759e06,
    VALE_REFE=9.289e06,
    NOM_PARA="TENSION",
    TABLE=tab_eve,
    FILTRE=(_F(NOM_PARA="NOM_CABLE", VALE_K="CAB10"), _F(NOM_PARA="ABSC_CURV", VALE=0.0)),
)
# A LA LIMITE DU RECUL D'ANCRAGE
# (ATTENTION ABSC_CURV PAS PARFAITEMENT COINCIDENTE)

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="ANALYTIQUE",
    PRECISION=0.5e-2,
    VALE_CALC=1.0079236996295e07,
    VALE_REFE=10.085e06,
    NOM_PARA="TENSION",
    TABLE=tab_eve,
    FILTRE=(_F(NOM_PARA="NOM_CABLE", VALE_K="CAB10"), _F(NOM_PARA="ABSC_CURV", VALE=9.200)),
)
# AU MILIEU DU CABLE
TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="ANALYTIQUE",
    PRECISION=0.5e-2,
    VALE_CALC=6.2186261408414e06,
    VALE_REFE=6.210e06,
    NOM_PARA="TENSION",
    TABLE=tab_eve,
    FILTRE=(_F(NOM_PARA="NOM_CABLE", VALE_K="CAB10"), _F(NOM_PARA="ABSC_CURV", VALE=64.403)),
)

# VERIFICATION GLOBALE AVANT ET APRES MISE EN TENSION

TEST_TABLE(
    CRITERE="RELATIF",
    TYPE_TEST="SOMM",
    VALE_CALC=1066341600.5904781,
    NOM_PARA="TENSION",
    TABLE=tab_odd,
    FILTRE=(_F(NOM_PARA="NOM_CABLE", VALE_K="CAB9"),),
)

TEST_TABLE(
    TABLE=tensc9f,
    TYPE_TEST="SOMM",
    NOM_PARA="N",
    VALE_CALC=1066373265.9033507,
    VALE_REFE=1066341600.5904781,
    REFERENCE="AUTRE_ASTER",
    CRITERE="RELATIF",
    PRECISION=0.05e-2,
)

TEST_TABLE(
    CRITERE="RELATIF",
    TYPE_TEST="SOMM",
    VALE_CALC=1063650103.5108216,
    NOM_PARA="TENSION",
    TABLE=tab_eve,
    FILTRE=(_F(NOM_PARA="NOM_CABLE", VALE_K="CAB10"),),
)

TEST_TABLE(
    TABLE=tensc10f,
    TYPE_TEST="SOMM",
    NOM_PARA="N",
    VALE_CALC=1063681449.2213774,
    VALE_REFE=1063650103.5108216,
    REFERENCE="AUTRE_ASTER",
    CRITERE="RELATIF",
    PRECISION=0.05e-2,
)


FIN()
