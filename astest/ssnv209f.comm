# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#
#       CAS_TEST SSNV209F: 3D, ELEMENTS HEXA8, METHODE CONTINUE

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

# ......................................................
#  CALCUL TEST ELEMENTS FINIS XFEM ET CONTACT 3D QUAD8
#  PLAQUE EN CONTACT FROTTANT SUR BATI RIGIDE
#  AVEC XFEM
# ......................................................
#
# Cas reference 3D: methode continue (Modélisation FEM)
#
# ----------------------------------------------
#                MAILLAGE
# ----------------------------------------------

MA = LIRE_MAILLAGE(FORMAT="MED", VERI_MAIL=_F(VERIF="OUI"))

y0 = -0.00952381

MA = DEFI_GROUP(
    reuse=MA,
    MAILLAGE=MA,
    CREA_GROUP_NO=(
        _F(GROUP_MA="MTOT"),
        _F(
            GROUP_MA="LCONTA",
            OPTION="NOEUD_ORDO",
            NOM="RELEVE",
            GROUP_NO_ORIG="PPA",
            GROUP_NO_EXTR="PPS",
        ),
        _F(
            NOM="NFISSU",
            OPTION="PLAN",
            POINT=(0.0, 0.0, 0.0),
            VECT_NORMALE=(0.0, 1.0, 0.0),
            PRECISION=1.0e-6,
        ),
    ),
)

# ----------------------------------------------
#                   MODELE
# ----------------------------------------------

MO = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="3D"))

MA = MODI_MAILLAGE(
    reuse=MA,
    MAILLAGE=MA,
    ORIE_PEAU=(
        _F(GROUP_MA_PEAU="SPRESV"),
        _F(GROUP_MA_PEAU="SPRESH"),
        _F(GROUP_MA_PEAU="SBATI"),
        _F(GROUP_MA_PEAU="SBLOCX"),
    ),
)

# ----------------------------------------------
#                   MATERIAU
# ----------------------------------------------

MATPLA = DEFI_MATERIAU(ELAS=_F(E=1.3e11, NU=0.2))

MATBAT = DEFI_MATERIAU(ELAS=_F(E=1.0e16, NU=0.0))

CHMAT = AFFE_MATERIAU(MAILLAGE=MA, AFFE=(_F(GROUP_MA="MTOT", MATER=MATPLA),))

# ----------------------------------------------
#                   CHARGEMENTS
# ----------------------------------------------


CHCINE = AFFE_CHAR_MECA(
    MODELE=MO,
    #                 Blockage du bâti
    DDL_IMPO=(_F(GROUP_MA=("VBATI"), DX=0.0, DY=0.0, DZ=0.0),),
)

CHA1 = AFFE_CHAR_MECA(MODELE=MO, PRES_REP=(_F(GROUP_MA="SPRESV", PRES=5.0e07),))


def pr(y):
    if y < 0.0:
        return 0.0e07
    if y > 0.0:
        return 15.0e7
    if y == 0.0:
        return 0.0


FCTPRES = FORMULE(VALE="pr(Y)", pr=pr, NOM_PARA=["X", "Y"])

CHAF = AFFE_CHAR_MECA_F(MODELE=MO, PRES_REP=_F(GROUP_MA=("SPRESH", "SBLOCX"), PRES=FCTPRES))


CHA2 = DEFI_CONTACT(
    MODELE=MO,
    FORMULATION="CONTINUE",
    FROTTEMENT="COULOMB",
    ALGO_RESO_CONT="POINT_FIXE",
    ALGO_RESO_GEOM="POINT_FIXE",
    ALGO_RESO_FROT="NEWTON",
    ITER_GEOM_MAXI=3,
    ITER_CONT_MAXI=4,
    ZONE=(
        _F(
            GROUP_MA_MAIT="SBAT",
            GROUP_MA_ESCL="SCONTA",
            APPARIEMENT="MAIT_ESCL",
            NORMALE="MAIT",
            ALGO_CONT="STANDARD",
            COEF_CONT=100.0,
            ALGO_FROT="STANDARD",
            COEF_FROT=100.0,
            CONTACT_INIT="INTERPENETRE",
            SEUIL_INIT=100.0,
            COULOMB=1.0,
        ),
    ),
)


# ----------------------------------------------
#                   RESOLUTION
# ----------------------------------------------

RAMPE = DEFI_FONCTION(
    NOM_PARA="INST", PROL_GAUCHE="LINEAIRE", PROL_DROITE="LINEAIRE", VALE=(0.0, 0.0, 1.0, 1.0)
)

L_INST = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=1.0, NOMBRE=1))

# LES SYSTEMES LINEAIRES SONT DIFFICILES A RESOUDRE.
# ON DEVERROUILLE LA DETECTION DE SINGULARITE. LE PROCESSUS DE NEWTON
# CORRIGE LES EVENTUELLES DERIVES.
U2M = STAT_NON_LINE(
    MODELE=MO,
    CHAM_MATER=CHMAT,
    EXCIT=(_F(CHARGE=CHCINE), _F(CHARGE=CHA1, FONC_MULT=RAMPE), _F(CHARGE=CHAF, FONC_MULT=RAMPE)),
    CONTACT=CHA2,
    COMPORTEMENT=_F(RELATION="ELAS"),
    NEWTON=_F(REAC_ITER=1),
    INCREMENT=_F(LIST_INST=L_INST),
    CONVERGENCE=_F(ARRET="OUI", ITER_GLOB_MAXI=30, RESI_GLOB_RELA=1.0e-6),
    SOLVEUR=_F(METHODE="MUMPS", NPREC=-1),
    INFO=1,
)

# ----------------------------------------------
#                   POST RELEVE
# ----------------------------------------------

U2M = CALC_CHAMP(reuse=U2M, CONTRAINTE=("SIGM_ELNO"), VARI_INTERNE=("VARI_ELNO"), RESULTAT=U2M)


DEPL2M = CREA_CHAMP(
    OPERATION="EXTR", TYPE_CHAM="NOEU_DEPL_R", NOM_CHAM="DEPL", RESULTAT=U2M, INST=1.0
)

DEPLAC = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="DEPLAC",
        GROUP_NO="RELEVE",
        RESULTAT=U2M,
        NOM_CHAM="DEPL",
        INST=1.0,
        TOUT_CMP="OUI",
        OPERATION="EXTRACTION",
    )
)

TCONT = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="CONT",
        GROUP_NO="RELEVE",
        RESULTAT=U2M,
        NOM_CHAM="CONT_NOEU",
        INST=1.0,
        TOUT_CMP="OUI",
        OPERATION="EXTRACTION",
    )
)

IMPR_TABLE(TABLE=DEPLAC)
IMPR_TABLE(TABLE=TCONT)

DEP = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="DEPLACEMENT",
        GROUP_NO="NFISSU",
        RESULTAT=U2M,
        NOM_CHAM="DEPL",
        INST=1.0,
        TOUT_CMP="OUI",
        OPERATION="EXTRACTION",
    )
)

IMPR_TABLE(TABLE=DEP)

# ----------------------------------------------
#                   TEST TABLE
# ----------------------------------------------

TEST_RESU(
    RESU=(
        _F(
            GROUP_NO="PPA",
            INST=1.0,
            RESULTAT=U2M,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            VALE_CALC=3.06971229984e-05,
        ),
        _F(
            GROUP_NO="PPB",
            INST=1.0,
            RESULTAT=U2M,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            VALE_CALC=2.92588754096e-05,
        ),
        _F(
            GROUP_NO="PPC",
            INST=1.0,
            RESULTAT=U2M,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            VALE_CALC=2.47360419196e-05,
        ),
        _F(
            GROUP_NO="PPD",
            INST=1.0,
            RESULTAT=U2M,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            VALE_CALC=2.158716719e-05,
        ),
        _F(
            GROUP_NO="PPE",
            INST=1.0,
            RESULTAT=U2M,
            NOM_CHAM="DEPL",
            NOM_CMP="DX",
            VALE_CALC=1.70045594304e-05,
        ),
    )
)

FIN()
