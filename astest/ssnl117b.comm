# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# person_in_charge: jean-luc.flejou at edf.fr
# GEOMETRIE PROCHE DU CPP N4

from math import pi

from code_aster.Commands import *
from code_aster.MacroCommands.Contrib.macro_rota_globale import MACR_ROTA_GLOBALE

DEBUT(CODE="OUI", DEBUG=_F(SDVERI="OUI"))

behaviour = CREA_LIB_MFRONT(NOM_COMPOR="Plasticity", UNITE_MFRONT=38)

MOMENTMZ = 1.0

PRESSION = 0.0

EP = 0.077

RMOY = 0.3955

RMOYN = -RMOY

REXT = RMOY + (EP / 2.0)

RC = 1.25

YOUNG = 2.0e11

POISSON = 0.3

SIGY = 200.0e6

H = 2.0e10

MLSURMLS = 0.8

RINT = RMOY - (EP / 2.0)

LAMBDA = EP * RC / RMOY / RMOY

SURF = pi * (REXT * REXT - RINT * RINT)

IY = pi * (REXT**4 - RINT**4) / 4.0

IZ = IY

IX = IY + IZ

MEDR = SIGY * IY / REXT

MPDR = 4.0 * MEDR / pi

MPX = SIGY * IX / REXT

GAMMA = RC / RMOY

STHETA1 = 1.89 / (LAMBDA ** (0.666667))

STHETA2 = 0.96 / (LAMBDA ** (0.333333)) / GAMMA

STHETA = STHETA1 - STHETA2

MEFL = MEDR / STHETA

MPFL = MPDR * MLSURMLS

M1 = LIRE_MAILLAGE(FORMAT="ASTER")

M1 = DEFI_GROUP(reuse=M1, MAILLAGE=M1, CREA_GROUP_MA=_F(NOM="TOUT", TOUT="OUI"))

MA = CREA_MAILLAGE(MAILLAGE=M1, MODI_MAILLE=_F(OPTION="SEG3_4", TOUT="OUI"))

MA = DEFI_GROUP(reuse=MA, MAILLAGE=MA, CREA_GROUP_NO=_F(GROUP_MA="AD"))

MO = AFFE_MODELE(MAILLAGE=MA, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="TUYAU_3M"))

CAREL = AFFE_CARA_ELEM(
    MODELE=MO,
    POUTRE=(
        _F(
            GROUP_MA="TOUT",
            SECTION="CERCLE",
            TUYAU_NCOU=1,
            CARA=("R", "EP"),
            VALE=(REXT, EP),
            MODI_METRIQUE="NON",
        ),
        _F(
            GROUP_MA="BC",
            SECTION="CERCLE",
            TUYAU_NCOU=3,
            CARA=("R", "EP"),
            VALE=(REXT, EP),
            MODI_METRIQUE="NON",
        ),
    ),
    ORIENTATION=_F(GROUP_NO="D", CARA="GENE_TUYAU", VALE=(0.0, 0.0, 1.0)),
)

MAT = DEFI_MATERIAU(ELAS=_F(E=YOUNG, NU=POISSON), MFRONT=_F(LISTE_COEF=(SIGY, H, YOUNG, POISSON)))

CHMAT = AFFE_MATERIAU(MAILLAGE=MA, AFFE=_F(TOUT="OUI", MATER=MAT))

EFOND = pi * PRESSION * RINT * RINT

CHART = AFFE_CHAR_MECA(
    MODELE=MO,
    DDL_IMPO=_F(GROUP_NO="A", DX=0.0, DY=0.0, DZ=0.0, DRX=0.0, DRY=0.0, DRZ=0.0),
    FORCE_NODALE=_F(GROUP_NO="D", MZ=MOMENTMZ),
)

CHARP = AFFE_CHAR_MECA(
    MODELE=MO, FORCE_NODALE=_F(GROUP_NO="D", FX=EFOND), FORCE_TUYAU=_F(TOUT="OUI", PRES=PRESSION)
)

FONCT = DEFI_FONCTION(NOM_PARA="INST", VALE=(0.0, 0.0, MPFL, MPFL))

LINST = DEFI_LIST_REEL(
    DEBUT=0.0, INTERVALLE=(_F(JUSQU_A=MEFL, NOMBRE=1), _F(JUSQU_A=MPFL, NOMBRE=10))
)

U1 = STAT_NON_LINE(
    MODELE=MO,
    CHAM_MATER=CHMAT,
    CARA_ELEM=CAREL,
    EXCIT=(_F(CHARGE=CHART, FONC_MULT=FONCT), _F(CHARGE=CHARP)),
    INCREMENT=_F(LIST_INST=LINST, NUME_INST_FIN=8),
    COMPORTEMENT=(
        _F(
            GROUP_MA="BC",
            RELATION="MFRONT",
            COMPOR_MFRONT=behaviour,
            RESI_INTE=1.0e-6,
            ITER_CPLAN_MAXI=3,
        ),
        _F(GROUP_MA=("AB", "CD"), RELATION="ELAS"),
    ),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=3),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-4, ITER_GLOB_MAXI=100),
    RECH_LINEAIRE=_F(ITER_LINE_MAXI=3),
)

U1 = CALC_CHAMP(
    reuse=U1,
    RESULTAT=U1,
    CRITERES=("SIEQ_ELGA", "EPEQ_ELGA"),
    VARI_INTERNE=("VARI_ELNO"),
    DEFORMATION=("EPSI_ELGA", "DEGE_ELNO"),
    CONTRAINTE=("EFGE_ELNO"),
)

IMPR_RESU(
    FORMAT="RESULTAT",
    RESU=_F(
        RESULTAT=U1,
        NOM_CHAM="SIEQ_ELGA",
        NOM_CMP="VMIS",
        VALE_MAX="OUI",
        VALE_MIN="OUI",
        GROUP_MA="AB",
        NUME_ORDRE=4,
    ),
)

IMPR_RESU(
    FORMAT="RESULTAT",
    RESU=_F(
        RESULTAT=U1,
        NOM_CHAM="SIEQ_ELGA",
        NOM_CMP="VMIS",
        VALE_MAX="OUI",
        VALE_MIN="OUI",
        GROUP_MA=("M1", "M2"),
        NUME_ORDRE=4,
        BORNE_SUP=1.1e8,
        BORNE_INF=1.0e8,
    ),
)

U1 = CALC_CHAMP(reuse=U1, FORCE="FORC_NODA", RESULTAT=U1)

# CALCUL DE LA ROTATION "GLOBALE" DANS LE COUDE EN FONCTION DE L INSTANT

RG = MACR_ROTA_GLOBALE(RESULTAT=U1, GROUP_NO_ORIG="B", GROUP_NO_EXTR="C")

TEST_FONCTION(
    VALEUR=_F(
        VALE_CALC=9.381357581181e-03,
        VALE_REFE=9.399065942030e-03,
        VALE_PARA=5.889810e6,
        REFERENCE="AUTRE_ASTER",
        PRECISION=1.5e-2,
        FONCTION=RG,
    )
)

# REFERENCE : CALCUL 3D-POUTRES

TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            GROUP_NO="D",
            REFERENCE="ANALYTIQUE",  # force appliquée
            RESULTAT=U1,
            NOM_CHAM="FORC_NODA",
            NOM_CMP="DRZ",
            VALE_CALC=3086702.1520852786,
            VALE_REFE=3.086702e6,
        ),
        _F(
            NUME_ORDRE=1,
            GROUP_NO="D",
            REFERENCE="AUTRE_ASTER",
            RESULTAT=U1,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            VALE_CALC=0.01114130775268123,
            VALE_REFE=0.0109256725345,
            PRECISION=0.03,
        ),
        _F(
            NUME_ORDRE=8,
            GROUP_NO="D",
            REFERENCE="ANALYTIQUE",  # force appliquée
            RESULTAT=U1,
            NOM_CHAM="FORC_NODA",
            NOM_CMP="DRZ",
            VALE_CALC=5889813.261109466,
            VALE_REFE=5.889813e6,
        ),
        _F(
            NUME_ORDRE=8,
            GROUP_NO="D",
            REFERENCE="AUTRE_ASTER",
            RESULTAT=U1,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            VALE_CALC=0.022096616203475868,
            VALE_REFE=0.0220208935036,
            PRECISION=0.032,
        ),
    )
)

TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            GROUP_NO="A",
            REFERENCE="AUTRE_ASTER",
            RESULTAT=U1,
            NOM_CHAM="FORC_NODA",
            NOM_CMP="DRZ",
            VALE_CALC=-3086702.1520852735,
            VALE_REFE=-3.086702e6,
        ),
        _F(
            NUME_ORDRE=8,
            GROUP_NO="A",
            REFERENCE="AUTRE_ASTER",
            RESULTAT=U1,
            NOM_CHAM="FORC_NODA",
            NOM_CMP="DRZ",
            VALE_CALC=-5889813.261109368,
            VALE_REFE=-5.889813e6,
        ),
    )
)

# NON REGRESSION

TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            POINT=2,
            SOUS_POINT=61,
            RESULTAT=U1,
            NOM_CHAM="SIEQ_ELGA",
            NOM_CMP="VMIS",
            VALE_CALC=46619237.62620683,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=3,
            POINT=3,
            SOUS_POINT=55,
            RESULTAT=U1,
            NOM_CHAM="SIEQ_ELGA",
            NOM_CMP="VMIS",
            VALE_CALC=57033119.29290677,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=8,
            POINT=2,
            SOUS_POINT=98,
            RESULTAT=U1,
            NOM_CHAM="SIEQ_ELGA",
            NOM_CMP="VMIS_SG",
            VALE_CALC=-143082770.84578294,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=8,
            POINT=3,
            SOUS_POINT=42,
            RESULTAT=U1,
            NOM_CHAM="SIEQ_ELGA",
            NOM_CMP="VMIS_SG",
            VALE_CALC=-7543161.440401318,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=4,
            POINT=1,
            SOUS_POINT=77,
            RESULTAT=U1,
            NOM_CHAM="EPEQ_ELGA",
            NOM_CMP="INVA_2",
            VALE_CALC=0.00021867798506852593,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=5,
            POINT=1,
            SOUS_POINT=8,
            RESULTAT=U1,
            NOM_CHAM="EPEQ_ELGA",
            NOM_CMP="INVA_2",
            VALE_CALC=0.00014764034750928243,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=8,
            POINT=1,
            SOUS_POINT=61,
            RESULTAT=U1,
            NOM_CHAM="EPEQ_ELGA",
            NOM_CMP="INVA_2SG",
            VALE_CALC=-0.0003617207142199991,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=8,
            POINT=3,
            SOUS_POINT=9,
            RESULTAT=U1,
            NOM_CHAM="EPEQ_ELGA",
            NOM_CMP="INVA_2SG",
            VALE_CALC=-0.00011287100259708994,
            GROUP_MA="M1",
        ),
    )
)

# A l extremite D
TAB1 = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="POST",
        GROUP_NO="D",
        RESULTAT=U1,
        NOM_CHAM="DEGE_ELNO",
        TOUT_CMP="OUI",
        OPERATION="EXTRACTION",
    )
)

# Initialisation des constantes

K1 = 1.0
Lambda = EP * RC / RMOY / RMOY
ALPHAN = 1
ALPHAT = 1
GAMMAD = 1
ALPHAF = pi / 4 * GAMMAD

# Definition des formules pour le calcul de EN, ET, EFY, EFZ et ESTAR

form_EN = FORMULE(VALE="(EPXX)", NOM_PARA="EPXX")
form_ET = FORMULE(VALE="(RMOY*GAT/2.)", RMOY=RMOY, NOM_PARA="GAT")
form_EFY = FORMULE(VALE="(RMOY*KY/K1)", RMOY=RMOY, K1=K1, NOM_PARA="KY")
form_EFZ = FORMULE(VALE="(RMOY*KZ/K1)", RMOY=RMOY, K1=K1, NOM_PARA="KZ")
fo_ESTAR = FORMULE(
    VALE="((ALPHAN*EN)**2+(ALPHAT*ET)**2+(ALPHAF*EFY)**2+(ALPHAF*EFZ)**2)**(0.5)",
    ALPHAN=ALPHAN,
    ALPHAT=ALPHAT,
    ALPHAF=ALPHAF,
    NOM_PARA=["ET", "EN", "EFY", "EFZ"],
)

# Partie droite

TAB1 = CALC_TABLE(
    TABLE=TAB1,
    reuse=TAB1,
    ACTION=(
        _F(OPERATION="OPER", FORMULE=form_EN, NOM_PARA="EN"),
        _F(OPERATION="OPER", FORMULE=form_ET, NOM_PARA="ET"),
        _F(OPERATION="OPER", FORMULE=form_EFY, NOM_PARA="EFY"),
        _F(OPERATION="OPER", FORMULE=form_EFZ, NOM_PARA="EFZ"),
        _F(OPERATION="OPER", FORMULE=fo_ESTAR, NOM_PARA="ESTAR"),
    ),
)

IMPR_TABLE(TABLE=TAB1)

TEST_TABLE(
    CRITERE="RELATIF",
    VALE_CALC=-6.984299088847732e-08,
    NOM_PARA="EN",
    TABLE=TAB1,
    FILTRE=_F(NOM_PARA="INST", VALE=3.086700e6),
)

TEST_TABLE(
    CRITERE="ABSOLU",
    VALE_CALC=0.0,
    NOM_PARA="ET",
    TABLE=TAB1,
    FILTRE=_F(NOM_PARA="INST", VALE=3.487150e6),
)

TEST_TABLE(
    CRITERE="RELATIF",
    VALE_CALC=-4.511694462310985e-10,
    NOM_PARA="EFY",
    TABLE=TAB1,
    FILTRE=_F(NOM_PARA="INST", VALE=4.288040e6),
)

TEST_TABLE(
    CRITERE="RELATIF",
    VALE_CALC=0.0007251911057836879,
    NOM_PARA="EFZ",
    TABLE=TAB1,
    FILTRE=_F(NOM_PARA="INST", VALE=5.489370e6),
)

TEST_TABLE(
    CRITERE="RELATIF",
    VALE_CALC=0.0006111129320497398,
    NOM_PARA="ESTAR",
    TABLE=TAB1,
    FILTRE=_F(NOM_PARA="INST", VALE=5.889810e6),
)

# Initialisation des constantes

K2 = max(1.0, 1.65 / Lambda)
GAMMAC = 8 / 9 * (Lambda ** (-0.66667))
GAMMA = max(1, GAMMAC)
ALPHAF2 = pi / 4 * GAMMA

# Definition des formules pour le calcul de EFY, EFZ et ESTAR

for_EFY = FORMULE(VALE="(RMOY*KY/K2)", RMOY=RMOY, K2=K2, NOM_PARA="KY")
for_EFZ = FORMULE(VALE="(RMOY*KZ/K2)", RMOY=RMOY, K2=K2, NOM_PARA="KZ")
f_ESTAR = FORMULE(
    VALE="((ALPHAN*EN)**2+(ALPHAT*ET)**2+(ALPHAF2*EFY)**2+(ALPHAF2*EFZ)**2)**(0.5)",
    ALPHAN=ALPHAN,
    ALPHAT=ALPHAT,
    ALPHAF2=ALPHAF2,
    NOM_PARA=["ET", "EN", "EFY", "EFZ"],
)

# A l entree C du coude

TAB2 = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="POST",
        GROUP_NO="C",
        RESULTAT=U1,
        NOM_CHAM="DEGE_ELNO",
        TOUT_CMP="OUI",
        OPERATION="EXTRACTION",
    )
)

TAB2 = CALC_TABLE(
    TABLE=TAB2,
    reuse=TAB2,
    ACTION=(
        _F(OPERATION="OPER", FORMULE=form_EN, NOM_PARA="EN"),
        _F(OPERATION="OPER", FORMULE=form_ET, NOM_PARA="ET"),
        _F(OPERATION="OPER", FORMULE=for_EFY, NOM_PARA="EFY"),
        _F(OPERATION="OPER", FORMULE=for_EFZ, NOM_PARA="EFZ"),
        _F(OPERATION="OPER", FORMULE=f_ESTAR, NOM_PARA="ESTAR"),
    ),
)

IMPR_TABLE(TABLE=TAB2)

TEST_TABLE(
    CRITERE="RELATIF",
    VALE_CALC=0.0020128454813101953,
    NOM_PARA="EN",
    TABLE=TAB2,
    FILTRE=_F(NOM_PARA="INST", VALE=3.086700e6),
)

TEST_TABLE(
    CRITERE="RELATIF",
    VALE_CALC=1.5330819007081244e-06,
    NOM_PARA="ET",
    TABLE=TAB2,
    FILTRE=_F(NOM_PARA="INST", VALE=3.487150e6),
)

TEST_TABLE(
    CRITERE="RELATIF",
    VALE_CALC=9.60930385292756e-07,
    NOM_PARA="EFY",
    TABLE=TAB2,
    FILTRE=_F(NOM_PARA="INST", VALE=4.288040e6),
)

TEST_TABLE(
    CRITERE="RELATIF",
    VALE_CALC=0.0004096033783108974,
    NOM_PARA="EFZ",
    TABLE=TAB2,
    FILTRE=_F(NOM_PARA="INST", VALE=5.489370e6),
)

TEST_TABLE(
    CRITERE="RELATIF",
    VALE_CALC=0.004020736886555184,
    NOM_PARA="ESTAR",
    TABLE=TAB2,
    FILTRE=_F(NOM_PARA="INST", VALE=5.889810e6),
)

# ---------------------------------------------------------------------------------------
# Validation de POST_CHAMP / MIN_MAX_SP :
# ----------------------------------------
U1 = CALC_CHAMP(reuse=U1, RESULTAT=U1, CONTRAINTE="SIGM_ELGA", NUME_ORDRE=1)
U1C = POST_CHAMP(
    RESULTAT=U1,
    MIN_MAX_SP=(
        _F(NOM_CHAM="SIEQ_ELGA", NOM_CMP="VMIS", TYPE_MAXI="MAXI", NUME_CHAM_RESU=1),
        _F(NOM_CHAM="SIEQ_ELGA", NOM_CMP="VMIS", TYPE_MAXI="MINI", NUME_CHAM_RESU=2),
        _F(NOM_CHAM="SIGM_ELGA", NOM_CMP="SIYY", TYPE_MAXI="MAXI_ABS", NUME_CHAM_RESU=3),
        _F(NOM_CHAM="SIGM_ELGA", NOM_CMP="SIYY", TYPE_MAXI="MINI_ABS", NUME_CHAM_RESU=4),
    ),
)

# verification des valeurs min/max relevees :
TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        POINT=1,
        RESULTAT=U1C,
        NOM_CHAM="UT01_ELGA",
        NOM_CMP="VAL",
        VALE_CALC=109511468.46020804,
        VALE_REFE=1.095114685e08,
        PRECISION=2.0e-06,
        GROUP_MA="M3",
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        POINT=1,
        RESULTAT=U1C,
        NOM_CHAM="UT02_ELGA",
        NOM_CMP="VAL",
        VALE_CALC=6255669.355796452,
        VALE_REFE=6.255669356e06,
        PRECISION=2.0e-06,
        GROUP_MA="M3",
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        POINT=2,
        RESULTAT=U1C,
        NOM_CHAM="UT03_ELGA",
        NOM_CMP="VAL",
        VALE_CALC=79433646.21309397,
        VALE_REFE=7.943364621e07,
        PRECISION=2.0e-06,
        GROUP_MA="M3",
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        POINT=2,
        RESULTAT=U1C,
        NOM_CHAM="UT04_ELGA",
        NOM_CMP="VAL",
        VALE_CALC=86118.11251218244,
        VALE_REFE=8.611811251e04,
        PRECISION=2.0e-06,
        GROUP_MA="M3",
    )
)

# verification de la localisation :
TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        POINT=1,
        RESULTAT=U1C,
        NOM_CHAM="UT01_ELGA",
        NOM_CMP="NUCOU",
        VALE_CALC=1.0,
        VALE_REFE=1.0,
        PRECISION=2.0e-06,
        GROUP_MA="M3",
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        POINT=1,
        RESULTAT=U1C,
        NOM_CHAM="UT01_ELGA",
        NOM_CMP="NUSECT",
        VALE_CALC=1.0,
        VALE_REFE=1.0,
        PRECISION=2.0e-06,
        GROUP_MA="M3",
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        POINT=1,
        RESULTAT=U1C,
        NOM_CHAM="UT01_ELGA",
        NOM_CMP="POSIC",
        VALE_CALC=-1.0,
        VALE_REFE=-1.0,
        PRECISION=2.0e-06,
        GROUP_MA="M3",
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        POINT=1,
        RESULTAT=U1C,
        NOM_CHAM="UT01_ELGA",
        NOM_CMP="POSIS",
        VALE_CALC=-1.0,
        VALE_REFE=-1.0,
        PRECISION=2.0e-06,
        GROUP_MA="M3",
    )
)

# ancienne validation des min/max :
TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            REFERENCE="AUTRE_ASTER",
            POINT=1,
            RESULTAT=U1C,
            NOM_CHAM="UT01_ELGA",
            NOM_CMP="VAL",
            VALE_CALC=88525343.0333567,
            VALE_REFE=8.852534303e07,
            PRECISION=2.0e-06,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=1,
            REFERENCE="AUTRE_ASTER",
            POINT=1,
            RESULTAT=U1C,
            NOM_CHAM="UT02_ELGA",
            NOM_CMP="VAL",
            VALE_CALC=6746441.459190574,
            VALE_REFE=6.746441459e06,
            PRECISION=2.0e-06,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=1,
            REFERENCE="AUTRE_ASTER",
            POINT=2,
            RESULTAT=U1C,
            NOM_CHAM="UT01_ELGA",
            NOM_CMP="NUCOU",
            VALE_CALC=1.0,
            VALE_REFE=1.0,
            PRECISION=2.0e-06,
            GROUP_MA="M2",
        ),
        _F(
            NUME_ORDRE=1,
            REFERENCE="AUTRE_ASTER",
            POINT=3,
            RESULTAT=U1C,
            NOM_CHAM="UT02_ELGA",
            NOM_CMP="NUCOU",
            VALE_CALC=1.0,
            VALE_REFE=1.0,
            PRECISION=2.0e-06,
            GROUP_MA="M3",
        ),
        _F(
            NUME_ORDRE=1,
            REFERENCE="AUTRE_ASTER",
            POINT=1,
            RESULTAT=U1C,
            NOM_CHAM="UT01_ELGA",
            NOM_CMP="NUSECT",
            VALE_CALC=12.0,
            VALE_REFE=12.0,
            PRECISION=2.0e-06,
            GROUP_MA="M4",
        ),
        _F(
            NUME_ORDRE=1,
            REFERENCE="AUTRE_ASTER",
            POINT=2,
            RESULTAT=U1C,
            NOM_CHAM="UT02_ELGA",
            NOM_CMP="NUSECT",
            VALE_CALC=16.0,
            VALE_REFE=16.0,
            PRECISION=2.0e-06,
            GROUP_MA="M5",
        ),
        _F(
            NUME_ORDRE=1,
            REFERENCE="AUTRE_ASTER",
            POINT=3,
            RESULTAT=U1C,
            NOM_CHAM="UT01_ELGA",
            NOM_CMP="POSIC",
            VALE_CALC=-1.0,
            VALE_REFE=-1.0,
            PRECISION=2.0e-06,
            GROUP_MA="M6",
        ),
        _F(
            NUME_ORDRE=1,
            REFERENCE="AUTRE_ASTER",
            POINT=1,
            RESULTAT=U1C,
            NOM_CHAM="UT02_ELGA",
            NOM_CMP="POSIC",
            VALE_CALC=0.0,
            VALE_REFE=0.0,
            CRITERE="ABSOLU",
            PRECISION=2.0e-06,
            GROUP_MA="M7",
        ),
        _F(
            NUME_ORDRE=1,
            REFERENCE="AUTRE_ASTER",
            POINT=2,
            RESULTAT=U1C,
            NOM_CHAM="UT01_ELGA",
            NOM_CMP="POSIS",
            VALE_CALC=1.0,
            VALE_REFE=1.0,
            PRECISION=2.0e-06,
            GROUP_MA="M8",
        ),
        _F(
            NUME_ORDRE=1,
            REFERENCE="AUTRE_ASTER",
            POINT=3,
            RESULTAT=U1C,
            NOM_CHAM="UT02_ELGA",
            NOM_CMP="POSIS",
            VALE_CALC=1.0,
            VALE_REFE=1.0,
            PRECISION=2.0e-06,
            GROUP_MA="M9",
        ),
        _F(
            NUME_ORDRE=4,
            REFERENCE="AUTRE_ASTER",
            POINT=2,
            RESULTAT=U1C,
            NOM_CHAM="UT01_ELGA",
            NOM_CMP="VAL",
            VALE_CALC=124818925.05508545,
            VALE_REFE=1.248189251e08,
            PRECISION=2.0e-06,
            GROUP_MA="M1",
        ),
        _F(
            NUME_ORDRE=5,
            REFERENCE="AUTRE_ASTER",
            POINT=3,
            RESULTAT=U1C,
            NOM_CHAM="UT02_ELGA",
            NOM_CMP="VAL",
            VALE_CALC=28827395.6468852,
            VALE_REFE=2.882739565e07,
            PRECISION=1.0e-05,
            GROUP_MA="M5",
        ),
    )
)

NCOU_M = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELGA_SPMX_R",
    RESULTAT=U1C,
    NOM_CHAM="UT01_ELGA",
    TYPE_MAXI="MAXI",
    TYPE_RESU="VALE",
)

NCOU_I = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELGA_SPMX_R",
    RESULTAT=U1C,
    NOM_CHAM="UT01_ELGA",
    TYPE_MAXI="MAXI",
    TYPE_RESU="INST",
)

NCOU_N = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELGA_SPMX_R",
    RESULTAT=U1C,
    NOM_CHAM="UT01_ELGA",
    TYPE_MAXI="MAXI",
    TYPE_RESU="NUME_ORDRE",
)

TEST_RESU(
    CHAM_ELEM=(
        _F(POINT=1, NOM_CMP="VAL", GROUP_MA="M1", CHAM_GD=NCOU_M, VALE_CALC=168442715.28552178),
        _F(POINT=1, NOM_CMP="VAL", GROUP_MA="M1", CHAM_GD=NCOU_I, VALE_CALC=5889813.261109458),
        _F(POINT=1, NOM_CMP="VAL", GROUP_MA="M1", CHAM_GD=NCOU_N, VALE_CALC=8),
    )
)

# ---------------------------------------------------------------------------------------
# Validation de POST_CHAMP / MIN_MAX_SP pour un champ de VARI_ELNO:
# -------------------------------------------------------------------
U1D = POST_CHAMP(
    RESULTAT=U1,
    GROUP_MA="M5",
    NUME_ORDRE=1,
    MIN_MAX_SP=(_F(NOM_CHAM="VARI_ELNO", NOM_CMP="V5", TYPE_MAXI="MAXI", NUME_CHAM_RESU=1),),
)
# verification des valeurs min/max relevees :
TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        RESULTAT=U1D,
        NOM_CHAM="UT01_ELNO",
        GROUP_NO="N13",
        NOM_CMP="VAL",
        VALE_CALC=9.941732247030592e-07,
        GROUP_MA="M5",
    )
)


TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        RESULTAT=U1D,
        NOM_CHAM="UT01_ELNO",
        GROUP_NO="N13",
        NOM_CMP="NUCOU",
        VALE_CALC=1.0,
        VALE_REFE=1.0,
        PRECISION=2.0e-06,
        GROUP_MA="M5",
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        RESULTAT=U1D,
        NOM_CHAM="UT01_ELNO",
        GROUP_NO="N13",
        NOM_CMP="NUSECT",
        VALE_CALC=12.0,
        VALE_REFE=12.0,
        PRECISION=2.0e-06,
        GROUP_MA="M5",
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        RESULTAT=U1D,
        NOM_CHAM="UT01_ELNO",
        GROUP_NO="N13",
        NOM_CMP="POSIC",
        VALE_CALC=-1.0,
        VALE_REFE=-1.0,
        PRECISION=2.0e-06,
        GROUP_MA="M5",
    )
)

TEST_RESU(
    RESU=_F(
        NUME_ORDRE=1,
        REFERENCE="AUTRE_ASTER",
        RESULTAT=U1D,
        NOM_CHAM="UT01_ELNO",
        GROUP_NO="N13",
        NOM_CMP="POSIS",
        VALE_CALC=1.0,
        VALE_REFE=1.0,
        PRECISION=2.0e-06,
        GROUP_MA="M5",
    )
)


FIN()
