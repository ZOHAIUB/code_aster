# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="OUI"))

# maillage, modele, caraelem

maillage = LIRE_MAILLAGE()

modele = AFFE_MODELE(
    MAILLAGE=maillage,
    AFFE=(
        _F(MODELISATION="POU_D_T", PHENOMENE="MECANIQUE", GROUP_MA="RUN"),
        _F(MODELISATION="POU_D_T", PHENOMENE="MECANIQUE", GROUP_MA="BRANCH"),
    ),
)

acier = DEFI_MATERIAU(
    ELAS=_F(E=2.0e11, RHO=7800, ALPHA=1.2e-5, NU=0.3),
    POST_ROCHE=_F(RAMB_OSGO_FACT=0.01, RAMB_OSGO_EXPO=2),
)


t_ini = CREA_CHAMP(
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    MODELE=modele,
    AFFE=_F(TOUT="OUI", NOM_CMP="TEMP", VALE=20),
)

t_final = CREA_CHAMP(
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    MODELE=modele,
    AFFE=_F(TOUT="OUI", NOM_CMP="TEMP", VALE=120.0),
)

resu_temp = CREA_RESU(
    TYPE_RESU="EVOL_THER",
    OPERATION="AFFE",
    AFFE=(
        _F(NOM_CHAM="TEMP", CHAM_GD=t_ini, INST=0.0),
        _F(NOM_CHAM="TEMP", CHAM_GD=t_final, INST=1.0),
    ),
)


ch_mater = AFFE_MATERIAU(
    MAILLAGE=maillage,
    AFFE_VARC=_F(TOUT="OUI", NOM_VARC="TEMP", EVOL=resu_temp, VALE_REF=20.0),
    AFFE=_F(TOUT="OUI", MATER=acier),
)

cara_elem = AFFE_CARA_ELEM(
    MODELE=modele,
    INFO=2,
    POUTRE=_F(GROUP_MA="TUYAU", SECTION="CERCLE", CARA=("R", "EP"), VALE=(0.01, 0.005)),
)

poids_propre = LIRE_RESU(
    TYPE_RESU="EVOL_ELAS",
    FORMAT="MED",
    UNITE=81,
    MODELE=modele,
    TOUT_ORDRE="OUI",
    FORMAT_MED=(
        # _F(NOM_RESU='poids_propre', NOM_CHAM=('DEPL','EFGE_ELNO','SIEF_ELGA',),),)
        _F(NOM_RESU="poids_propre", NOM_CHAM=("EFGE_ELNO")),
    ),
)

deplacement_impose = LIRE_RESU(
    TYPE_RESU="EVOL_ELAS",
    FORMAT="MED",
    UNITE=81,
    MODELE=modele,
    TOUT_ORDRE="OUI",
    FORMAT_MED=(
        # _F(NOM_RESU='deplacement_impose', NOM_CHAM=('DEPL','EFGE_ELNO','SIEF_ELGA',),),)
        _F(NOM_RESU="deplacement_impose", NOM_CHAM=("EFGE_ELNO",)),
    ),
)


dilatation_thermique = LIRE_RESU(
    TYPE_RESU="EVOL_ELAS",
    FORMAT="MED",
    UNITE=81,
    MODELE=modele,
    TOUT_ORDRE="OUI",
    FORMAT_MED=(
        # _F(NOM_RESU='dilatation_thermique', NOM_CHAM=('DEPL','EFGE_ELNO','SIEF_ELGA',),),)
        _F(NOM_RESU="dilatation_thermique", NOM_CHAM=("EFGE_ELNO",)),
    ),
)

sismique_lu = LIRE_RESU(
    TYPE_RESU="MODE_MECA",
    FORMAT="MED",
    UNITE=81,
    MODELE=modele,
    TOUT_ORDRE="OUI",
    FORMAT_MED=(_F(NOM_RESU="sismique", NOM_CHAM=("EFGE_ELNO",)),),
)

ch_direX = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=1,
)
ch_direY = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=2,
)
ch_direZ = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=3,
)
ch_tota = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=4,
)
ch_dynaX = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=11,
)
ch_dynaY = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=12,
)
ch_dynaZ = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=13,
)
ch_dyna = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=14,
)
ch_qsX = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=21,
)
ch_qsY = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=22,
)
ch_qsZ = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=23,
)
ch_qs = CREA_CHAMP(
    OPERATION="EXTR",
    TYPE_CHAM="ELNO_SIEF_R",
    RESULTAT=sismique_lu,
    NOM_CHAM="EFGE_ELNO",
    NUME_ORDRE=24,
)
# re creer resu comb_sism_modal avec les champs lus depuis un resultat medd
sismique = CREA_RESU(
    OPERATION="AFFE",
    TYPE_RESU="MULT_ELAS",
    AFFE=(
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_direX, NOM_CAS="DIRE_X", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_direY, NOM_CAS="DIRE_Y", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_direZ, NOM_CAS="DIRE_Z", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_tota, NOM_CAS="TOTA", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_dynaX, NOM_CAS="PART_DYNA_X", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_dynaY, NOM_CAS="PART_DYNA_Y", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_dynaZ, NOM_CAS="PART_DYNA_Z", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_dyna, NOM_CAS="PART_DYNA", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_qsX, NOM_CAS="PART_QS_X", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_qsY, NOM_CAS="PART_QS_Y", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_qsZ, NOM_CAS="PART_QS_Z", MODELE=modele),
        _F(NOM_CHAM="EFGE_ELNO", CHAM_GD=ch_qs, NOM_CAS="PART_QS", MODELE=modele),
    ),
)
# appel Ã  POST_ROCHE

chPostRocheTout = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA=(
        _F(TYPE_CHAR="POIDS", RESULTAT=poids_propre, NUME_ORDRE=1),
        _F(TYPE_CHAR="DILAT_THERM", RESULTAT=dilatation_thermique, NUME_ORDRE=1),
        _F(TYPE_CHAR="DEPLACEMENT", RESULTAT=deplacement_impose, NUME_ORDRE=1),
        _F(TYPE_CHAR="SISM_INER_SPEC", RESULTAT=sismique, DIRECTION="COMBI"),
    ),
    PRESSION=(_F(TOUT="OUI", VALE=1e6),),
)

# Tests cas de calcul
# 1- deplacement (D)
# 2- deplacement + pression (DP)
# 3- deplacement + pression + poids propre (DPG)
# 4- seisme inertiel (S)
# 5- seisme inertiel + pression (SP)
# 6- seisme inertiel + pression + poids propre (SPG)
# 7- seisme inertiel + deplacement (SD)

# 1- deplacement (D)
chPostRocheTout_D = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA=(_F(TYPE_CHAR="DEPLACEMENT", RESULTAT=deplacement_impose, NUME_ORDRE=1),),
)

# 2- deplacement + pression (DP)
chPostRocheTout_DP = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA=(_F(TYPE_CHAR="DEPLACEMENT", RESULTAT=deplacement_impose, NUME_ORDRE=1),),
    PRESSION=(_F(TOUT="OUI", VALE=1e6),),
)

# 3- deplacement + pression + poids propre (DPG)
chPostRocheTout_DPG = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA=(
        _F(TYPE_CHAR="POIDS", RESULTAT=poids_propre, NUME_ORDRE=1),
        _F(TYPE_CHAR="DEPLACEMENT", RESULTAT=deplacement_impose, NUME_ORDRE=1),
    ),
    PRESSION=(_F(TOUT="OUI", VALE=1e6),),
)

# 4- seisme inertiel (S)
chPostRocheTout_S = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA=(_F(TYPE_CHAR="SISM_INER_SPEC", RESULTAT=sismique, DIRECTION="COMBI"),),
)

# 5- seisme inertiel + pression (SP)
chPostRocheTout_SP = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA=(_F(TYPE_CHAR="SISM_INER_SPEC", RESULTAT=sismique, DIRECTION="COMBI"),),
    PRESSION=(_F(TOUT="OUI", VALE=1e6),),
)

# 6- seisme inertiel + pression + poids propre (SPG)
chPostRocheTout_SPG = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA=(
        _F(TYPE_CHAR="POIDS", RESULTAT=poids_propre, NUME_ORDRE=1),
        _F(TYPE_CHAR="SISM_INER_SPEC", RESULTAT=sismique, DIRECTION="COMBI"),
    ),
    PRESSION=(_F(TOUT="OUI", VALE=1e6),),
)

# 7- seisme inertiel + deplacement (SD)
chPostRocheTout_SD = POST_ROCHE(
    RCCM_RX="NON",
    ZONE_ANALYSE=(_F(GROUP_MA="RUN", GROUP_NO_ORIG="A"), _F(GROUP_MA="BRANCH", GROUP_NO_ORIG="C")),
    MODELE=modele,
    CARA_ELEM=cara_elem,
    CHAM_MATER=ch_mater,
    RESU_MECA=(
        _F(TYPE_CHAR="DEPLACEMENT", RESULTAT=deplacement_impose, NUME_ORDRE=1),
        _F(TYPE_CHAR="SISM_INER_SPEC", RESULTAT=sismique, DIRECTION="COMBI"),
    ),
)

FIN()
