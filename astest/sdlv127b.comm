# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

# Fichier de commande onde plane inclinee (sur un par.ede de 200 par 400)

DEBUT(CODE="OUI")

mail = LIRE_MAILLAGE()

mail = MODI_MAILLAGE(
    reuse=mail, MAILLAGE=mail, ORIE_PEAU=_F(GROUP_MA_PEAU="LITOT", GROUP_MA_INTERNE="SUF")
)


# Définition des paramètres du modèle

Esol = 30000000000
Nusol = 0.25
Msol = 2450.0


sol = DEFI_MATERIAU(ELAS=_F(E=Esol, NU=Nusol, RHO=Msol))

# ------------------------------------------------------------
# Définition des chargements sur les bords
# ------------------------------------------------------------

from math import *

# Coordonnées du point de départ de l'onde.
z0 = -200.0
x0 = 100.0


z1 = 0.0
x1 = 100.0

# Angle d'incidence par rapport à la verticale de propagation de l'onde (0=vertical)
a = 21

a2 = radians(a)
cosa = cos(a2)
sina = sin(a2)

# Sollicitation en acceleration (ondelette de Ricker)

LINST = DEFI_LIST_REEL(DEBUT=0.0, INTERVALLE=_F(JUSQU_A=0.3, PAS=0.002))  # 1,

acce_0 = (
    DEFI_FONCTION(
        NOM_RESU="ACCE",
        NOM_PARA="INST",
        PROL_GAUCHE="CONSTANT",
        PROL_DROITE="CONSTANT",
        VALE=(
            0,
            0,
            0.014,
            0,
            0.016,
            0.0117113321616078,
            0.018,
            0.0234226643232156,
            0.02,
            0.0468453286464312,
            0.022,
            0.0936906572928623,
            0.024,
            0.187381314585725,
            0.026,
            0.368124552684678,
            0.028,
            0.535826794978997,
            0.03,
            0.684547105928689,
            0.032,
            0.809016994374947,
            0.034,
            0.90482705246602,
            0.036,
            0.968583161128631,
            0.038,
            1.0,
            0.04,
            0.992114701314478,
            0.042,
            0.951056516295154,
            0.044,
            0.876306680043864,
            0.046,
            0.770513242775789,
            0.048,
            0.63742398974869,
            0.05,
            0.481753674101716,
            0.052,
            0.309016994374948,
            0.054,
            0.125333233564304,
            0.056,
            -0.0627905195293133,
            0.058,
            -0.248689887164854,
            0.06,
            -0.425779291565073,
            0.062,
            -0.587785252292473,
            0.064,
            -0.728968627421412,
            0.066,
            -0.844327925502015,
            0.068,
            -0.929776485888251,
            0.07,
            -0.982287250728689,
            0.072,
            -1.0,
            0.074,
            -0.982287250728689,
            0.076,
            -0.929776485888252,
            0.078,
            -0.844327925502016,
            0.08,
            -0.728968627421412,
            0.082,
            -0.587785252292473,
            0.084,
            -0.425779291565073,
            0.086,
            -0.248689887164854,
            0.088,
            -0.124344943582427,
            0.09,
            -0.0621724717912136,
            0.092,
            -0.0310862358956068,
            0.094,
            -0.0155431179478034,
            0.096,
            0,
        ),
    ),
)

acce_1 = CALC_FONCTION(COMB=_F(FONCTION=acce_0, COEF=1.0), LIST_PARA=LINST)

vite_1 = CALC_FONCTION(INTEGRE=_F(FONCTION=acce_1))
depl_1 = CALC_FONCTION(INTEGRE=_F(FONCTION=vite_1))

CHMAT = AFFE_MATERIAU(
    MAILLAGE=mail, AFFE=(_F(GROUP_MA=("SUF"), MATER=sol), _F(GROUP_MA=("LITOT",), MATER=sol))
)

# ------------------------------------------------------------
# Définition des modèles
# ------------------------------------------------------------

# Modèle avec surface libre
MODELE = AFFE_MODELE(
    MAILLAGE=mail,
    AFFE=(
        _F(GROUP_MA=("SUF"), PHENOMENE="MECANIQUE", MODELISATION="D_PLAN"),
        _F(GROUP_MA=("LIG", "LID", "LIB"), PHENOMENE="MECANIQUE", MODELISATION="D_PLAN_ABSO"),
    ),
)

ASSEMBLAGE(
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    NUME_DDL=CO("NUMEDDL"),
    MATR_ASSE=(
        _F(MATRICE=CO("RIGI"), OPTION="RIGI_MECA"),
        _F(MATRICE=CO("MASSE"), OPTION="MASS_MECA"),
        _F(MATRICE=CO("AMOR"), OPTION="AMOR_MECA"),
    ),
)

# Chargement Onde P incident
ONDEP = AFFE_CHAR_MECA_F(
    MODELE=MODELE,
    ONDE_PLANE=_F(
        DIRECTION=(sina, cosa, 0.0),
        TYPE_ONDE="P",
        FONC_SIGNAL=vite_1,
        COOR_SOURCE=(x0, z0),
        COOR_REFLECHI=(x1, z1),
        DEPL_IMPO=depl_1,
        GROUP_MA=("LITOT"),
    ),
)

# Chargement Onde S incident
ONDES = AFFE_CHAR_MECA_F(
    MODELE=MODELE,
    ONDE_PLANE=_F(
        DIRECTION=(sina, cosa, 0.0),
        TYPE_ONDE="S",
        FONC_SIGNAL=vite_1,
        COOR_SOURCE=(x0, z0),
        COOR_REFLECHI=(x1, z1),
        DEPL_IMPO=depl_1,
        GROUP_MA=("LITOT",),
    ),
)

# Résultat avec Onde P incidente
ResuP = DYNA_VIBRA(
    BASE_CALCUL="PHYS",
    TYPE_CALCUL="TRAN",
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    MATR_MASS=MASSE,
    MATR_RIGI=RIGI,
    MATR_AMOR=AMOR,
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK"),
    INCREMENT=_F(LIST_INST=LINST),
    ARCHIVAGE=_F(LIST_INST=LINST),
    EXCIT=(_F(CHARGE=ONDEP),),
)

# On recupère les fonctions de deplacement X et Z aux points de post-traitement

accxc = CALC_FONCTION(COMB=_F(FONCTION=acce_1, COEF=1.0), LIST_PARA=LINST)


ayNGHP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NGH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNMHP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NMH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNDHP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NDH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNGBP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NGB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNMBP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NMB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNDBP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NDB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)


axNGHP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NGH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNMHP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NMH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNDHP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NDH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNGBP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NGB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNMBP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NMB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNDBP = RECU_FONCTION(
    RESULTAT=ResuP,
    GROUP_NO="NDB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

# On recompose la composante de l'onde P --> A_p = Ax*sina + Ay*cosa

APF_NGH = FORMULE(
    NOM_PARA="INST",
    VALE="axNGHP(INST)*sina+ayNGHP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNGHP=axNGHP,
    ayNGHP=ayNGHP,
)

AP_NGH = CALC_FONC_INTERP(
    FONCTION=APF_NGH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


APF_NMH = FORMULE(
    NOM_PARA="INST",
    VALE="axNMHP(INST)*sina+ayNMHP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNMHP=axNMHP,
    ayNMHP=ayNMHP,
)

AP_NMH = CALC_FONC_INTERP(
    FONCTION=APF_NMH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


APF_NDH = FORMULE(
    NOM_PARA="INST",
    VALE="axNDHP(INST)*sina+ayNDHP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNDHP=axNDHP,
    ayNDHP=ayNDHP,
)

AP_NDH = CALC_FONC_INTERP(
    FONCTION=APF_NDH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


APF_NGB = FORMULE(
    NOM_PARA="INST",
    VALE="axNGBP(INST)*sina+ayNGBP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNGBP=axNGBP,
    ayNGBP=ayNGBP,
)

AP_NGB = CALC_FONC_INTERP(
    FONCTION=APF_NGB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


APF_NMB = FORMULE(
    NOM_PARA="INST",
    VALE="axNMBP(INST)*sina+ayNMBP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNMBP=axNMBP,
    ayNMBP=ayNMBP,
)

AP_NMB = CALC_FONC_INTERP(
    FONCTION=APF_NMB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


APF_NDB = FORMULE(
    NOM_PARA="INST",
    VALE="axNDBP(INST)*sina+ayNDBP(INST)*cosa",
    sina=sina,
    cosa=cosa,
    axNDBP=axNDBP,
    ayNDBP=ayNDBP,
)

AP_NDB = CALC_FONC_INTERP(
    FONCTION=APF_NDB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)

TEST_FONCTION(
    VALEUR=(
        _F(
            VALE_CALC=0.99977013806922,
            VALE_REFE=1.0,
            PRECISION=2.5e-3,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.038,
            FONCTION=AP_NGB,
        ),
        _F(
            VALE_CALC=0.99881237304717,
            VALE_REFE=1.0,
            PRECISION=2.5e-3,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.058,
            FONCTION=AP_NMB,
        ),
        _F(
            VALE_CALC=1.002599246974,
            VALE_REFE=1.0,
            PRECISION=4.0e-3,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.076,
            FONCTION=AP_NDB,
        ),
        _F(
            VALE_CALC=2.033689908895,
            VALE_REFE=2.0,
            PRECISION=2.0e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.088,
            FONCTION=AP_NGH,
        ),
        _F(
            VALE_CALC=1.993126406826,
            VALE_REFE=2.0,
            PRECISION=4.0e-3,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.106,
            FONCTION=AP_NMH,
        ),
        _F(
            VALE_CALC=1.989706283486,
            VALE_REFE=2.0,
            PRECISION=6.0e-3,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.126,
            FONCTION=AP_NDH,
        ),
    )
)

# Résultat avec Onde S incidente
ResuS = DYNA_VIBRA(
    BASE_CALCUL="PHYS",
    TYPE_CALCUL="TRAN",
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    MATR_MASS=MASSE,
    MATR_RIGI=RIGI,
    MATR_AMOR=AMOR,
    SCHEMA_TEMPS=_F(SCHEMA="NEWMARK"),
    INCREMENT=_F(LIST_INST=LINST),
    ARCHIVAGE=_F(LIST_INST=LINST),
    EXCIT=(_F(CHARGE=ONDES),),
)


# On recupère les fonctions de deplacement X et Z aux points de post-traitement


ayNGHS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NGH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNMHS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NMH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNDHS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NDH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNGBS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NGB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNMBS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NMB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)

ayNDBS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NDB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DY",
)


axNGHS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NGH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNMHS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NMH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNDHS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NDH",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNGBS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NGB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNMBS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NMB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)

axNDBS = RECU_FONCTION(
    RESULTAT=ResuS,
    GROUP_NO="NDB",
    NOM_CHAM="ACCE",
    INTERPOL="LIN",
    PROL_DROITE="CONSTANT",
    PROL_GAUCHE="CONSTANT",
    LIST_INST=LINST,
    NOM_CMP="DX",
)


# On recompose la composante de l'onde S --> A_s = Ax*cosa - Az*sina

ASF_NGH = FORMULE(
    NOM_PARA="INST",
    VALE="axNGHS(INST)*cosa-ayNGHS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNGHS=axNGHS,
    ayNGHS=ayNGHS,
)

AS_NGH = CALC_FONC_INTERP(
    FONCTION=ASF_NGH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


ASF_NMH = FORMULE(
    NOM_PARA="INST",
    VALE="axNMHS(INST)*cosa-ayNMHS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNMHS=axNMHS,
    ayNMHS=ayNMHS,
)

AS_NMH = CALC_FONC_INTERP(
    FONCTION=ASF_NMH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


ASF_NDH = FORMULE(
    NOM_PARA="INST",
    VALE="axNDHS(INST)*cosa-ayNDHS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNDHS=axNDHS,
    ayNDHS=ayNDHS,
)

AS_NDH = CALC_FONC_INTERP(
    FONCTION=ASF_NDH,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


ASF_NGB = FORMULE(
    NOM_PARA="INST",
    VALE="axNGBS(INST)*cosa-ayNGBS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNGBS=axNGBS,
    ayNGBS=ayNGBS,
)

AS_NGB = CALC_FONC_INTERP(
    FONCTION=ASF_NGB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


ASF_NMB = FORMULE(
    NOM_PARA="INST",
    VALE="axNMBS(INST)*cosa-ayNMBS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNMBS=axNMBS,
    ayNMBS=ayNMBS,
)

AS_NMB = CALC_FONC_INTERP(
    FONCTION=ASF_NMB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


ASF_NDB = FORMULE(
    NOM_PARA="INST",
    VALE="axNDBS(INST)*cosa-ayNDBS(INST)*sina",
    sina=sina,
    cosa=cosa,
    axNDBS=axNDBS,
    ayNDBS=ayNDBS,
)

AS_NDB = CALC_FONC_INTERP(
    FONCTION=ASF_NDB,
    LIST_PARA=LINST,
    NOM_PARA="INST",
    NOM_RESU="ACCE",
    PROL_GAUCHE="CONSTANT",
    PROL_DROITE="CONSTANT",
    INTERPOL="LIN",
)


TEST_FONCTION(
    VALEUR=(
        _F(
            VALE_CALC=-1.009005612806,
            VALE_REFE=-1.0,
            PRECISION=1.0e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.038,
            FONCTION=AS_NGB,
        ),
        _F(
            VALE_CALC=-0.99779015325572,
            VALE_REFE=-1.0,
            PRECISION=3.0e-3,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.070,
            FONCTION=AS_NMB,
        ),
        _F(
            VALE_CALC=-0.99647088505823,
            VALE_REFE=-1.0,
            PRECISION=5.0e-3,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.104,
            FONCTION=AS_NDB,
        ),
        _F(
            VALE_CALC=-1.976538204225,
            VALE_REFE=-2.0,
            PRECISION=1.3e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.124,
            FONCTION=AS_NGH,
        ),
        _F(
            VALE_CALC=-1.959818667293,
            VALE_REFE=-2.0,
            PRECISION=2.1e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.156,
            FONCTION=AS_NMH,
        ),
        _F(
            VALE_CALC=-2.025792007917,
            VALE_REFE=-2.0,
            PRECISION=1.4e-2,
            REFERENCE="ANALYTIQUE",
            CRITERE="RELATIF",
            VALE_PARA=0.188,
            FONCTION=AS_NDH,
        ),
    )
)

FIN()
