# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#               AVEC LA LOI DE HUJEUX
# PRESSION DE CONSOLIDATION P0 = 100KPA
# ON CHERCHE A VALIDER L'ORTHOTROPIE DE LA LOI DE HUJEUX
# A L'AIDE D'UN CALCUL ELASTIQUE ORTHOTROPE REALISE AVEC ASTER
# (DEGENERESCENCE DE HUJEUX VERS UNE LOI ELASTIQUE LINEAIRE)


DEBUT(CODE="OUI", ERREUR=_F(ALARME="EXCEPTION"), DEBUG=_F(SDVERI="NON"))
# SDVERI='NON' car la verification est trop couteuse en CPU

# modules mecaniques [kPa]
K = 516.2e6
G = 238.2e6
# =>
YOUNG = 9.0 * K * G / (3.0 * K + G)
POISSON = (3.0 * K - 2.0 * G) / (6.0 * K + 2.0 * G)

print("young=", YOUNG, " /// nu=", POISSON)

# pression de preconsolidation [en kPa]
P0 = 100000.0


# ***********************************************************************
#    MAILLAGE + MODELE
# ***********************************************************************
MAILLAGE = LIRE_MAILLAGE(FORMAT="MED")

MODELE = AFFE_MODELE(
    MAILLAGE=MAILLAGE, AFFE=_F(TOUT="OUI", PHENOMENE="MECANIQUE", MODELISATION="3D")
)

MAILLAGE = MODI_MAILLAGE(
    reuse=MAILLAGE,
    MAILLAGE=MAILLAGE,
    ORIE_PEAU=_F(
        GROUP_MA_PEAU=("DEVANT", "DROIT", "ARRIERE", "GAUCHE", "BAS", "HAUT", "APPUI", "COTE")
    ),
    INFO=1,
)


# ***********************************************************************
#    INCREMENTS DE TEMPS
# ***********************************************************************
TEMPS0 = DEFI_LIST_REEL(
    DEBUT=-20.0, INTERVALLE=(_F(JUSQU_A=-10.0, NOMBRE=1), _F(JUSQU_A=0.0, NOMBRE=100))
)


# ***********************************************************************
#    MATERIAU : SOL
# ***********************************************************************
SOL0 = DEFI_MATERIAU(
    ELAS_ORTH=_F(
        E_L=100 * YOUNG,
        E_T=50 * YOUNG,
        E_N=YOUNG,
        NU_LT=POISSON,
        NU_TN=POISSON,
        NU_LN=POISSON,
        G_LT=50 * G,
        G_LN=100 * G,
        G_TN=G,
    )
)

SOL = DEFI_MATERIAU(
    ELAS_ORTH=_F(
        E_L=100 * YOUNG,
        E_T=50 * YOUNG,
        E_N=YOUNG,
        NU_LT=POISSON,
        NU_TN=POISSON,
        NU_LN=POISSON,
        G_LT=50 * G,
        G_LN=100 * G,
        G_TN=G,
    ),
    HUJEUX=_F(
        N=0.0,
        BETA=24.0,
        D=100.0,
        B=0.1,
        PHI=33.0,
        ANGDIL=33.0,
        PCO=-1.0e6,
        PREF=-1.0e6,
        AMON=0.0001,
        ACYC=0.008,
        CMON=0.2,
        CCYC=0.1,
        RD_ELA=1.0,
        RI_ELA=1.0,
        RHYS=0.05,
        RMOB=0.9,
        XM=1.0,
        RD_CYC=0.005,
        RI_CYC=0.001,
        DILA=1.0,
    ),
)

CHMAT0 = AFFE_MATERIAU(MAILLAGE=MAILLAGE, AFFE=_F(TOUT="OUI", MATER=SOL0))

CHMAT = AFFE_MATERIAU(MAILLAGE=MAILLAGE, AFFE=_F(TOUT="OUI", MATER=SOL))


# ***********************************************************************
#    CHARGEMENT MECANIQUE : FORCE DE COMPRESSION + DDL IMPOSES
# ***********************************************************************
CHAR_U1 = AFFE_CHAR_MECA(MODELE=MODELE, PRES_REP=_F(GROUP_MA="COTE", PRES=1.0))

CHAR_U2 = AFFE_CHAR_MECA(MODELE=MODELE, PRES_REP=_F(GROUP_MA="APPUI", PRES=1.0))

DEPL_1 = AFFE_CHAR_MECA(
    MODELE=MODELE,
    FACE_IMPO=(
        _F(GROUP_MA="BAS", DZ=0.0),
        _F(GROUP_MA="GAUCHE", DX=0.0),
        _F(GROUP_MA="DEVANT", DY=0.0),
    ),
)

COEF0 = DEFI_FONCTION(NOM_PARA="INST", PROL_DROITE="CONSTANT", VALE=(-20.0, 0.0, -10.0, P0))

# ***********************************************************************
#    PRECONSOLIDATION ELASTIQUE JUSQU'A P0 (100 kPa)
# ***********************************************************************
U0 = STAT_NON_LINE(
    MODELE=MODELE,
    CHAM_MATER=CHMAT0,
    EXCIT=(
        _F(CHARGE=CHAR_U1, FONC_MULT=COEF0),
        _F(CHARGE=CHAR_U2, FONC_MULT=COEF0),
        _F(CHARGE=DEPL_1),
    ),
    COMPORTEMENT=_F(RELATION="ELAS"),
    NEWTON=_F(MATRICE="ELASTIQUE"),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-6, ITER_GLOB_MAXI=20),
    INCREMENT=_F(LIST_INST=TEMPS0, INST_FIN=-10.0),
)
# ----------- FIN

SIG0 = CREA_CHAMP(
    INFO=1, TYPE_CHAM="ELGA_SIEF_R", OPERATION="EXTR", RESULTAT=U0, NOM_CHAM="SIEF_ELGA", INST=-10.0
)

COEF1 = DEFI_FONCTION(NOM_PARA="INST", PROL_DROITE="CONSTANT", VALE=(-10.0, P0, 0.0, 3 * P0))


# ***********************************************************************
#    CONSOLIDATION ELASTIQUE (HUJEUX DEGENERE) DRAINE JUSQU'A 300KPA
# ***********************************************************************
U1 = STAT_NON_LINE(
    MODELE=MODELE,
    CHAM_MATER=CHMAT,
    EXCIT=(
        _F(CHARGE=CHAR_U1, FONC_MULT=COEF1),
        _F(CHARGE=CHAR_U2, FONC_MULT=COEF1),
        _F(CHARGE=DEPL_1),
    ),
    ETAT_INIT=_F(SIGM=SIG0),
    COMPORTEMENT=_F(
        RELATION="HUJEUX",
        ALGO_INTE="SPECIFIQUE",
        RESI_INTE=1.0e-8,
        ITER_INTE_PAS=-5,
        ITER_INTE_MAXI=1,
    ),
    NEWTON=_F(MATRICE="TANGENTE", REAC_ITER=1),
    CONVERGENCE=_F(RESI_GLOB_RELA=1.0e-6, ITER_GLOB_MAXI=20),
    INCREMENT=_F(LIST_INST=TEMPS0, INST_INIT=-10.0, INST_FIN=0.0),
)


# *******************************************************************************
#                     POST-TRAITEMENT des RESULTATS
# *******************************************************************************
U1 = CALC_CHAMP(
    reuse=U1,
    CONTRAINTE=("SIGM_ELNO"),
    VARI_INTERNE=("VARI_ELNO"),
    DEFORMATION=("EPSI_ELNO"),
    RESULTAT=U1,
)


U1 = CALC_CHAMP(
    reuse=U1, CONTRAINTE="SIGM_NOEU", VARI_INTERNE="VARI_NOEU", DEFORMATION="EPSI_NOEU", RESULTAT=U1
)

TAB_SIG = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="EQUI_NOEU_DEPL",
        GROUP_NO="C",
        RESULTAT=U1,
        NOM_CHAM="SIGM_NOEU",
        TOUT_CMP="OUI",
        OPERATION="EXTRACTION",
    )
)

TAB_EPS = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="EPSI_NOEU",
        GROUP_NO="C",
        RESULTAT=U1,
        NOM_CHAM="EPSI_NOEU",
        TOUT_CMP="OUI",
        OPERATION="EXTRACTION",
    )
)

TAB_VAR = POST_RELEVE_T(
    ACTION=_F(
        INTITULE="VARI_NOEU",
        GROUP_NO="C",
        RESULTAT=U1,
        NOM_CHAM="VARI_NOEU",
        NOM_CMP=("V4", "V8", "V23"),
        OPERATION="EXTRACTION",
    )
)

IMPR_TABLE(TABLE=TAB_SIG)
IMPR_TABLE(TABLE=TAB_EPS)
IMPR_TABLE(TABLE=TAB_VAR)


# *******************************************************************************
#                                  TEST_RESU
# *******************************************************************************

# TEST DE LA DEFORMATION ELASTIQUE EPSI_XX PAR RAPPORT
# A UN CALCUL ASTER ELASTIQUE LINEAIRE
TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-2,
    VALE_CALC=-2.5829781738347124e-07,
    VALE_REFE=-2.5829799999999997e-07,
    NOM_PARA="EPXX",
    TABLE=TAB_EPS,
    FILTRE=_F(
        CRITERE="ABSOLU",
        PRECISION=9.9999999999999995e-07,
        NOM_PARA="EPZZ",
        VALE=-6.3999999999999997e-05,
    ),
)

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-2,
    VALE_CALC=-5.165956347669165e-07,
    VALE_REFE=-5.1659599999999995e-07,
    NOM_PARA="EPXX",
    TABLE=TAB_EPS,
    FILTRE=_F(
        CRITERE="ABSOLU",
        PRECISION=9.9999999999999995e-07,
        NOM_PARA="EPZZ",
        VALE=-1.2799999999999999e-4,
    ),
)

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-2,
    VALE_CALC=-7.748934521503564e-07,
    VALE_REFE=-7.74893e-07,
    NOM_PARA="EPXX",
    TABLE=TAB_EPS,
    FILTRE=_F(CRITERE="ABSOLU", PRECISION=9.9999999999999995e-07, NOM_PARA="EPZZ", VALE=-1.92e-4),
)

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-2,
    VALE_CALC=-1.0331912695338015e-06,
    VALE_REFE=-1.0331900000000001e-06,
    NOM_PARA="EPXX",
    TABLE=TAB_EPS,
    FILTRE=_F(
        CRITERE="ABSOLU",
        PRECISION=9.9999999999999995e-07,
        NOM_PARA="EPZZ",
        VALE=-2.5599999999999999e-4,
    ),
)

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-2,
    VALE_CALC=-1.2914890869172467e-06,
    VALE_REFE=-1.29149e-06,
    NOM_PARA="EPXX",
    TABLE=TAB_EPS,
    FILTRE=_F(
        CRITERE="ABSOLU",
        PRECISION=9.9999999999999995e-07,
        NOM_PARA="EPZZ",
        VALE=-3.2000000000000003e-4,
    ),
)

# TEST DE LA DEFORMATION ELASTIQUE EPSI_YY PAR RAPPORT
# A UN CALCUL ASTER ELASTIQUE LINEAIRE
TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-2,
    VALE_CALC=-7.10373216489877e-07,
    VALE_REFE=-7.10373e-07,
    NOM_PARA="EPYY",
    TABLE=TAB_EPS,
    FILTRE=_F(
        CRITERE="ABSOLU",
        PRECISION=9.9999999999999995e-07,
        NOM_PARA="EPZZ",
        VALE=-6.3999999999999997e-05,
    ),
)

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-2,
    VALE_CALC=-1.4207464329797697e-06,
    VALE_REFE=-1.4207499999999999e-06,
    NOM_PARA="EPYY",
    TABLE=TAB_EPS,
    FILTRE=_F(
        CRITERE="ABSOLU",
        PRECISION=9.9999999999999995e-07,
        NOM_PARA="EPZZ",
        VALE=-1.2799999999999999e-4,
    ),
)

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-2,
    VALE_CALC=-2.131119649469668e-06,
    VALE_REFE=-2.1311199999999999e-06,
    NOM_PARA="EPYY",
    TABLE=TAB_EPS,
    FILTRE=_F(CRITERE="ABSOLU", PRECISION=9.9999999999999995e-07, NOM_PARA="EPZZ", VALE=-1.92e-4),
)

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-2,
    VALE_CALC=-2.8414928659595673e-06,
    VALE_REFE=-2.84149e-06,
    NOM_PARA="EPYY",
    TABLE=TAB_EPS,
    FILTRE=_F(
        CRITERE="ABSOLU",
        PRECISION=9.9999999999999995e-07,
        NOM_PARA="EPZZ",
        VALE=-2.5599999999999999e-4,
    ),
)

TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="AUTRE_ASTER",
    PRECISION=1.0e-2,
    VALE_CALC=-3.551866082449477e-06,
    VALE_REFE=-3.5518699999999998e-06,
    NOM_PARA="EPYY",
    TABLE=TAB_EPS,
    FILTRE=_F(
        CRITERE="ABSOLU",
        PRECISION=9.9999999999999995e-07,
        NOM_PARA="EPZZ",
        VALE=-3.2000000000000003e-4,
    ),
)

FIN()
