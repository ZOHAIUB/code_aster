# coding=utf-8
# --------------------------------------------------------------------
# Copyright (C) 1991 - 2025 - EDF R&D - www.code-aster.org
# This file is part of code_aster.
#
# code_aster is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# code_aster is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with code_aster.  If not, see <http://www.gnu.org/licenses/>.
# --------------------------------------------------------------------

#####################################################################################
# CODE_ASTER COMMANDS FILE AUTOMATICALLY GENERATED BY PI, SALOME_MECA PIPING MODULE
#####################################################################################
#
# LOADING CASE : LCAS_3 / CHARGE UNIFORME (Operating weight)
#
#####################################################################################
# CODE_ASTER COMMANDS FILE AUTOMATICALLY GENERATED BY PI, SALOME_MECA PIPING MODULE
#####################################################################################
#
# LOADING CASE : LCAS_1 / RACCOURCISSEMENT (Thermal expansion)
#
DEBUT(CODE="OUI")
#
# MESH AND FE-MODEL DEFINITIONS ##########
MESH = LIRE_MAILLAGE(FORMAT="MED", INFO=2)

#
MODEL = AFFE_MODELE(
    MAILLAGE=MESH,
    AFFE=(
        _F(GROUP_MA=["GE1", "GE2", "GE3", "GE4"], PHENOMENE="MECANIQUE", MODELISATION="POU_D_T"),
        _F(
            GROUP_MA=(
                "GBE01",
                "GBE02",
                "GBE03",
                "GBE06",  # barre horizontale est modelisee comme poutre pour mettre le noeud au milieu
                "GBE04",
                "GBE05",
            ),
            PHENOMENE="MECANIQUE",
            MODELISATION="BARRE",
        ),
    ),
)
#
# MATERIAL DEFINITIONS ##########
#
# MAT_1 : Mat 5 (Elastic)
MAT_1 = DEFI_MATERIAU(
    ELAS=_F(
        E=2.1e11,
        NU=0.25,  # pour que G/E = 0.4 comme dans AFNOR
        ALPHA=1.5e-5,  # coefficient dilatation thermique
    )
)

# TEMPERATURE FIELD ##########
ch_th = CREA_CHAMP(
    MODELE=MODEL,
    TYPE_CHAM="NOEU_TEMP_R",
    OPERATION="AFFE",
    AFFE=(
        _F(
            GROUP_MA=["GBE03"],
            NOM_CMP="TEMP",
            #  VALE     = -217.33
            VALE=0.0,
        ),
    ),
)
# Affectation d'un champ d'evolution thermique aux noeuds pour un seul instant du temps
dist_th = CREA_RESU(
    OPERATION="AFFE", TYPE_RESU="EVOL_THER", AFFE=_F(NOM_CHAM="TEMP", CHAM_GD=ch_th, INST=0.0)
)
#
# ASSIGNING MATERIAL TO ELEMENTS ##########
MATER_F = AFFE_MATERIAU(
    MAILLAGE=MESH,
    AFFE=(_F(TOUT="OUI", MATER=MAT_1),),
    # aplliquer la temperture de reference
    AFFE_VARC=(
        _F(GROUP_MA=("GBE03",), EVOL=dist_th, NOM_VARC="TEMP", NOM_CHAM="TEMP", VALE_REF=0.0),
    ),
)
#
# FINITE ELEMENTS CARACTERISTICS (DIAMETER, THICKNESS) ##########
FE_CAR = AFFE_CARA_ELEM(
    MODELE=MODEL,
    POUTRE=(
        _F(
            GROUP_MA=["GE1", "GE2", "GE3", "GE4"],
            SECTION="GENERALE",
            CARA=("A", "IY", "IZ", "JX", "AY", "AZ"),
            VALE=(15160.0 * 1.0e-6, 2.174e-4, 2.174e-4, 2 * 2.174e-4, 2.5, 2.5),
        ),
    ),
    BARRE=(
        _F(
            GROUP_MA=("GBE01", "GBE05", "GBE03", "GBE06"),
            SECTION="GENERALE",
            CARA=("A",),
            VALE=(4500.0 * 1.0e-6,),
        ),
        _F(GROUP_MA=["GBE02", "GBE04"], SECTION="GENERALE", CARA=("A",), VALE=(3480.0 * 1.0e-6,)),
    ),
    COQUE=(),
    ORIENTATION=(),
    DISCRET=(),
)
#
# MECHANICAL BOUNDARY CONDITIONS ##########
BOUND_C = AFFE_CHAR_MECA(
    MODELE=MODEL,
    DDL_IMPO=(
        _F(GROUP_NO=("GV01",), DX=0.0, DY=0.0, DZ=0.0, DRX=0),
        _F(
            GROUP_NO=("GV05",),
            #  DX = 0.,
            DY=0.0,
        ),
        # depl impo au milieu barre CE
        _F(
            GROUP_NO=("GV08",),
            DX=0.00652 / 2.0,
            #  DX = 0.0/2.0,
            DY=0,
        ),
        _F(
            GROUP_NO=("GV09",),
            #  DX = -0.0/2.0,
            DX=-0.00652 / 2.0,
            DY=0,
        ),
        _F(TOUT="OUI", DZ=0.0),
    ),
    DDL_POUTRE=(),
    LIAISON_DDL=(),
    # THERMAL STRATIFICATION (FANNY)
    PRE_EPSI=(
        # KY and KZ are exchanged because of the local axis chosen (local Y and local Z are axchanged)
    ),
)
#
# EXTERNAL FORCES AND CHARGING #############
#
# chargement lineique
FOR_UNI = AFFE_CHAR_MECA(
    MODELE=MODEL,
    FORCE_POUTRE=_F(
        GROUP_MA=["GE1", "GE2", "GE3", "GE4"], TYPE_CHARGE="FORCE", FX=0.0, FY=-50000.0, FZ=0.0
    ),
)

# LINEAR STATIC SOLVER ####################
STATIC = MECA_STATIQUE(
    MODELE=MODEL,
    CHAM_MATER=MATER_F,
    CARA_ELEM=FE_CAR,
    EXCIT=(_F(CHARGE=BOUND_C), _F(CHARGE=FOR_UNI)),
    #  SOLVEUR = _F(RESI_RELA=1e-05, NPREC=-1)
)
# calculer les efforts et reactions
STATIC = CALC_CHAMP(
    reuse=STATIC,
    RESULTAT=STATIC,
    MODELE=MODEL,
    CHAM_MATER=MATER_F,
    CARA_ELEM=FE_CAR,
    CONTRAINTE=("EFGE_NOEU", "EFGE_ELNO"),
    FORCE=("REAC_NODA", "FORC_NODA"),
)
IMPR_RESU(
    FORMAT="RESULTAT",
    UNITE=8,
    RESU=(
        _F(RESULTAT=STATIC, NOM_CHAM="EFGE_NOEU"),
        _F(RESULTAT=STATIC, NOM_CHAM="REAC_NODA"),
        _F(RESULTAT=STATIC, NOM_CHAM="DEPL"),
        _F(RESULTAT=STATIC, NOM_CHAM="EFGE_ELNO"),
    ),
)
# # TEST DEPL
TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            NOM_CHAM="DEPL",
            NOM_CMP="DY",
            GROUP_NO="GV02",
            RESULTAT=STATIC,
            VALE_CALC=0.0005362650506273886,
            VALE_REFE=0.0005428,
            REFERENCE="NON_DEFINI",
            CRITERE="RELATIF",
            PRECISION=1.203934e00 / 100.0,
        ),
    )
)
# TEST efforts et reaction
TEST_RESU(
    RESU=(
        _F(
            NUME_ORDRE=1,
            NOM_CHAM="EFGE_NOEU",
            NOM_CMP="MFZ",
            GROUP_NO="GV03",
            RESULTAT=STATIC,
            VALE_CALC=4.68862520377138e04,
            VALE_REFE=49249.5,
            REFERENCE="NON_DEFINI",
            CRITERE="RELATIF",
            PRECISION=4.798523e00 / 100.0,
        ),
        # _F(NUME_ORDRE= 1,
        #                    NOM_CHAM = 'EFGE_ELNO',
        #                    NOM_CMP='N',
        #                    GROUP_MA='GBE03',
        #                    GROUP_NO='GV08',
        #                    RESULTAT=STATIC,
        #                    VALE_CALC=6.73905644630596E+05,
        #                    VALE_REFE=584584.0,
        #                    REFERENCE='NON_DEFINI',
        #                    CRITERE='RELATIF',
        #                    PRECISION=1.527953E+01/100.,),
    )
)
# test effort moyen dans la barre membrane inferieure at mid point
# effort partie gauche
Eff_gau = CREA_TABLE(
    RESU=_F(
        RESULTAT=STATIC,
        NOM_CHAM="EFGE_ELNO",
        NOM_CMP="N",
        GROUP_MA="GBE03",
        # GROUP_NO='GV08',
    )
)
# effort partie droite
Eff_dro = CREA_TABLE(
    RESU=(
        _F(
            RESULTAT=STATIC,
            NOM_CHAM="EFGE_ELNO",
            NOM_CMP="N",
            GROUP_MA="GBE06",
            # GROUP_NO='GV08',
        ),
    )
)
# Effort moyen
Eff_comb = CALC_TABLE(
    TABLE=Eff_gau, ACTION=_F(OPERATION="COMB", TABLE=Eff_dro, NOM_PARA=("NOEUD"), RESTREINT="NON")
)
# Effort moyen
Eff_moy = CALC_TABLE(
    TABLE=Eff_comb, ACTION=_F(OPERATION="CALCUL", NOM_PARA=("N",), TYPE_CALCUL=("MOY"))
)
# IMPR_TABLE(UNITE = 8, TABLE = Eff_moy)
TEST_TABLE(
    CRITERE="RELATIF",
    REFERENCE="NON_DEFINI",
    VALE_CALC=5.88523e05,
    VALE_REFE=584584.0,
    NOM_PARA="N",
    TYPE_TEST="SOMM_ABS",
    TABLE=Eff_moy,
    PRECISION=6.737977e-01 / 100.0,
)

FIN()
